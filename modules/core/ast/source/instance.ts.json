{
  "type": "File",
  "start": 0,
  "end": 4302,
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 187,
      "column": 0
    }
  },
  "errors": [],
  "program": {
    "type": "Program",
    "start": 0,
    "end": 4302,
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 187,
        "column": 0
      }
    },
    "sourceType": "module",
    "interpreter": null,
    "body": [
      {
        "type": "ImportDeclaration",
        "start": 0,
        "end": 43,
        "loc": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 43
          }
        },
        "importKind": "value",
        "specifiers": [
          {
            "type": "ImportSpecifier",
            "start": 9,
            "end": 14,
            "loc": {
              "start": {
                "line": 1,
                "column": 9
              },
              "end": {
                "line": 1,
                "column": 14
              }
            },
            "imported": {
              "type": "Identifier",
              "start": 9,
              "end": 14,
              "loc": {
                "start": {
                  "line": 1,
                  "column": 9
                },
                "end": {
                  "line": 1,
                  "column": 14
                },
                "identifierName": "Actor"
              },
              "name": "Actor"
            },
            "local": {
              "type": "Identifier",
              "start": 9,
              "end": 14,
              "loc": {
                "start": {
                  "line": 1,
                  "column": 9
                },
                "end": {
                  "line": 1,
                  "column": 14
                },
                "identifierName": "Actor"
              },
              "name": "Actor"
            }
          }
        ],
        "source": {
          "type": "StringLiteral",
          "start": 22,
          "end": 42,
          "loc": {
            "start": {
              "line": 1,
              "column": 22
            },
            "end": {
              "line": 1,
              "column": 42
            }
          },
          "extra": {
            "rawValue": "./screenplay/actor",
            "raw": "'./screenplay/actor'"
          },
          "value": "./screenplay/actor"
        }
      },
      {
        "type": "ImportDeclaration",
        "start": 44,
        "end": 82,
        "loc": {
          "start": {
            "line": 2,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 38
          }
        },
        "importKind": "value",
        "specifiers": [
          {
            "type": "ImportSpecifier",
            "start": 53,
            "end": 61,
            "loc": {
              "start": {
                "line": 2,
                "column": 9
              },
              "end": {
                "line": 2,
                "column": 17
              }
            },
            "imported": {
              "type": "Identifier",
              "start": 53,
              "end": 61,
              "loc": {
                "start": {
                  "line": 2,
                  "column": 9
                },
                "end": {
                  "line": 2,
                  "column": 17
                },
                "identifierName": "Serenity"
              },
              "name": "Serenity"
            },
            "local": {
              "type": "Identifier",
              "start": 53,
              "end": 61,
              "loc": {
                "start": {
                  "line": 2,
                  "column": 9
                },
                "end": {
                  "line": 2,
                  "column": 17
                },
                "identifierName": "Serenity"
              },
              "name": "Serenity"
            }
          }
        ],
        "source": {
          "type": "StringLiteral",
          "start": 69,
          "end": 81,
          "loc": {
            "start": {
              "line": 2,
              "column": 25
            },
            "end": {
              "line": 2,
              "column": 37
            }
          },
          "extra": {
            "rawValue": "./Serenity",
            "raw": "'./Serenity'"
          },
          "value": "./Serenity"
        }
      },
      {
        "type": "ImportDeclaration",
        "start": 83,
        "end": 133,
        "loc": {
          "start": {
            "line": 3,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 50
          }
        },
        "importKind": "value",
        "specifiers": [
          {
            "type": "ImportSpecifier",
            "start": 92,
            "end": 106,
            "loc": {
              "start": {
                "line": 3,
                "column": 9
              },
              "end": {
                "line": 3,
                "column": 23
              }
            },
            "imported": {
              "type": "Identifier",
              "start": 92,
              "end": 106,
              "loc": {
                "start": {
                  "line": 3,
                  "column": 9
                },
                "end": {
                  "line": 3,
                  "column": 23
                },
                "identifierName": "SerenityConfig"
              },
              "name": "SerenityConfig"
            },
            "local": {
              "type": "Identifier",
              "start": 92,
              "end": 106,
              "loc": {
                "start": {
                  "line": 3,
                  "column": 9
                },
                "end": {
                  "line": 3,
                  "column": 23
                },
                "identifierName": "SerenityConfig"
              },
              "name": "SerenityConfig"
            }
          }
        ],
        "source": {
          "type": "StringLiteral",
          "start": 114,
          "end": 132,
          "loc": {
            "start": {
              "line": 3,
              "column": 31
            },
            "end": {
              "line": 3,
              "column": 49
            }
          },
          "extra": {
            "rawValue": "./SerenityConfig",
            "raw": "'./SerenityConfig'"
          },
          "value": "./SerenityConfig"
        }
      },
      {
        "type": "ImportDeclaration",
        "start": 134,
        "end": 172,
        "loc": {
          "start": {
            "line": 4,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 38
          }
        },
        "importKind": "value",
        "specifiers": [
          {
            "type": "ImportSpecifier",
            "start": 143,
            "end": 147,
            "loc": {
              "start": {
                "line": 4,
                "column": 9
              },
              "end": {
                "line": 4,
                "column": 13
              }
            },
            "imported": {
              "type": "Identifier",
              "start": 143,
              "end": 147,
              "loc": {
                "start": {
                  "line": 4,
                  "column": 9
                },
                "end": {
                  "line": 4,
                  "column": 13
                },
                "identifierName": "Cast"
              },
              "name": "Cast"
            },
            "local": {
              "type": "Identifier",
              "start": 143,
              "end": 147,
              "loc": {
                "start": {
                  "line": 4,
                  "column": 9
                },
                "end": {
                  "line": 4,
                  "column": 13
                },
                "identifierName": "Cast"
              },
              "name": "Cast"
            }
          },
          {
            "type": "ImportSpecifier",
            "start": 149,
            "end": 154,
            "loc": {
              "start": {
                "line": 4,
                "column": 15
              },
              "end": {
                "line": 4,
                "column": 20
              }
            },
            "imported": {
              "type": "Identifier",
              "start": 149,
              "end": 154,
              "loc": {
                "start": {
                  "line": 4,
                  "column": 15
                },
                "end": {
                  "line": 4,
                  "column": 20
                },
                "identifierName": "Clock"
              },
              "name": "Clock"
            },
            "local": {
              "type": "Identifier",
              "start": 149,
              "end": 154,
              "loc": {
                "start": {
                  "line": 4,
                  "column": 15
                },
                "end": {
                  "line": 4,
                  "column": 20
                },
                "identifierName": "Clock"
              },
              "name": "Clock"
            }
          }
        ],
        "source": {
          "type": "StringLiteral",
          "start": 162,
          "end": 171,
          "loc": {
            "start": {
              "line": 4,
              "column": 28
            },
            "end": {
              "line": 4,
              "column": 37
            }
          },
          "extra": {
            "rawValue": "./stage",
            "raw": "'./stage'"
          },
          "value": "./stage"
        }
      },
      {
        "type": "VariableDeclaration",
        "start": 174,
        "end": 200,
        "loc": {
          "start": {
            "line": 6,
            "column": 0
          },
          "end": {
            "line": 6,
            "column": 26
          }
        },
        "declarations": [
          {
            "type": "VariableDeclarator",
            "start": 180,
            "end": 199,
            "loc": {
              "start": {
                "line": 6,
                "column": 6
              },
              "end": {
                "line": 6,
                "column": 25
              }
            },
            "id": {
              "type": "Identifier",
              "start": 180,
              "end": 185,
              "loc": {
                "start": {
                  "line": 6,
                  "column": 6
                },
                "end": {
                  "line": 6,
                  "column": 11
                },
                "identifierName": "clock"
              },
              "name": "clock"
            },
            "init": {
              "type": "NewExpression",
              "start": 188,
              "end": 199,
              "loc": {
                "start": {
                  "line": 6,
                  "column": 14
                },
                "end": {
                  "line": 6,
                  "column": 25
                }
              },
              "callee": {
                "type": "Identifier",
                "start": 192,
                "end": 197,
                "loc": {
                  "start": {
                    "line": 6,
                    "column": 18
                  },
                  "end": {
                    "line": 6,
                    "column": 23
                  },
                  "identifierName": "Clock"
                },
                "name": "Clock"
              },
              "arguments": []
            }
          }
        ],
        "kind": "const"
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 202,
        "end": 246,
        "loc": {
          "start": {
            "line": 8,
            "column": 0
          },
          "end": {
            "line": 8,
            "column": 44
          }
        },
        "exportKind": "value",
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 209,
          "end": 246,
          "loc": {
            "start": {
              "line": 8,
              "column": 7
            },
            "end": {
              "line": 8,
              "column": 44
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 215,
              "end": 245,
              "loc": {
                "start": {
                  "line": 8,
                  "column": 13
                },
                "end": {
                  "line": 8,
                  "column": 43
                }
              },
              "id": {
                "type": "Identifier",
                "start": 215,
                "end": 223,
                "loc": {
                  "start": {
                    "line": 8,
                    "column": 13
                  },
                  "end": {
                    "line": 8,
                    "column": 21
                  },
                  "identifierName": "serenity"
                },
                "name": "serenity"
              },
              "init": {
                "type": "NewExpression",
                "start": 226,
                "end": 245,
                "loc": {
                  "start": {
                    "line": 8,
                    "column": 24
                  },
                  "end": {
                    "line": 8,
                    "column": 43
                  }
                },
                "callee": {
                  "type": "Identifier",
                  "start": 230,
                  "end": 238,
                  "loc": {
                    "start": {
                      "line": 8,
                      "column": 28
                    },
                    "end": {
                      "line": 8,
                      "column": 36
                    },
                    "identifierName": "Serenity"
                  },
                  "name": "Serenity"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "start": 239,
                    "end": 244,
                    "loc": {
                      "start": {
                        "line": 8,
                        "column": 37
                      },
                      "end": {
                        "line": 8,
                        "column": 42
                      },
                      "identifierName": "clock"
                    },
                    "name": "clock"
                  }
                ]
              }
            }
          ],
          "kind": "const",
          "leadingComments": [],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * @desc \n *  \n * @lineNumber \n * 24 \n * @param \n * {SerenityConfig} config \n ",
              "start": 247,
              "end": 331,
              "loc": {
                "start": {
                  "line": 9,
                  "column": 0
                },
                "end": {
                  "line": 16,
                  "column": 3
                }
              }
            },
            {
              "type": "CommentBlock",
              "value": "*\n * @desc\n *  Configures Serenity/JS. Every call to this function\n *  replaces the previous configuration provided,\n *  so this function should called be exactly once\n *  in your test suite.\n *\n *  This function is an alias for {@link Serenity#configure}.\n *\n * @param {SerenityConfig} config\n * @return {void}\n *\n * @see {@link Serenity#configure}\n ",
              "start": 334,
              "end": 689,
              "loc": {
                "start": {
                  "line": 19,
                  "column": 0
                },
                "end": {
                  "line": 32,
                  "column": 3
                }
              }
            }
          ]
        },
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * @desc \n *  \n * @lineNumber \n * 24 \n * @param \n * {SerenityConfig} config \n ",
            "start": 247,
            "end": 331,
            "loc": {
              "start": {
                "line": 9,
                "column": 0
              },
              "end": {
                "line": 16,
                "column": 3
              }
            }
          },
          {
            "type": "CommentBlock",
            "value": "*\n * @desc\n *  Configures Serenity/JS. Every call to this function\n *  replaces the previous configuration provided,\n *  so this function should called be exactly once\n *  in your test suite.\n *\n *  This function is an alias for {@link Serenity#configure}.\n *\n * @param {SerenityConfig} config\n * @return {void}\n *\n * @see {@link Serenity#configure}\n ",
            "start": 334,
            "end": 689,
            "loc": {
              "start": {
                "line": 19,
                "column": 0
              },
              "end": {
                "line": 32,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 690,
        "end": 782,
        "loc": {
          "start": {
            "line": 33,
            "column": 0
          },
          "end": {
            "line": 35,
            "column": 1
          }
        },
        "exportKind": "value",
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "FunctionDeclaration",
          "start": 697,
          "end": 782,
          "loc": {
            "start": {
              "line": 33,
              "column": 7
            },
            "end": {
              "line": 35,
              "column": 1
            }
          },
          "id": {
            "type": "Identifier",
            "start": 706,
            "end": 715,
            "loc": {
              "start": {
                "line": 33,
                "column": 16
              },
              "end": {
                "line": 33,
                "column": 25
              },
              "identifierName": "configure"
            },
            "name": "configure"
          },
          "generator": false,
          "async": false,
          "params": [
            {
              "type": "Identifier",
              "start": 716,
              "end": 738,
              "loc": {
                "start": {
                  "line": 33,
                  "column": 26
                },
                "end": {
                  "line": 33,
                  "column": 48
                },
                "identifierName": "config"
              },
              "name": "config",
              "typeAnnotation": {
                "type": "TSTypeAnnotation",
                "start": 722,
                "end": 738,
                "loc": {
                  "start": {
                    "line": 33,
                    "column": 32
                  },
                  "end": {
                    "line": 33,
                    "column": 48
                  }
                },
                "typeAnnotation": {
                  "type": "TSTypeReference",
                  "start": 724,
                  "end": 738,
                  "loc": {
                    "start": {
                      "line": 33,
                      "column": 34
                    },
                    "end": {
                      "line": 33,
                      "column": 48
                    }
                  },
                  "typeName": {
                    "type": "Identifier",
                    "start": 724,
                    "end": 738,
                    "loc": {
                      "start": {
                        "line": 33,
                        "column": 34
                      },
                      "end": {
                        "line": 33,
                        "column": 48
                      },
                      "identifierName": "SerenityConfig"
                    },
                    "name": "SerenityConfig"
                  }
                }
              }
            }
          ],
          "body": {
            "type": "BlockStatement",
            "start": 740,
            "end": 782,
            "loc": {
              "start": {
                "line": 33,
                "column": 50
              },
              "end": {
                "line": 35,
                "column": 1
              }
            },
            "body": [
              {
                "type": "ReturnStatement",
                "start": 746,
                "end": 780,
                "loc": {
                  "start": {
                    "line": 34,
                    "column": 4
                  },
                  "end": {
                    "line": 34,
                    "column": 38
                  }
                },
                "argument": {
                  "type": "CallExpression",
                  "start": 753,
                  "end": 779,
                  "loc": {
                    "start": {
                      "line": 34,
                      "column": 11
                    },
                    "end": {
                      "line": 34,
                      "column": 37
                    }
                  },
                  "callee": {
                    "type": "MemberExpression",
                    "start": 753,
                    "end": 771,
                    "loc": {
                      "start": {
                        "line": 34,
                        "column": 11
                      },
                      "end": {
                        "line": 34,
                        "column": 29
                      }
                    },
                    "object": {
                      "type": "Identifier",
                      "start": 753,
                      "end": 761,
                      "loc": {
                        "start": {
                          "line": 34,
                          "column": 11
                        },
                        "end": {
                          "line": 34,
                          "column": 19
                        },
                        "identifierName": "serenity"
                      },
                      "name": "serenity"
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 762,
                      "end": 771,
                      "loc": {
                        "start": {
                          "line": 34,
                          "column": 20
                        },
                        "end": {
                          "line": 34,
                          "column": 29
                        },
                        "identifierName": "configure"
                      },
                      "name": "configure"
                    },
                    "computed": false
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "start": 772,
                      "end": 778,
                      "loc": {
                        "start": {
                          "line": 34,
                          "column": 30
                        },
                        "end": {
                          "line": 34,
                          "column": 36
                        },
                        "identifierName": "config"
                      },
                      "name": "config"
                    }
                  ]
                }
              }
            ],
            "directives": []
          },
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * @desc \n *  \n * @lineNumber \n * 24 \n * @param \n * {SerenityConfig} config \n ",
              "start": 247,
              "end": 331,
              "loc": {
                "start": {
                  "line": 9,
                  "column": 0
                },
                "end": {
                  "line": 16,
                  "column": 3
                }
              }
            },
            {
              "type": "CommentBlock",
              "value": "*\n * @desc\n *  Configures Serenity/JS. Every call to this function\n *  replaces the previous configuration provided,\n *  so this function should called be exactly once\n *  in your test suite.\n *\n *  This function is an alias for {@link Serenity#configure}.\n *\n * @param {SerenityConfig} config\n * @return {void}\n *\n * @see {@link Serenity#configure}\n ",
              "start": 334,
              "end": 689,
              "loc": {
                "start": {
                  "line": 19,
                  "column": 0
                },
                "end": {
                  "line": 32,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * @desc \n *  \n * @lineNumber \n * 70 \n * @param \n * {Cast} actors \n ",
              "start": 783,
              "end": 857,
              "loc": {
                "start": {
                  "line": 36,
                  "column": 0
                },
                "end": {
                  "line": 43,
                  "column": 3
                }
              }
            },
            {
              "type": "CommentBlock",
              "value": "*\n * @desc\n *  Re-configures Serenity/JS with a new {@link Cast} of {@link Actor}s\n *  you'd like to use in any subsequent call to {@link actorCalled}.\n *\n *  This function provides an alternative to calling {@link Actor#whoCan}\n *  directly in your tests and you'd typically us it in a \"before each\"\n *  hook of your test runner of choice.\n *\n *  This function is an alias for {@link Serenity#engage}.\n *\n * @example <caption>Engaging a cast of actors</caption>\n *  import { Actor, Cast } from '@serenity-js/core';\n *\n *  class Actors implements Cast {\n *      prepare(actor: Actor) {\n *          return actor.whoCan(\n *              // ... abilities you'd like the Actor to have\n *          );\n *      }\n *  }\n *\n * engage(new Actors();\n *\n * @example <caption>Usage with Jasmine</caption>\n *  import 'jasmine';\n *\n *  beforeEach(() => engage(new Actors()));\n *\n * @example <caption>Usage with Cucumber</caption>\n *  import { Before } from 'cucumber';\n *\n *  Before(() => engage(new Actors());\n *\n * @param {Cast} actors\n * @returns {void}\n *\n * @see {@link Actor}\n * @see {@link Cast}\n *\n * @see {@link Serenity#engage}\n ",
              "start": 860,
              "end": 1988,
              "loc": {
                "start": {
                  "line": 46,
                  "column": 0
                },
                "end": {
                  "line": 87,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * @desc \n *  \n * @lineNumber \n * 24 \n * @param \n * {SerenityConfig} config \n ",
            "start": 247,
            "end": 331,
            "loc": {
              "start": {
                "line": 9,
                "column": 0
              },
              "end": {
                "line": 16,
                "column": 3
              }
            }
          },
          {
            "type": "CommentBlock",
            "value": "*\n * @desc\n *  Configures Serenity/JS. Every call to this function\n *  replaces the previous configuration provided,\n *  so this function should called be exactly once\n *  in your test suite.\n *\n *  This function is an alias for {@link Serenity#configure}.\n *\n * @param {SerenityConfig} config\n * @return {void}\n *\n * @see {@link Serenity#configure}\n ",
            "start": 334,
            "end": 689,
            "loc": {
              "start": {
                "line": 19,
                "column": 0
              },
              "end": {
                "line": 32,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * @desc \n *  \n * @lineNumber \n * 70 \n * @param \n * {Cast} actors \n ",
            "start": 783,
            "end": 857,
            "loc": {
              "start": {
                "line": 36,
                "column": 0
              },
              "end": {
                "line": 43,
                "column": 3
              }
            }
          },
          {
            "type": "CommentBlock",
            "value": "*\n * @desc\n *  Re-configures Serenity/JS with a new {@link Cast} of {@link Actor}s\n *  you'd like to use in any subsequent call to {@link actorCalled}.\n *\n *  This function provides an alternative to calling {@link Actor#whoCan}\n *  directly in your tests and you'd typically us it in a \"before each\"\n *  hook of your test runner of choice.\n *\n *  This function is an alias for {@link Serenity#engage}.\n *\n * @example <caption>Engaging a cast of actors</caption>\n *  import { Actor, Cast } from '@serenity-js/core';\n *\n *  class Actors implements Cast {\n *      prepare(actor: Actor) {\n *          return actor.whoCan(\n *              // ... abilities you'd like the Actor to have\n *          );\n *      }\n *  }\n *\n * engage(new Actors();\n *\n * @example <caption>Usage with Jasmine</caption>\n *  import 'jasmine';\n *\n *  beforeEach(() => engage(new Actors()));\n *\n * @example <caption>Usage with Cucumber</caption>\n *  import { Before } from 'cucumber';\n *\n *  Before(() => engage(new Actors());\n *\n * @param {Cast} actors\n * @returns {void}\n *\n * @see {@link Actor}\n * @see {@link Cast}\n *\n * @see {@link Serenity#engage}\n ",
            "start": 860,
            "end": 1988,
            "loc": {
              "start": {
                "line": 46,
                "column": 0
              },
              "end": {
                "line": 87,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 1989,
        "end": 2065,
        "loc": {
          "start": {
            "line": 88,
            "column": 0
          },
          "end": {
            "line": 90,
            "column": 1
          }
        },
        "exportKind": "value",
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "FunctionDeclaration",
          "start": 1996,
          "end": 2065,
          "loc": {
            "start": {
              "line": 88,
              "column": 7
            },
            "end": {
              "line": 90,
              "column": 1
            }
          },
          "id": {
            "type": "Identifier",
            "start": 2005,
            "end": 2011,
            "loc": {
              "start": {
                "line": 88,
                "column": 16
              },
              "end": {
                "line": 88,
                "column": 22
              },
              "identifierName": "engage"
            },
            "name": "engage"
          },
          "generator": false,
          "async": false,
          "params": [
            {
              "type": "Identifier",
              "start": 2012,
              "end": 2024,
              "loc": {
                "start": {
                  "line": 88,
                  "column": 23
                },
                "end": {
                  "line": 88,
                  "column": 35
                },
                "identifierName": "actors"
              },
              "name": "actors",
              "typeAnnotation": {
                "type": "TSTypeAnnotation",
                "start": 2018,
                "end": 2024,
                "loc": {
                  "start": {
                    "line": 88,
                    "column": 29
                  },
                  "end": {
                    "line": 88,
                    "column": 35
                  }
                },
                "typeAnnotation": {
                  "type": "TSTypeReference",
                  "start": 2020,
                  "end": 2024,
                  "loc": {
                    "start": {
                      "line": 88,
                      "column": 31
                    },
                    "end": {
                      "line": 88,
                      "column": 35
                    }
                  },
                  "typeName": {
                    "type": "Identifier",
                    "start": 2020,
                    "end": 2024,
                    "loc": {
                      "start": {
                        "line": 88,
                        "column": 31
                      },
                      "end": {
                        "line": 88,
                        "column": 35
                      },
                      "identifierName": "Cast"
                    },
                    "name": "Cast"
                  }
                }
              }
            }
          ],
          "body": {
            "type": "BlockStatement",
            "start": 2026,
            "end": 2065,
            "loc": {
              "start": {
                "line": 88,
                "column": 37
              },
              "end": {
                "line": 90,
                "column": 1
              }
            },
            "body": [
              {
                "type": "ReturnStatement",
                "start": 2032,
                "end": 2063,
                "loc": {
                  "start": {
                    "line": 89,
                    "column": 4
                  },
                  "end": {
                    "line": 89,
                    "column": 35
                  }
                },
                "argument": {
                  "type": "CallExpression",
                  "start": 2039,
                  "end": 2062,
                  "loc": {
                    "start": {
                      "line": 89,
                      "column": 11
                    },
                    "end": {
                      "line": 89,
                      "column": 34
                    }
                  },
                  "callee": {
                    "type": "MemberExpression",
                    "start": 2039,
                    "end": 2054,
                    "loc": {
                      "start": {
                        "line": 89,
                        "column": 11
                      },
                      "end": {
                        "line": 89,
                        "column": 26
                      }
                    },
                    "object": {
                      "type": "Identifier",
                      "start": 2039,
                      "end": 2047,
                      "loc": {
                        "start": {
                          "line": 89,
                          "column": 11
                        },
                        "end": {
                          "line": 89,
                          "column": 19
                        },
                        "identifierName": "serenity"
                      },
                      "name": "serenity"
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 2048,
                      "end": 2054,
                      "loc": {
                        "start": {
                          "line": 89,
                          "column": 20
                        },
                        "end": {
                          "line": 89,
                          "column": 26
                        },
                        "identifierName": "engage"
                      },
                      "name": "engage"
                    },
                    "computed": false
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "start": 2055,
                      "end": 2061,
                      "loc": {
                        "start": {
                          "line": 89,
                          "column": 27
                        },
                        "end": {
                          "line": 89,
                          "column": 33
                        },
                        "identifierName": "actors"
                      },
                      "name": "actors"
                    }
                  ]
                }
              }
            ],
            "directives": []
          },
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * @desc \n *  \n * @lineNumber \n * 70 \n * @param \n * {Cast} actors \n ",
              "start": 783,
              "end": 857,
              "loc": {
                "start": {
                  "line": 36,
                  "column": 0
                },
                "end": {
                  "line": 43,
                  "column": 3
                }
              }
            },
            {
              "type": "CommentBlock",
              "value": "*\n * @desc\n *  Re-configures Serenity/JS with a new {@link Cast} of {@link Actor}s\n *  you'd like to use in any subsequent call to {@link actorCalled}.\n *\n *  This function provides an alternative to calling {@link Actor#whoCan}\n *  directly in your tests and you'd typically us it in a \"before each\"\n *  hook of your test runner of choice.\n *\n *  This function is an alias for {@link Serenity#engage}.\n *\n * @example <caption>Engaging a cast of actors</caption>\n *  import { Actor, Cast } from '@serenity-js/core';\n *\n *  class Actors implements Cast {\n *      prepare(actor: Actor) {\n *          return actor.whoCan(\n *              // ... abilities you'd like the Actor to have\n *          );\n *      }\n *  }\n *\n * engage(new Actors();\n *\n * @example <caption>Usage with Jasmine</caption>\n *  import 'jasmine';\n *\n *  beforeEach(() => engage(new Actors()));\n *\n * @example <caption>Usage with Cucumber</caption>\n *  import { Before } from 'cucumber';\n *\n *  Before(() => engage(new Actors());\n *\n * @param {Cast} actors\n * @returns {void}\n *\n * @see {@link Actor}\n * @see {@link Cast}\n *\n * @see {@link Serenity#engage}\n ",
              "start": 860,
              "end": 1988,
              "loc": {
                "start": {
                  "line": 46,
                  "column": 0
                },
                "end": {
                  "line": 87,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * @desc \n *  \n * @lineNumber \n * 112 \n * @param \n * {string} name \n * @return \n * {Actor} \n ",
              "start": 2066,
              "end": 2165,
              "loc": {
                "start": {
                  "line": 91,
                  "column": 0
                },
                "end": {
                  "line": 100,
                  "column": 3
                }
              }
            },
            {
              "type": "CommentBlock",
              "value": "*\n * @desc\n *  Instantiates or retrieves an actor {@link Actor}\n *  called `name` if one has already been instantiated.\n *\n *  This method is an alias for {@link Serenity#theActorCalled}.\n *\n * @example <caption>Usage with Jasmine</caption>\n *   import 'jasmine';\n *   import { actorCalled } from '@serenity-js/core';\n *\n *   describe('Feature', () => {\n *\n *      it('should have some behaviour', () =>\n *          actorCalled('James').attemptsTo(\n *              // ... activities\n *          ));\n *   });\n *\n * @example <caption>Usage with Cucumber</caption>\n *   import { actorCalled } from '@serenity-js/core';\n *   import { Given } from 'cucumber';\n *\n *   Given(/(.*?) is a registered user/, (name: string) =>\n *      actorCalled(name).attemptsTo(\n *              // ... activities\n *          ));\n *\n * @param {string} name\n *  The name of the actor to instantiate or retrieve\n *\n * @returns {Actor}\n *\n * @see {@link engage}\n * @see {@link Actor}\n * @see {@link Cast}\n * @see {@link Serenity#theActorCalled}\n ",
              "start": 2168,
              "end": 3190,
              "loc": {
                "start": {
                  "line": 103,
                  "column": 0
                },
                "end": {
                  "line": 140,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * @desc \n *  \n * @lineNumber \n * 70 \n * @param \n * {Cast} actors \n ",
            "start": 783,
            "end": 857,
            "loc": {
              "start": {
                "line": 36,
                "column": 0
              },
              "end": {
                "line": 43,
                "column": 3
              }
            }
          },
          {
            "type": "CommentBlock",
            "value": "*\n * @desc\n *  Re-configures Serenity/JS with a new {@link Cast} of {@link Actor}s\n *  you'd like to use in any subsequent call to {@link actorCalled}.\n *\n *  This function provides an alternative to calling {@link Actor#whoCan}\n *  directly in your tests and you'd typically us it in a \"before each\"\n *  hook of your test runner of choice.\n *\n *  This function is an alias for {@link Serenity#engage}.\n *\n * @example <caption>Engaging a cast of actors</caption>\n *  import { Actor, Cast } from '@serenity-js/core';\n *\n *  class Actors implements Cast {\n *      prepare(actor: Actor) {\n *          return actor.whoCan(\n *              // ... abilities you'd like the Actor to have\n *          );\n *      }\n *  }\n *\n * engage(new Actors();\n *\n * @example <caption>Usage with Jasmine</caption>\n *  import 'jasmine';\n *\n *  beforeEach(() => engage(new Actors()));\n *\n * @example <caption>Usage with Cucumber</caption>\n *  import { Before } from 'cucumber';\n *\n *  Before(() => engage(new Actors());\n *\n * @param {Cast} actors\n * @returns {void}\n *\n * @see {@link Actor}\n * @see {@link Cast}\n *\n * @see {@link Serenity#engage}\n ",
            "start": 860,
            "end": 1988,
            "loc": {
              "start": {
                "line": 46,
                "column": 0
              },
              "end": {
                "line": 87,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * @desc \n *  \n * @lineNumber \n * 112 \n * @param \n * {string} name \n * @return \n * {Actor} \n ",
            "start": 2066,
            "end": 2165,
            "loc": {
              "start": {
                "line": 91,
                "column": 0
              },
              "end": {
                "line": 100,
                "column": 3
              }
            }
          },
          {
            "type": "CommentBlock",
            "value": "*\n * @desc\n *  Instantiates or retrieves an actor {@link Actor}\n *  called `name` if one has already been instantiated.\n *\n *  This method is an alias for {@link Serenity#theActorCalled}.\n *\n * @example <caption>Usage with Jasmine</caption>\n *   import 'jasmine';\n *   import { actorCalled } from '@serenity-js/core';\n *\n *   describe('Feature', () => {\n *\n *      it('should have some behaviour', () =>\n *          actorCalled('James').attemptsTo(\n *              // ... activities\n *          ));\n *   });\n *\n * @example <caption>Usage with Cucumber</caption>\n *   import { actorCalled } from '@serenity-js/core';\n *   import { Given } from 'cucumber';\n *\n *   Given(/(.*?) is a registered user/, (name: string) =>\n *      actorCalled(name).attemptsTo(\n *              // ... activities\n *          ));\n *\n * @param {string} name\n *  The name of the actor to instantiate or retrieve\n *\n * @returns {Actor}\n *\n * @see {@link engage}\n * @see {@link Actor}\n * @see {@link Cast}\n * @see {@link Serenity#theActorCalled}\n ",
            "start": 2168,
            "end": 3190,
            "loc": {
              "start": {
                "line": 103,
                "column": 0
              },
              "end": {
                "line": 140,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 3191,
        "end": 3285,
        "loc": {
          "start": {
            "line": 141,
            "column": 0
          },
          "end": {
            "line": 143,
            "column": 1
          }
        },
        "exportKind": "value",
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "FunctionDeclaration",
          "start": 3198,
          "end": 3285,
          "loc": {
            "start": {
              "line": 141,
              "column": 7
            },
            "end": {
              "line": 143,
              "column": 1
            }
          },
          "id": {
            "type": "Identifier",
            "start": 3207,
            "end": 3218,
            "loc": {
              "start": {
                "line": 141,
                "column": 16
              },
              "end": {
                "line": 141,
                "column": 27
              },
              "identifierName": "actorCalled"
            },
            "name": "actorCalled"
          },
          "generator": false,
          "async": false,
          "params": [
            {
              "type": "Identifier",
              "start": 3219,
              "end": 3231,
              "loc": {
                "start": {
                  "line": 141,
                  "column": 28
                },
                "end": {
                  "line": 141,
                  "column": 40
                },
                "identifierName": "name"
              },
              "name": "name",
              "typeAnnotation": {
                "type": "TSTypeAnnotation",
                "start": 3223,
                "end": 3231,
                "loc": {
                  "start": {
                    "line": 141,
                    "column": 32
                  },
                  "end": {
                    "line": 141,
                    "column": 40
                  }
                },
                "typeAnnotation": {
                  "type": "TSStringKeyword",
                  "start": 3225,
                  "end": 3231,
                  "loc": {
                    "start": {
                      "line": 141,
                      "column": 34
                    },
                    "end": {
                      "line": 141,
                      "column": 40
                    }
                  }
                }
              }
            }
          ],
          "returnType": {
            "type": "TSTypeAnnotation",
            "start": 3232,
            "end": 3239,
            "loc": {
              "start": {
                "line": 141,
                "column": 41
              },
              "end": {
                "line": 141,
                "column": 48
              }
            },
            "typeAnnotation": {
              "type": "TSTypeReference",
              "start": 3234,
              "end": 3239,
              "loc": {
                "start": {
                  "line": 141,
                  "column": 43
                },
                "end": {
                  "line": 141,
                  "column": 48
                }
              },
              "typeName": {
                "type": "Identifier",
                "start": 3234,
                "end": 3239,
                "loc": {
                  "start": {
                    "line": 141,
                    "column": 43
                  },
                  "end": {
                    "line": 141,
                    "column": 48
                  },
                  "identifierName": "Actor"
                },
                "name": "Actor"
              }
            }
          },
          "body": {
            "type": "BlockStatement",
            "start": 3240,
            "end": 3285,
            "loc": {
              "start": {
                "line": 141,
                "column": 49
              },
              "end": {
                "line": 143,
                "column": 1
              }
            },
            "body": [
              {
                "type": "ReturnStatement",
                "start": 3246,
                "end": 3283,
                "loc": {
                  "start": {
                    "line": 142,
                    "column": 4
                  },
                  "end": {
                    "line": 142,
                    "column": 41
                  }
                },
                "argument": {
                  "type": "CallExpression",
                  "start": 3253,
                  "end": 3282,
                  "loc": {
                    "start": {
                      "line": 142,
                      "column": 11
                    },
                    "end": {
                      "line": 142,
                      "column": 40
                    }
                  },
                  "callee": {
                    "type": "MemberExpression",
                    "start": 3253,
                    "end": 3276,
                    "loc": {
                      "start": {
                        "line": 142,
                        "column": 11
                      },
                      "end": {
                        "line": 142,
                        "column": 34
                      }
                    },
                    "object": {
                      "type": "Identifier",
                      "start": 3253,
                      "end": 3261,
                      "loc": {
                        "start": {
                          "line": 142,
                          "column": 11
                        },
                        "end": {
                          "line": 142,
                          "column": 19
                        },
                        "identifierName": "serenity"
                      },
                      "name": "serenity"
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 3262,
                      "end": 3276,
                      "loc": {
                        "start": {
                          "line": 142,
                          "column": 20
                        },
                        "end": {
                          "line": 142,
                          "column": 34
                        },
                        "identifierName": "theActorCalled"
                      },
                      "name": "theActorCalled"
                    },
                    "computed": false
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "start": 3277,
                      "end": 3281,
                      "loc": {
                        "start": {
                          "line": 142,
                          "column": 35
                        },
                        "end": {
                          "line": 142,
                          "column": 39
                        },
                        "identifierName": "name"
                      },
                      "name": "name"
                    }
                  ]
                }
              }
            ],
            "directives": []
          },
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * @desc \n *  \n * @lineNumber \n * 112 \n * @param \n * {string} name \n * @return \n * {Actor} \n ",
              "start": 2066,
              "end": 2165,
              "loc": {
                "start": {
                  "line": 91,
                  "column": 0
                },
                "end": {
                  "line": 100,
                  "column": 3
                }
              }
            },
            {
              "type": "CommentBlock",
              "value": "*\n * @desc\n *  Instantiates or retrieves an actor {@link Actor}\n *  called `name` if one has already been instantiated.\n *\n *  This method is an alias for {@link Serenity#theActorCalled}.\n *\n * @example <caption>Usage with Jasmine</caption>\n *   import 'jasmine';\n *   import { actorCalled } from '@serenity-js/core';\n *\n *   describe('Feature', () => {\n *\n *      it('should have some behaviour', () =>\n *          actorCalled('James').attemptsTo(\n *              // ... activities\n *          ));\n *   });\n *\n * @example <caption>Usage with Cucumber</caption>\n *   import { actorCalled } from '@serenity-js/core';\n *   import { Given } from 'cucumber';\n *\n *   Given(/(.*?) is a registered user/, (name: string) =>\n *      actorCalled(name).attemptsTo(\n *              // ... activities\n *          ));\n *\n * @param {string} name\n *  The name of the actor to instantiate or retrieve\n *\n * @returns {Actor}\n *\n * @see {@link engage}\n * @see {@link Actor}\n * @see {@link Cast}\n * @see {@link Serenity#theActorCalled}\n ",
              "start": 2168,
              "end": 3190,
              "loc": {
                "start": {
                  "line": 103,
                  "column": 0
                },
                "end": {
                  "line": 140,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * @desc \n *  \n * @lineNumber \n * 146 \n * @return \n * {Actor} \n ",
              "start": 3286,
              "end": 3356,
              "loc": {
                "start": {
                  "line": 144,
                  "column": 0
                },
                "end": {
                  "line": 151,
                  "column": 3
                }
              }
            },
            {
              "type": "CommentBlock",
              "value": "*\n * @desc\n *  Retrieves an actor who was last instantiated or retrieved\n *  using {@link actorCalled}.\n *\n *  This function is particularly useful when automating Cucumber scenarios.\n *\n *  This function is an alias for {@link Serenity#theActorInTheSpotlight}.\n *\n * @example <caption>Usage with Cucumber</caption>\n *   import { actorCalled } from '@serenity-js/core';\n *   import { Given, When } from 'cucumber';\n *\n *   Given(/(.*?) is a registered user/, (name: string) =>\n *      actorCalled(name).attemptsTo(\n *              // ... activities\n *          ));\n *\n *   When(/(?:he|she|they) browse their recent orders/, () =>\n *      actorInTheSpotlight().attemptsTo(\n *              // ... activities\n *          ));\n *\n * @returns {Actor}\n *\n * @see {@link engage}\n * @see {@link actorCalled}\n * @see {@link Actor}\n * @see {@link Cast}\n ",
              "start": 3359,
              "end": 4206,
              "loc": {
                "start": {
                  "line": 154,
                  "column": 0
                },
                "end": {
                  "line": 183,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * @desc \n *  \n * @lineNumber \n * 112 \n * @param \n * {string} name \n * @return \n * {Actor} \n ",
            "start": 2066,
            "end": 2165,
            "loc": {
              "start": {
                "line": 91,
                "column": 0
              },
              "end": {
                "line": 100,
                "column": 3
              }
            }
          },
          {
            "type": "CommentBlock",
            "value": "*\n * @desc\n *  Instantiates or retrieves an actor {@link Actor}\n *  called `name` if one has already been instantiated.\n *\n *  This method is an alias for {@link Serenity#theActorCalled}.\n *\n * @example <caption>Usage with Jasmine</caption>\n *   import 'jasmine';\n *   import { actorCalled } from '@serenity-js/core';\n *\n *   describe('Feature', () => {\n *\n *      it('should have some behaviour', () =>\n *          actorCalled('James').attemptsTo(\n *              // ... activities\n *          ));\n *   });\n *\n * @example <caption>Usage with Cucumber</caption>\n *   import { actorCalled } from '@serenity-js/core';\n *   import { Given } from 'cucumber';\n *\n *   Given(/(.*?) is a registered user/, (name: string) =>\n *      actorCalled(name).attemptsTo(\n *              // ... activities\n *          ));\n *\n * @param {string} name\n *  The name of the actor to instantiate or retrieve\n *\n * @returns {Actor}\n *\n * @see {@link engage}\n * @see {@link Actor}\n * @see {@link Cast}\n * @see {@link Serenity#theActorCalled}\n ",
            "start": 2168,
            "end": 3190,
            "loc": {
              "start": {
                "line": 103,
                "column": 0
              },
              "end": {
                "line": 140,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * @desc \n *  \n * @lineNumber \n * 146 \n * @return \n * {Actor} \n ",
            "start": 3286,
            "end": 3356,
            "loc": {
              "start": {
                "line": 144,
                "column": 0
              },
              "end": {
                "line": 151,
                "column": 3
              }
            }
          },
          {
            "type": "CommentBlock",
            "value": "*\n * @desc\n *  Retrieves an actor who was last instantiated or retrieved\n *  using {@link actorCalled}.\n *\n *  This function is particularly useful when automating Cucumber scenarios.\n *\n *  This function is an alias for {@link Serenity#theActorInTheSpotlight}.\n *\n * @example <caption>Usage with Cucumber</caption>\n *   import { actorCalled } from '@serenity-js/core';\n *   import { Given, When } from 'cucumber';\n *\n *   Given(/(.*?) is a registered user/, (name: string) =>\n *      actorCalled(name).attemptsTo(\n *              // ... activities\n *          ));\n *\n *   When(/(?:he|she|they) browse their recent orders/, () =>\n *      actorInTheSpotlight().attemptsTo(\n *              // ... activities\n *          ));\n *\n * @returns {Actor}\n *\n * @see {@link engage}\n * @see {@link actorCalled}\n * @see {@link Actor}\n * @see {@link Cast}\n ",
            "start": 3359,
            "end": 4206,
            "loc": {
              "start": {
                "line": 154,
                "column": 0
              },
              "end": {
                "line": 183,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 4207,
        "end": 4301,
        "loc": {
          "start": {
            "line": 184,
            "column": 0
          },
          "end": {
            "line": 186,
            "column": 1
          }
        },
        "exportKind": "value",
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "FunctionDeclaration",
          "start": 4214,
          "end": 4301,
          "loc": {
            "start": {
              "line": 184,
              "column": 7
            },
            "end": {
              "line": 186,
              "column": 1
            }
          },
          "id": {
            "type": "Identifier",
            "start": 4223,
            "end": 4242,
            "loc": {
              "start": {
                "line": 184,
                "column": 16
              },
              "end": {
                "line": 184,
                "column": 35
              },
              "identifierName": "actorInTheSpotlight"
            },
            "name": "actorInTheSpotlight"
          },
          "generator": false,
          "async": false,
          "params": [],
          "returnType": {
            "type": "TSTypeAnnotation",
            "start": 4244,
            "end": 4251,
            "loc": {
              "start": {
                "line": 184,
                "column": 37
              },
              "end": {
                "line": 184,
                "column": 44
              }
            },
            "typeAnnotation": {
              "type": "TSTypeReference",
              "start": 4246,
              "end": 4251,
              "loc": {
                "start": {
                  "line": 184,
                  "column": 39
                },
                "end": {
                  "line": 184,
                  "column": 44
                }
              },
              "typeName": {
                "type": "Identifier",
                "start": 4246,
                "end": 4251,
                "loc": {
                  "start": {
                    "line": 184,
                    "column": 39
                  },
                  "end": {
                    "line": 184,
                    "column": 44
                  },
                  "identifierName": "Actor"
                },
                "name": "Actor"
              }
            }
          },
          "body": {
            "type": "BlockStatement",
            "start": 4252,
            "end": 4301,
            "loc": {
              "start": {
                "line": 184,
                "column": 45
              },
              "end": {
                "line": 186,
                "column": 1
              }
            },
            "body": [
              {
                "type": "ReturnStatement",
                "start": 4258,
                "end": 4299,
                "loc": {
                  "start": {
                    "line": 185,
                    "column": 4
                  },
                  "end": {
                    "line": 185,
                    "column": 45
                  }
                },
                "argument": {
                  "type": "CallExpression",
                  "start": 4265,
                  "end": 4298,
                  "loc": {
                    "start": {
                      "line": 185,
                      "column": 11
                    },
                    "end": {
                      "line": 185,
                      "column": 44
                    }
                  },
                  "callee": {
                    "type": "MemberExpression",
                    "start": 4265,
                    "end": 4296,
                    "loc": {
                      "start": {
                        "line": 185,
                        "column": 11
                      },
                      "end": {
                        "line": 185,
                        "column": 42
                      }
                    },
                    "object": {
                      "type": "Identifier",
                      "start": 4265,
                      "end": 4273,
                      "loc": {
                        "start": {
                          "line": 185,
                          "column": 11
                        },
                        "end": {
                          "line": 185,
                          "column": 19
                        },
                        "identifierName": "serenity"
                      },
                      "name": "serenity"
                    },
                    "property": {
                      "type": "Identifier",
                      "start": 4274,
                      "end": 4296,
                      "loc": {
                        "start": {
                          "line": 185,
                          "column": 20
                        },
                        "end": {
                          "line": 185,
                          "column": 42
                        },
                        "identifierName": "theActorInTheSpotlight"
                      },
                      "name": "theActorInTheSpotlight"
                    },
                    "computed": false
                  },
                  "arguments": []
                }
              }
            ],
            "directives": []
          },
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * @desc \n *  \n * @lineNumber \n * 146 \n * @return \n * {Actor} \n ",
              "start": 3286,
              "end": 3356,
              "loc": {
                "start": {
                  "line": 144,
                  "column": 0
                },
                "end": {
                  "line": 151,
                  "column": 3
                }
              }
            },
            {
              "type": "CommentBlock",
              "value": "*\n * @desc\n *  Retrieves an actor who was last instantiated or retrieved\n *  using {@link actorCalled}.\n *\n *  This function is particularly useful when automating Cucumber scenarios.\n *\n *  This function is an alias for {@link Serenity#theActorInTheSpotlight}.\n *\n * @example <caption>Usage with Cucumber</caption>\n *   import { actorCalled } from '@serenity-js/core';\n *   import { Given, When } from 'cucumber';\n *\n *   Given(/(.*?) is a registered user/, (name: string) =>\n *      actorCalled(name).attemptsTo(\n *              // ... activities\n *          ));\n *\n *   When(/(?:he|she|they) browse their recent orders/, () =>\n *      actorInTheSpotlight().attemptsTo(\n *              // ... activities\n *          ));\n *\n * @returns {Actor}\n *\n * @see {@link engage}\n * @see {@link actorCalled}\n * @see {@link Actor}\n * @see {@link Cast}\n ",
              "start": 3359,
              "end": 4206,
              "loc": {
                "start": {
                  "line": 154,
                  "column": 0
                },
                "end": {
                  "line": 183,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": []
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * @desc \n *  \n * @lineNumber \n * 146 \n * @return \n * {Actor} \n ",
            "start": 3286,
            "end": 3356,
            "loc": {
              "start": {
                "line": 144,
                "column": 0
              },
              "end": {
                "line": 151,
                "column": 3
              }
            }
          },
          {
            "type": "CommentBlock",
            "value": "*\n * @desc\n *  Retrieves an actor who was last instantiated or retrieved\n *  using {@link actorCalled}.\n *\n *  This function is particularly useful when automating Cucumber scenarios.\n *\n *  This function is an alias for {@link Serenity#theActorInTheSpotlight}.\n *\n * @example <caption>Usage with Cucumber</caption>\n *   import { actorCalled } from '@serenity-js/core';\n *   import { Given, When } from 'cucumber';\n *\n *   Given(/(.*?) is a registered user/, (name: string) =>\n *      actorCalled(name).attemptsTo(\n *              // ... activities\n *          ));\n *\n *   When(/(?:he|she|they) browse their recent orders/, () =>\n *      actorInTheSpotlight().attemptsTo(\n *              // ... activities\n *          ));\n *\n * @returns {Actor}\n *\n * @see {@link engage}\n * @see {@link actorCalled}\n * @see {@link Actor}\n * @see {@link Cast}\n ",
            "start": 3359,
            "end": 4206,
            "loc": {
              "start": {
                "line": 154,
                "column": 0
              },
              "end": {
                "line": 183,
                "column": 3
              }
            }
          }
        ]
      }
    ],
    "directives": []
  },
  "comments": [
    {
      "type": "CommentBlock",
      "value": "*\n * @desc \n *  \n * @lineNumber \n * 24 \n * @param \n * {SerenityConfig} config \n ",
      "start": 247,
      "end": 331,
      "loc": {
        "start": {
          "line": 9,
          "column": 0
        },
        "end": {
          "line": 16,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @desc\n *  Configures Serenity/JS. Every call to this function\n *  replaces the previous configuration provided,\n *  so this function should called be exactly once\n *  in your test suite.\n *\n *  This function is an alias for {@link Serenity#configure}.\n *\n * @param {SerenityConfig} config\n * @return {void}\n *\n * @see {@link Serenity#configure}\n ",
      "start": 334,
      "end": 689,
      "loc": {
        "start": {
          "line": 19,
          "column": 0
        },
        "end": {
          "line": 32,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @desc \n *  \n * @lineNumber \n * 70 \n * @param \n * {Cast} actors \n ",
      "start": 783,
      "end": 857,
      "loc": {
        "start": {
          "line": 36,
          "column": 0
        },
        "end": {
          "line": 43,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @desc\n *  Re-configures Serenity/JS with a new {@link Cast} of {@link Actor}s\n *  you'd like to use in any subsequent call to {@link actorCalled}.\n *\n *  This function provides an alternative to calling {@link Actor#whoCan}\n *  directly in your tests and you'd typically us it in a \"before each\"\n *  hook of your test runner of choice.\n *\n *  This function is an alias for {@link Serenity#engage}.\n *\n * @example <caption>Engaging a cast of actors</caption>\n *  import { Actor, Cast } from '@serenity-js/core';\n *\n *  class Actors implements Cast {\n *      prepare(actor: Actor) {\n *          return actor.whoCan(\n *              // ... abilities you'd like the Actor to have\n *          );\n *      }\n *  }\n *\n * engage(new Actors();\n *\n * @example <caption>Usage with Jasmine</caption>\n *  import 'jasmine';\n *\n *  beforeEach(() => engage(new Actors()));\n *\n * @example <caption>Usage with Cucumber</caption>\n *  import { Before } from 'cucumber';\n *\n *  Before(() => engage(new Actors());\n *\n * @param {Cast} actors\n * @returns {void}\n *\n * @see {@link Actor}\n * @see {@link Cast}\n *\n * @see {@link Serenity#engage}\n ",
      "start": 860,
      "end": 1988,
      "loc": {
        "start": {
          "line": 46,
          "column": 0
        },
        "end": {
          "line": 87,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @desc \n *  \n * @lineNumber \n * 112 \n * @param \n * {string} name \n * @return \n * {Actor} \n ",
      "start": 2066,
      "end": 2165,
      "loc": {
        "start": {
          "line": 91,
          "column": 0
        },
        "end": {
          "line": 100,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @desc\n *  Instantiates or retrieves an actor {@link Actor}\n *  called `name` if one has already been instantiated.\n *\n *  This method is an alias for {@link Serenity#theActorCalled}.\n *\n * @example <caption>Usage with Jasmine</caption>\n *   import 'jasmine';\n *   import { actorCalled } from '@serenity-js/core';\n *\n *   describe('Feature', () => {\n *\n *      it('should have some behaviour', () =>\n *          actorCalled('James').attemptsTo(\n *              // ... activities\n *          ));\n *   });\n *\n * @example <caption>Usage with Cucumber</caption>\n *   import { actorCalled } from '@serenity-js/core';\n *   import { Given } from 'cucumber';\n *\n *   Given(/(.*?) is a registered user/, (name: string) =>\n *      actorCalled(name).attemptsTo(\n *              // ... activities\n *          ));\n *\n * @param {string} name\n *  The name of the actor to instantiate or retrieve\n *\n * @returns {Actor}\n *\n * @see {@link engage}\n * @see {@link Actor}\n * @see {@link Cast}\n * @see {@link Serenity#theActorCalled}\n ",
      "start": 2168,
      "end": 3190,
      "loc": {
        "start": {
          "line": 103,
          "column": 0
        },
        "end": {
          "line": 140,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @desc \n *  \n * @lineNumber \n * 146 \n * @return \n * {Actor} \n ",
      "start": 3286,
      "end": 3356,
      "loc": {
        "start": {
          "line": 144,
          "column": 0
        },
        "end": {
          "line": 151,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @desc\n *  Retrieves an actor who was last instantiated or retrieved\n *  using {@link actorCalled}.\n *\n *  This function is particularly useful when automating Cucumber scenarios.\n *\n *  This function is an alias for {@link Serenity#theActorInTheSpotlight}.\n *\n * @example <caption>Usage with Cucumber</caption>\n *   import { actorCalled } from '@serenity-js/core';\n *   import { Given, When } from 'cucumber';\n *\n *   Given(/(.*?) is a registered user/, (name: string) =>\n *      actorCalled(name).attemptsTo(\n *              // ... activities\n *          ));\n *\n *   When(/(?:he|she|they) browse their recent orders/, () =>\n *      actorInTheSpotlight().attemptsTo(\n *              // ... activities\n *          ));\n *\n * @returns {Actor}\n *\n * @see {@link engage}\n * @see {@link actorCalled}\n * @see {@link Actor}\n * @see {@link Cast}\n ",
      "start": 3359,
      "end": 4206,
      "loc": {
        "start": {
          "line": 154,
          "column": 0
        },
        "end": {
          "line": 183,
          "column": 3
        }
      }
    }
  ]
}