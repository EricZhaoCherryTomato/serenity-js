[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Check",
    "externalLink": "/modules/assertions/class/src/Check.ts~Check.html",
    "longname": "@serenity-js/assertions~Check",
    "memberof": "src/.imports-from-assertions.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "Ensure",
    "externalLink": "/modules/assertions/class/src/Ensure.ts~Ensure.html",
    "longname": "@serenity-js/assertions~Ensure",
    "memberof": "src/.imports-from-assertions.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "Expectation",
    "externalLink": "/modules/assertions/class/src/Expectation.ts~Expectation.html",
    "longname": "@serenity-js/assertions~Expectation",
    "memberof": "src/.imports-from-assertions.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "and",
    "externalLink": "/modules/assertions/function/src/expectations/and.ts~and.html",
    "longname": "@serenity-js/assertions/lib/expectations~and",
    "memberof": "src/.imports-from-assertions.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "contain",
    "externalLink": "/modules/assertions/function/src/expectations/contain.ts~contain.html",
    "longname": "@serenity-js/assertions/lib/expectations~contain",
    "memberof": "src/.imports-from-assertions.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "containAtLeastOneItemThat",
    "externalLink": "/modules/assertions/function/src/expectations/containAtLeastOneItemThat.ts~containAtLeastOneItemThat.html",
    "longname": "@serenity-js/assertions/lib/expectations~containAtLeastOneItemThat",
    "memberof": "src/.imports-from-assertions.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "containItemsWhereEachItem",
    "externalLink": "/modules/assertions/function/src/expectations/containItemsWhereEachItem.ts~containItemsWhereEachItem.html",
    "longname": "@serenity-js/assertions/lib/expectations~containItemsWhereEachItem",
    "memberof": "src/.imports-from-assertions.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "endsWith",
    "externalLink": "/modules/assertions/function/src/expectations/endsWith.ts~endsWith.html",
    "longname": "@serenity-js/assertions/lib/expectations~endsWith",
    "memberof": "src/.imports-from-assertions.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "equals",
    "externalLink": "/modules/assertions/function/src/expectations/equals.ts~equals.html",
    "longname": "@serenity-js/assertions/lib/expectations~equals",
    "memberof": "src/.imports-from-assertions.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "includes",
    "externalLink": "/modules/assertions/function/src/expectations/includes.ts~includes.html",
    "longname": "@serenity-js/assertions/lib/expectations~includes",
    "memberof": "src/.imports-from-assertions.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "isAfter",
    "externalLink": "/modules/assertions/function/src/expectations/isAfter.ts~isAfter.html",
    "longname": "@serenity-js/assertions/lib/expectations~isAfter",
    "memberof": "src/.imports-from-assertions.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "isBefore",
    "externalLink": "/modules/assertions/function/src/expectations/isBefore.ts~isBefore.html",
    "longname": "@serenity-js/assertions/lib/expectations~isBefore",
    "memberof": "src/.imports-from-assertions.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "isGreaterThan",
    "externalLink": "/modules/assertions/function/src/expectations/isGreaterThan.ts~isGreaterThan.html",
    "longname": "@serenity-js/assertions/lib/expectations~isGreaterThan",
    "memberof": "src/.imports-from-assertions.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "isLessThan",
    "externalLink": "/modules/assertions/function/src/expectations/isLessThan.ts~isLessThan.html",
    "longname": "@serenity-js/assertions/lib/expectations~isLessThan",
    "memberof": "src/.imports-from-assertions.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "matches",
    "externalLink": "/modules/assertions/function/src/expectations/matches.ts~matches.html",
    "longname": "@serenity-js/assertions/lib/expectations~matches",
    "memberof": "src/.imports-from-assertions.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "not",
    "externalLink": "/modules/assertions/function/src/expectations/not.ts~not.html",
    "longname": "@serenity-js/assertions/lib/expectations~not",
    "memberof": "src/.imports-from-assertions.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "or",
    "externalLink": "/modules/assertions/function/src/expectations/or.ts~or.html",
    "longname": "@serenity-js/assertions/lib/expectations~or",
    "memberof": "src/.imports-from-assertions.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "property",
    "externalLink": "/modules/assertions/function/src/expectations/property.ts~property.html",
    "longname": "@serenity-js/assertions/lib/expectations~property",
    "memberof": "src/.imports-from-assertions.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "startsWith",
    "externalLink": "/modules/assertions/function/src/expectations/startsWith.ts~startsWith.html",
    "longname": "@serenity-js/assertions/lib/expectations~startsWith",
    "memberof": "src/.imports-from-assertions.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Outcome",
    "externalLink": "/modules/assertions/class/src/outcomes.ts~Outcome.html",
    "longname": "@serenity-js/assertions~Outcome",
    "memberof": "src/.imports-from-assertions.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "ExpectationMet",
    "externalLink": "/modules/assertions/class/src/outcomes.ts~ExpectationMet.html",
    "longname": "@serenity-js/assertions~ExpectationMet",
    "memberof": "src/.imports-from-assertions.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "ExpectationNotMet",
    "externalLink": "/modules/assertions/class/src/outcomes.ts~ExpectationNotMet.html",
    "longname": "@serenity-js/assertions~ExpectationNotMet",
    "memberof": "src/.imports-from-assertions.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "Serenity",
    "externalLink": "/modules/core/class/src/Serenity.ts~Serenity.html",
    "longname": "@serenity-js/core~Serenity",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "SerenityConfig",
    "externalLink": "/modules/core/class/src/SerenityConfig.ts~SerenityConfig.html",
    "longname": "@serenity-js/core~SerenityConfig",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "AssertionError",
    "externalLink": "/modules/core/class/src/errors/AssertionError.ts~AssertionError.html",
    "longname": "@serenity-js/core/lib/errors~AssertionError",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "ConfigurationError",
    "externalLink": "/modules/core/class/src/errors/ConfigurationError.ts~ConfigurationError.html",
    "longname": "@serenity-js/core/lib/errors~ConfigurationError",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "ImplementationPendingError",
    "externalLink": "/modules/core/class/src/errors/ImplementationPendingError.ts~ImplementationPendingError.html",
    "longname": "@serenity-js/core/lib/errors~ImplementationPendingError",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "LogicError",
    "externalLink": "/modules/core/class/src/errors/LogicError.ts~LogicError.html",
    "longname": "@serenity-js/core/lib/errors~LogicError",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "RuntimeError",
    "externalLink": "/modules/core/class/src/errors/RuntimeError.ts~RuntimeError.html",
    "longname": "@serenity-js/core/lib/errors~RuntimeError",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "TestCompromisedError",
    "externalLink": "/modules/core/class/src/errors/TestCompromisedError.ts~TestCompromisedError.html",
    "longname": "@serenity-js/core/lib/errors~TestCompromisedError",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "UnknownError",
    "externalLink": "/modules/core/class/src/errors/UnknownError.ts~UnknownError.html",
    "longname": "@serenity-js/core/lib/errors~UnknownError",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "ActivityFinished",
    "externalLink": "/modules/core/class/src/events/ActivityFinished.ts~ActivityFinished.html",
    "longname": "@serenity-js/core/lib/events~ActivityFinished",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "ActivityRelatedArtifactArchived",
    "externalLink": "/modules/core/class/src/events/ActivityRelatedArtifactArchived.ts~ActivityRelatedArtifactArchived.html",
    "longname": "@serenity-js/core/lib/events~ActivityRelatedArtifactArchived",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "ActivityRelatedArtifactGenerated",
    "externalLink": "/modules/core/class/src/events/ActivityRelatedArtifactGenerated.ts~ActivityRelatedArtifactGenerated.html",
    "longname": "@serenity-js/core/lib/events~ActivityRelatedArtifactGenerated",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "ActivityStarts",
    "externalLink": "/modules/core/class/src/events/ActivityStarts.ts~ActivityStarts.html",
    "longname": "@serenity-js/core/lib/events~ActivityStarts",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "ArtifactArchived",
    "externalLink": "/modules/core/class/src/events/ArtifactArchived.ts~ArtifactArchived.html",
    "longname": "@serenity-js/core/lib/events~ArtifactArchived",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "ArtifactGenerated",
    "externalLink": "/modules/core/class/src/events/ArtifactGenerated.ts~ArtifactGenerated.html",
    "longname": "@serenity-js/core/lib/events~ArtifactGenerated",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "AsyncOperationAttempted",
    "externalLink": "/modules/core/class/src/events/AsyncOperationAttempted.ts~AsyncOperationAttempted.html",
    "longname": "@serenity-js/core/lib/events~AsyncOperationAttempted",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "AsyncOperationCompleted",
    "externalLink": "/modules/core/class/src/events/AsyncOperationCompleted.ts~AsyncOperationCompleted.html",
    "longname": "@serenity-js/core/lib/events~AsyncOperationCompleted",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "AsyncOperationFailed",
    "externalLink": "/modules/core/class/src/events/AsyncOperationFailed.ts~AsyncOperationFailed.html",
    "longname": "@serenity-js/core/lib/events~AsyncOperationFailed",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "DomainEvent",
    "externalLink": "/modules/core/class/src/events/DomainEvent.ts~DomainEvent.html",
    "longname": "@serenity-js/core/lib/events~DomainEvent",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "FeatureNarrativeDetected",
    "externalLink": "/modules/core/class/src/events/FeatureNarrativeDetected.ts~FeatureNarrativeDetected.html",
    "longname": "@serenity-js/core/lib/events~FeatureNarrativeDetected",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "InteractionFinished",
    "externalLink": "/modules/core/class/src/events/InteractionFinished.ts~InteractionFinished.html",
    "longname": "@serenity-js/core/lib/events~InteractionFinished",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "InteractionStarts",
    "externalLink": "/modules/core/class/src/events/InteractionStarts.ts~InteractionStarts.html",
    "longname": "@serenity-js/core/lib/events~InteractionStarts",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "SceneBackgroundDetected",
    "externalLink": "/modules/core/class/src/events/SceneBackgroundDetected.ts~SceneBackgroundDetected.html",
    "longname": "@serenity-js/core/lib/events~SceneBackgroundDetected",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "SceneDescriptionDetected",
    "externalLink": "/modules/core/class/src/events/SceneDescriptionDetected.ts~SceneDescriptionDetected.html",
    "longname": "@serenity-js/core/lib/events~SceneDescriptionDetected",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "external",
    "name": "SceneFinished",
    "externalLink": "/modules/core/class/src/events/SceneFinished.ts~SceneFinished.html",
    "longname": "@serenity-js/core/lib/events~SceneFinished",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 49,
    "kind": "external",
    "name": "SceneFinishes",
    "externalLink": "/modules/core/class/src/events/SceneFinishes.ts~SceneFinishes.html",
    "longname": "@serenity-js/core/lib/events~SceneFinishes",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 50,
    "kind": "external",
    "name": "SceneParametersDetected",
    "externalLink": "/modules/core/class/src/events/SceneParametersDetected.ts~SceneParametersDetected.html",
    "longname": "@serenity-js/core/lib/events~SceneParametersDetected",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 51,
    "kind": "external",
    "name": "SceneSequenceDetected",
    "externalLink": "/modules/core/class/src/events/SceneSequenceDetected.ts~SceneSequenceDetected.html",
    "longname": "@serenity-js/core/lib/events~SceneSequenceDetected",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 52,
    "kind": "external",
    "name": "SceneStarts",
    "externalLink": "/modules/core/class/src/events/SceneStarts.ts~SceneStarts.html",
    "longname": "@serenity-js/core/lib/events~SceneStarts",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 53,
    "kind": "external",
    "name": "SceneTagged",
    "externalLink": "/modules/core/class/src/events/SceneTagged.ts~SceneTagged.html",
    "longname": "@serenity-js/core/lib/events~SceneTagged",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 54,
    "kind": "external",
    "name": "SceneTemplateDetected",
    "externalLink": "/modules/core/class/src/events/SceneTemplateDetected.ts~SceneTemplateDetected.html",
    "longname": "@serenity-js/core/lib/events~SceneTemplateDetected",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 55,
    "kind": "external",
    "name": "TaskFinished",
    "externalLink": "/modules/core/class/src/events/TaskFinished.ts~TaskFinished.html",
    "longname": "@serenity-js/core/lib/events~TaskFinished",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 56,
    "kind": "external",
    "name": "TaskStarts",
    "externalLink": "/modules/core/class/src/events/TaskStarts.ts~TaskStarts.html",
    "longname": "@serenity-js/core/lib/events~TaskStarts",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 57,
    "kind": "external",
    "name": "TestRunFinished",
    "externalLink": "/modules/core/class/src/events/TestRunFinished.ts~TestRunFinished.html",
    "longname": "@serenity-js/core/lib/events~TestRunFinished",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 58,
    "kind": "external",
    "name": "TestRunFinishes",
    "externalLink": "/modules/core/class/src/events/TestRunFinishes.ts~TestRunFinishes.html",
    "longname": "@serenity-js/core/lib/events~TestRunFinishes",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 59,
    "kind": "external",
    "name": "TestRunnerDetected",
    "externalLink": "/modules/core/class/src/events/TestRunnerDetected.ts~TestRunnerDetected.html",
    "longname": "@serenity-js/core/lib/events~TestRunnerDetected",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 60,
    "kind": "external",
    "name": "TestSuiteFinished",
    "externalLink": "/modules/core/class/src/events/TestSuiteFinished.ts~TestSuiteFinished.html",
    "longname": "@serenity-js/core/lib/events~TestSuiteFinished",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 61,
    "kind": "external",
    "name": "TestSuiteStarts",
    "externalLink": "/modules/core/class/src/events/TestSuiteStarts.ts~TestSuiteStarts.html",
    "longname": "@serenity-js/core/lib/events~TestSuiteStarts",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 62,
    "kind": "external",
    "name": "serenity",
    "externalLink": "/modules/core/variable/src/instance.ts~serenity.html",
    "longname": "@serenity-js/core~serenity",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 63,
    "kind": "external",
    "name": "configure",
    "externalLink": "/modules/core/function/src/instance.ts~configure.html",
    "longname": "@serenity-js/core~configure",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 64,
    "kind": "external",
    "name": "engage",
    "externalLink": "/modules/core/function/src/instance.ts~engage.html",
    "longname": "@serenity-js/core~engage",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 65,
    "kind": "external",
    "name": "actorCalled",
    "externalLink": "/modules/core/function/src/instance.ts~actorCalled.html",
    "longname": "@serenity-js/core~actorCalled",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 66,
    "kind": "external",
    "name": "actorInTheSpotlight",
    "externalLink": "/modules/core/function/src/instance.ts~actorInTheSpotlight.html",
    "longname": "@serenity-js/core~actorInTheSpotlight",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 67,
    "kind": "external",
    "name": "AssertionReportDiffer",
    "externalLink": "/modules/core/class/src/io/AssertionReportDiffer.ts~AssertionReportDiffer.html",
    "longname": "@serenity-js/core/lib/io~AssertionReportDiffer",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 68,
    "kind": "external",
    "name": "SerialisedError",
    "externalLink": "/modules/core/class/src/io/ErrorSerialiser.ts~SerialisedError.html",
    "longname": "@serenity-js/core/lib/io~SerialisedError",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 69,
    "kind": "external",
    "name": "ErrorSerialiser",
    "externalLink": "/modules/core/class/src/io/ErrorSerialiser.ts~ErrorSerialiser.html",
    "longname": "@serenity-js/core/lib/io~ErrorSerialiser",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 70,
    "kind": "external",
    "name": "FileSystem",
    "externalLink": "/modules/core/class/src/io/FileSystem.ts~FileSystem.html",
    "longname": "@serenity-js/core/lib/io~FileSystem",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 71,
    "kind": "external",
    "name": "FileSystemLocation",
    "externalLink": "/modules/core/class/src/io/FileSystemLocation.ts~FileSystemLocation.html",
    "longname": "@serenity-js/core/lib/io~FileSystemLocation",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 72,
    "kind": "external",
    "name": "ModuleLoader",
    "externalLink": "/modules/core/class/src/io/ModuleLoader.ts~ModuleLoader.html",
    "longname": "@serenity-js/core/lib/io~ModuleLoader",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 73,
    "kind": "external",
    "name": "Path",
    "externalLink": "/modules/core/class/src/io/Path.ts~Path.html",
    "longname": "@serenity-js/core/lib/io~Path",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 74,
    "kind": "external",
    "name": "Version",
    "externalLink": "/modules/core/class/src/io/Version.ts~Version.html",
    "longname": "@serenity-js/core/lib/io~Version",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 75,
    "kind": "external",
    "name": "formatted",
    "externalLink": "/modules/core/function/src/io/formatted.ts~formatted.html",
    "longname": "@serenity-js/core/lib/io~formatted",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 76,
    "kind": "external",
    "name": "inspected",
    "externalLink": "/modules/core/function/src/io/inspected.ts~inspected.html",
    "longname": "@serenity-js/core/lib/io~inspected",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 77,
    "kind": "external",
    "name": "trimmed",
    "externalLink": "/modules/core/function/src/io/trimmed.ts~trimmed.html",
    "longname": "@serenity-js/core/lib/io~trimmed",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 78,
    "kind": "external",
    "name": "ActivityDetails",
    "externalLink": "/modules/core/class/src/model/ActivityDetails.ts~ActivityDetails.html",
    "longname": "@serenity-js/core/lib/model~ActivityDetails",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 79,
    "kind": "external",
    "name": "Artifact",
    "externalLink": "/modules/core/class/src/model/Artifact.ts~Artifact.html",
    "longname": "@serenity-js/core/lib/model~Artifact",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 80,
    "kind": "external",
    "name": "Category",
    "externalLink": "/modules/core/class/src/model/Category.ts~Category.html",
    "longname": "@serenity-js/core/lib/model~Category",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 81,
    "kind": "external",
    "name": "CorrelationId",
    "externalLink": "/modules/core/class/src/model/CorrelationId.ts~CorrelationId.html",
    "longname": "@serenity-js/core/lib/model~CorrelationId",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 82,
    "kind": "external",
    "name": "Description",
    "externalLink": "/modules/core/class/src/model/Description.ts~Description.html",
    "longname": "@serenity-js/core/lib/model~Description",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 83,
    "kind": "external",
    "name": "Duration",
    "externalLink": "/modules/core/class/src/model/Duration.ts~Duration.html",
    "longname": "@serenity-js/core/lib/model~Duration",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 84,
    "kind": "external",
    "name": "Name",
    "externalLink": "/modules/core/class/src/model/Name.ts~Name.html",
    "longname": "@serenity-js/core/lib/model~Name",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 85,
    "kind": "external",
    "name": "ScenarioDetails",
    "externalLink": "/modules/core/class/src/model/ScenarioDetails.ts~ScenarioDetails.html",
    "longname": "@serenity-js/core/lib/model~ScenarioDetails",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 86,
    "kind": "external",
    "name": "ScenarioParameters",
    "externalLink": "/modules/core/class/src/model/ScenarioParameters.ts~ScenarioParameters.html",
    "longname": "@serenity-js/core/lib/model~ScenarioParameters",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 87,
    "kind": "external",
    "name": "TestSuiteDetails",
    "externalLink": "/modules/core/class/src/model/TestSuiteDetails.ts~TestSuiteDetails.html",
    "longname": "@serenity-js/core/lib/model~TestSuiteDetails",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 88,
    "kind": "external",
    "name": "Timestamp",
    "externalLink": "/modules/core/class/src/model/Timestamp.ts~Timestamp.html",
    "longname": "@serenity-js/core/lib/model~Timestamp",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 89,
    "kind": "external",
    "name": "AssertionReport",
    "externalLink": "/modules/core/class/src/model/artifacts/AssertionReport.ts~AssertionReport.html",
    "longname": "@serenity-js/core/lib/model/artifacts~AssertionReport",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 90,
    "kind": "external",
    "name": "RequestAndResponse",
    "externalLink": "/modules/core/class/src/model/artifacts/HTTPRequestResponse.ts~RequestAndResponse.html",
    "longname": "@serenity-js/core/lib/model/artifacts~RequestAndResponse",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 91,
    "kind": "external",
    "name": "HTTPRequestResponse",
    "externalLink": "/modules/core/class/src/model/artifacts/HTTPRequestResponse.ts~HTTPRequestResponse.html",
    "longname": "@serenity-js/core/lib/model/artifacts~HTTPRequestResponse",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 92,
    "kind": "external",
    "name": "JSONData",
    "externalLink": "/modules/core/class/src/model/artifacts/JSONData.ts~JSONData.html",
    "longname": "@serenity-js/core/lib/model/artifacts~JSONData",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 93,
    "kind": "external",
    "name": "LogEntry",
    "externalLink": "/modules/core/class/src/model/artifacts/LogEntry.ts~LogEntry.html",
    "longname": "@serenity-js/core/lib/model/artifacts~LogEntry",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 94,
    "kind": "external",
    "name": "Photo",
    "externalLink": "/modules/core/class/src/model/artifacts/Photo.ts~Photo.html",
    "longname": "@serenity-js/core/lib/model/artifacts~Photo",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 95,
    "kind": "external",
    "name": "TestReport",
    "externalLink": "/modules/core/class/src/model/artifacts/TestReport.ts~TestReport.html",
    "longname": "@serenity-js/core/lib/model/artifacts~TestReport",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 96,
    "kind": "external",
    "name": "TextData",
    "externalLink": "/modules/core/class/src/model/artifacts/TextData.ts~TextData.html",
    "longname": "@serenity-js/core/lib/model/artifacts~TextData",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 97,
    "kind": "external",
    "name": "Outcome",
    "externalLink": "/modules/core/class/src/model/outcomes.ts~Outcome.html",
    "longname": "@serenity-js/core/lib/model~Outcome",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 98,
    "kind": "external",
    "name": "ProblemIndication",
    "externalLink": "/modules/core/class/src/model/outcomes.ts~ProblemIndication.html",
    "longname": "@serenity-js/core/lib/model~ProblemIndication",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 99,
    "kind": "external",
    "name": "ExecutionCompromised",
    "externalLink": "/modules/core/class/src/model/outcomes.ts~ExecutionCompromised.html",
    "longname": "@serenity-js/core/lib/model~ExecutionCompromised",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 100,
    "kind": "external",
    "name": "ExecutionFailedWithError",
    "externalLink": "/modules/core/class/src/model/outcomes.ts~ExecutionFailedWithError.html",
    "longname": "@serenity-js/core/lib/model~ExecutionFailedWithError",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 101,
    "kind": "external",
    "name": "ExecutionFailedWithAssertionError",
    "externalLink": "/modules/core/class/src/model/outcomes.ts~ExecutionFailedWithAssertionError.html",
    "longname": "@serenity-js/core/lib/model~ExecutionFailedWithAssertionError",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 102,
    "kind": "external",
    "name": "ImplementationPending",
    "externalLink": "/modules/core/class/src/model/outcomes.ts~ImplementationPending.html",
    "longname": "@serenity-js/core/lib/model~ImplementationPending",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 103,
    "kind": "external",
    "name": "ExecutionSkipped",
    "externalLink": "/modules/core/class/src/model/outcomes.ts~ExecutionSkipped.html",
    "longname": "@serenity-js/core/lib/model~ExecutionSkipped",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 104,
    "kind": "external",
    "name": "ExecutionIgnored",
    "externalLink": "/modules/core/class/src/model/outcomes.ts~ExecutionIgnored.html",
    "longname": "@serenity-js/core/lib/model~ExecutionIgnored",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 105,
    "kind": "external",
    "name": "ExecutionSuccessful",
    "externalLink": "/modules/core/class/src/model/outcomes.ts~ExecutionSuccessful.html",
    "longname": "@serenity-js/core/lib/model~ExecutionSuccessful",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 106,
    "kind": "external",
    "name": "ArbitraryTag",
    "externalLink": "/modules/core/class/src/model/tags/ArbitraryTag.ts~ArbitraryTag.html",
    "longname": "@serenity-js/core/lib/model/tags~ArbitraryTag",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 107,
    "kind": "external",
    "name": "BrowserTag",
    "externalLink": "/modules/core/class/src/model/tags/BrowserTag.ts~BrowserTag.html",
    "longname": "@serenity-js/core/lib/model/tags~BrowserTag",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 108,
    "kind": "external",
    "name": "CapabilityTag",
    "externalLink": "/modules/core/class/src/model/tags/CapabilityTag.ts~CapabilityTag.html",
    "longname": "@serenity-js/core/lib/model/tags~CapabilityTag",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 109,
    "kind": "external",
    "name": "ContextTag",
    "externalLink": "/modules/core/class/src/model/tags/ContextTag.ts~ContextTag.html",
    "longname": "@serenity-js/core/lib/model/tags~ContextTag",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 110,
    "kind": "external",
    "name": "FeatureTag",
    "externalLink": "/modules/core/class/src/model/tags/FeatureTag.ts~FeatureTag.html",
    "longname": "@serenity-js/core/lib/model/tags~FeatureTag",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 111,
    "kind": "external",
    "name": "IssueTag",
    "externalLink": "/modules/core/class/src/model/tags/IssueTag.ts~IssueTag.html",
    "longname": "@serenity-js/core/lib/model/tags~IssueTag",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 112,
    "kind": "external",
    "name": "ManualTag",
    "externalLink": "/modules/core/class/src/model/tags/ManualTag.ts~ManualTag.html",
    "longname": "@serenity-js/core/lib/model/tags~ManualTag",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 113,
    "kind": "external",
    "name": "PlatformTag",
    "externalLink": "/modules/core/class/src/model/tags/PlatformTag.ts~PlatformTag.html",
    "longname": "@serenity-js/core/lib/model/tags~PlatformTag",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 114,
    "kind": "external",
    "name": "Tag",
    "externalLink": "/modules/core/class/src/model/tags/Tag.ts~Tag.html",
    "longname": "@serenity-js/core/lib/model/tags~Tag",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 115,
    "kind": "external",
    "name": "ThemeTag",
    "externalLink": "/modules/core/class/src/model/tags/ThemeTag.ts~ThemeTag.html",
    "longname": "@serenity-js/core/lib/model/tags~ThemeTag",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 116,
    "kind": "external",
    "name": "Ability",
    "externalLink": "/modules/core/class/src/screenplay/Ability.ts~Ability.html",
    "longname": "@serenity-js/core/lib/screenplay~Ability",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 117,
    "kind": "external",
    "name": "AbilityType",
    "externalLink": "/modules/core/class/src/screenplay/AbilityType.ts~AbilityType.html",
    "longname": "@serenity-js/core/lib/screenplay~AbilityType",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 118,
    "kind": "external",
    "name": "Activity",
    "externalLink": "/modules/core/class/src/screenplay/Activity.ts~Activity.html",
    "longname": "@serenity-js/core/lib/screenplay~Activity",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 119,
    "kind": "external",
    "name": "Interaction",
    "externalLink": "/modules/core/class/src/screenplay/Interaction.ts~Interaction.html",
    "longname": "@serenity-js/core/lib/screenplay~Interaction",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 120,
    "kind": "external",
    "name": "Question",
    "externalLink": "/modules/core/class/src/screenplay/Question.ts~Question.html",
    "longname": "@serenity-js/core/lib/screenplay~Question",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 121,
    "kind": "external",
    "name": "Task",
    "externalLink": "/modules/core/class/src/screenplay/Task.ts~Task.html",
    "longname": "@serenity-js/core/lib/screenplay~Task",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 122,
    "kind": "external",
    "name": "TakeNotes",
    "externalLink": "/modules/core/class/src/screenplay/abilities/TakeNotes.ts~TakeNotes.html",
    "longname": "@serenity-js/core/lib/screenplay/abilities~TakeNotes",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 123,
    "kind": "external",
    "name": "Actor",
    "externalLink": "/modules/core/class/src/screenplay/actor/Actor.ts~Actor.html",
    "longname": "@serenity-js/core/lib/screenplay/actor~Actor",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 124,
    "kind": "external",
    "name": "AnswersQuestions",
    "externalLink": "/modules/core/class/src/screenplay/actor/AnswersQuestions.ts~AnswersQuestions.html",
    "longname": "@serenity-js/core/lib/screenplay/actor~AnswersQuestions",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 125,
    "kind": "external",
    "name": "CanHaveAbilities",
    "externalLink": "/modules/core/class/src/screenplay/actor/CanHaveAbilities.ts~CanHaveAbilities.html",
    "longname": "@serenity-js/core/lib/screenplay/actor~CanHaveAbilities",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 126,
    "kind": "external",
    "name": "CollectsArtifacts",
    "externalLink": "/modules/core/class/src/screenplay/actor/CollectsArtifacts.ts~CollectsArtifacts.html",
    "longname": "@serenity-js/core/lib/screenplay/actor~CollectsArtifacts",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 127,
    "kind": "external",
    "name": "PerformsActivities",
    "externalLink": "/modules/core/class/src/screenplay/actor/PerformsActivities.ts~PerformsActivities.html",
    "longname": "@serenity-js/core/lib/screenplay/actor~PerformsActivities",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 128,
    "kind": "external",
    "name": "UsesAbilities",
    "externalLink": "/modules/core/class/src/screenplay/actor/UsesAbilities.ts~UsesAbilities.html",
    "longname": "@serenity-js/core/lib/screenplay/actor~UsesAbilities",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 129,
    "kind": "external",
    "name": "Log",
    "externalLink": "/modules/core/class/src/screenplay/interactions/Log.ts~Log.html",
    "longname": "@serenity-js/core/lib/screenplay/interactions~Log",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 130,
    "kind": "external",
    "name": "See",
    "externalLink": "/modules/core/class/src/screenplay/interactions/See.ts~See.html",
    "longname": "@serenity-js/core/lib/screenplay/interactions~See",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 131,
    "kind": "external",
    "name": "TakeNote",
    "externalLink": "/modules/core/class/src/screenplay/interactions/TakeNote.ts~TakeNote.html",
    "longname": "@serenity-js/core/lib/screenplay/interactions~TakeNote",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 132,
    "kind": "external",
    "name": "Note",
    "externalLink": "/modules/core/class/src/screenplay/questions/Note.ts~Note.html",
    "longname": "@serenity-js/core/lib/screenplay/questions~Note",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 133,
    "kind": "external",
    "name": "Transform",
    "externalLink": "/modules/core/class/src/screenplay/questions/Transform.ts~Transform.html",
    "longname": "@serenity-js/core/lib/screenplay/questions~Transform",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 134,
    "kind": "external",
    "name": "Cast",
    "externalLink": "/modules/core/class/src/stage/Cast.ts~Cast.html",
    "longname": "@serenity-js/core/lib/stage~Cast",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 135,
    "kind": "external",
    "name": "Clock",
    "externalLink": "/modules/core/class/src/stage/Clock.ts~Clock.html",
    "longname": "@serenity-js/core/lib/stage~Clock",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 136,
    "kind": "external",
    "name": "DressingRoom",
    "externalLink": "/modules/core/class/src/stage/DressingRoom.ts~DressingRoom.html",
    "longname": "@serenity-js/core/lib/stage~DressingRoom",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 137,
    "kind": "external",
    "name": "Stage",
    "externalLink": "/modules/core/class/src/stage/Stage.ts~Stage.html",
    "longname": "@serenity-js/core/lib/stage~Stage",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 138,
    "kind": "external",
    "name": "StageCrewMember",
    "externalLink": "/modules/core/class/src/stage/StageCrewMember.ts~StageCrewMember.html",
    "longname": "@serenity-js/core/lib/stage~StageCrewMember",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 139,
    "kind": "external",
    "name": "StageManager",
    "externalLink": "/modules/core/class/src/stage/StageManager.ts~StageManager.html",
    "longname": "@serenity-js/core/lib/stage~StageManager",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 140,
    "kind": "external",
    "name": "WithStage",
    "externalLink": "/modules/core/class/src/stage/WithStage.ts~WithStage.html",
    "longname": "@serenity-js/core/lib/stage~WithStage",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 141,
    "kind": "external",
    "name": "ArtifactArchiver",
    "externalLink": "/modules/core/class/src/stage/crew/artifact-archiver/ArtifactArchiver.ts~ArtifactArchiver.html",
    "longname": "@serenity-js/core/lib/stage/crew/artifact-archiver~ArtifactArchiver",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 142,
    "kind": "external",
    "name": "StreamReporter",
    "externalLink": "/modules/core/class/src/stage/crew/stream-reporter/StreamReporter.ts~StreamReporter.html",
    "longname": "@serenity-js/core/lib/stage/crew/stream-reporter~StreamReporter",
    "memberof": "src/.imports-from-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 144,
    "kind": "external",
    "name": "DeleteRequest",
    "externalLink": "/modules/rest/class/src/model/DeleteRequest.ts~DeleteRequest.html",
    "longname": "@serenity-js/rest/lib/model~DeleteRequest",
    "memberof": "src/.imports-from-rest.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 145,
    "kind": "external",
    "name": "GetRequest",
    "externalLink": "/modules/rest/class/src/model/GetRequest.ts~GetRequest.html",
    "longname": "@serenity-js/rest/lib/model~GetRequest",
    "memberof": "src/.imports-from-rest.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 146,
    "kind": "external",
    "name": "HTTPRequest",
    "externalLink": "/modules/rest/class/src/model/HTTPRequest.ts~HTTPRequest.html",
    "longname": "@serenity-js/rest/lib/model~HTTPRequest",
    "memberof": "src/.imports-from-rest.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 147,
    "kind": "external",
    "name": "HeadRequest",
    "externalLink": "/modules/rest/class/src/model/HeadRequest.ts~HeadRequest.html",
    "longname": "@serenity-js/rest/lib/model~HeadRequest",
    "memberof": "src/.imports-from-rest.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 148,
    "kind": "external",
    "name": "OptionsRequest",
    "externalLink": "/modules/rest/class/src/model/OptionsRequest.ts~OptionsRequest.html",
    "longname": "@serenity-js/rest/lib/model~OptionsRequest",
    "memberof": "src/.imports-from-rest.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 149,
    "kind": "external",
    "name": "PatchRequest",
    "externalLink": "/modules/rest/class/src/model/PatchRequest.ts~PatchRequest.html",
    "longname": "@serenity-js/rest/lib/model~PatchRequest",
    "memberof": "src/.imports-from-rest.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 150,
    "kind": "external",
    "name": "PostRequest",
    "externalLink": "/modules/rest/class/src/model/PostRequest.ts~PostRequest.html",
    "longname": "@serenity-js/rest/lib/model~PostRequest",
    "memberof": "src/.imports-from-rest.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 151,
    "kind": "external",
    "name": "PutRequest",
    "externalLink": "/modules/rest/class/src/model/PutRequest.ts~PutRequest.html",
    "longname": "@serenity-js/rest/lib/model~PutRequest",
    "memberof": "src/.imports-from-rest.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 152,
    "kind": "external",
    "name": "CallAnApi",
    "externalLink": "/modules/rest/class/src/screenplay/abilities/CallAnApi.ts~CallAnApi.html",
    "longname": "@serenity-js/rest/lib/screenplay/abilities~CallAnApi",
    "memberof": "src/.imports-from-rest.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 153,
    "kind": "external",
    "name": "ChangeApiUrl",
    "externalLink": "/modules/rest/class/src/screenplay/interactions/ChangeApiUrl.ts~ChangeApiUrl.html",
    "longname": "@serenity-js/rest/lib/screenplay/interactions~ChangeApiUrl",
    "memberof": "src/.imports-from-rest.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 154,
    "kind": "external",
    "name": "Send",
    "externalLink": "/modules/rest/class/src/screenplay/interactions/Send.ts~Send.html",
    "longname": "@serenity-js/rest/lib/screenplay/interactions~Send",
    "memberof": "src/.imports-from-rest.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 155,
    "kind": "external",
    "name": "LastResponse",
    "externalLink": "/modules/rest/class/src/screenplay/questions/LastResponse.ts~LastResponse.html",
    "longname": "@serenity-js/rest/lib/screenplay/questions~LastResponse",
    "memberof": "src/.imports-from-rest.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 156,
    "kind": "file",
    "name": "src/cli/Argv.ts",
    "content": "/**\n * @package\n */\nexport interface Argv {\n    [ key: string ]: string;\n}\n",
    "static": true,
    "longname": "/home/travis/build/serenity-js/serenity-js/packages/serenity-bdd/src/cli/Argv.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 157,
    "kind": "class",
    "name": "Argv",
    "memberof": "src/cli/Argv.ts",
    "static": true,
    "longname": "src/cli/Argv.ts~Argv",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/serenity-bdd/src/cli/Argv.ts",
    "importStyle": "{Argv}",
    "description": "",
    "lineNumber": 11,
    "interface": true,
    "ignore": true
  },
  {
    "__docId__": 158,
    "kind": "file",
    "name": "src/cli/Printer.ts",
    "content": "import chalk = require('chalk');\n\n/**\n * @package\n */\nexport class Printer {\n\n    constructor(\n        public readonly out: NodeJS.WritableStream,\n        public readonly err: NodeJS.WritableStream,\n    ) {\n    }\n\n    info(message: string): void {\n        this.out.write(chalk.green(message) + '\\n');\n    }\n\n    error(message: string): void {\n        this.out.write(chalk.red(message) + '\\n');\n    }\n}\n",
    "static": true,
    "longname": "/home/travis/build/serenity-js/serenity-js/packages/serenity-bdd/src/cli/Printer.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 159,
    "kind": "class",
    "name": "Printer",
    "memberof": "src/cli/Printer.ts",
    "static": true,
    "longname": "src/cli/Printer.ts~Printer",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/serenity-bdd/src/cli/Printer.ts",
    "importStyle": "{Printer}",
    "description": "",
    "lineNumber": 13,
    "interface": false,
    "ignore": true
  },
  {
    "__docId__": 160,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/cli/Printer.ts~Printer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/Printer.ts~Printer#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true
  },
  {
    "__docId__": 161,
    "kind": "method",
    "name": "info",
    "memberof": "src/cli/Printer.ts~Printer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/Printer.ts~Printer#info",
    "access": "public",
    "description": " ",
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 162,
    "kind": "method",
    "name": "error",
    "memberof": "src/cli/Printer.ts~Printer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/Printer.ts~Printer#error",
    "access": "public",
    "description": " ",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 163,
    "kind": "file",
    "name": "src/cli/bootstrap.ts",
    "content": "import yargs = require('yargs');\n\nimport { engage } from '@serenity-js/core';\nimport { Path } from '@serenity-js/core/lib/io';\nimport { Actors } from './stage';\n\nconst pkg = require('../../package.json');  // tslint:disable-line:no-var-requires\n\n/**\n * @desc\n *  Allows for the serenity-bdd command line interface output to be intercepted for testing purposes.\n *\n * @typedef {function(error: Error, parsed: object, output: string): void} Interceptor\n *\n * @package\n */\nexport type Interceptor = (error: Error, parsed: { [key: string]: string | number }, output: string) => void;\n\n/**\n * @desc\n *  Invokes the serenity-bdd command line interface, responsible for downloading and running\n *  the [Serenity BDD CLI](https://github.com/serenity-bdd/serenity-cli)\n *\n * @param {string[]} argv\n * @param {Interceptor} interceptor\n *\n * @package\n */\nexport function bootstrap(argv: string[], interceptor?: Interceptor) {\n    yargs()\n        .version(require('../../package.json').version)\n        .demand(1)\n        .usage('Usage: $0 <command> [options]')\n        .example('$0 update [options]', 'updates the Serenity jar to the latest version')\n        .example('$0 remove [options]', 'removes the cache directory and downloaded jars')\n        .example('$0 run [options]',    'generates the HTML report from JSON reports produced by Serenity/JS')\n        .example('$0 <command> --help', 'shows the available parameters')\n        .epilog(`copyright (C) 2016-${ new Date().getFullYear() } ${ pkg.author.name } <${ pkg.author.email }>`)\n        .commandDir('./commands')\n        .alias('h', 'help').help()\n        .parse(argv, { }, interceptor);\n}\n",
    "static": true,
    "longname": "/home/travis/build/serenity-js/serenity-js/packages/serenity-bdd/src/cli/bootstrap.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 164,
    "kind": "variable",
    "name": "pkg",
    "memberof": "src/cli/bootstrap.ts",
    "static": true,
    "longname": "src/cli/bootstrap.ts~pkg",
    "access": "public",
    "export": false,
    "importPath": "@serenity-js/serenity-bdd/src/cli/bootstrap.ts",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 165,
    "kind": "typedef",
    "name": "Interceptor",
    "memberof": "src/cli/bootstrap.ts",
    "static": true,
    "longname": "src/cli/bootstrap.ts~Interceptor",
    "access": "package",
    "description": " Allows for the serenity-bdd command line interface output to be intercepted for testing purposes.",
    "lineNumber": 24,
    "type": {
      "types": [
        "function(error: Error, parsed: object, output: string): void"
      ],
      "optional": false,
      "name": "Interceptor"
    },
    "ignore": true
  },
  {
    "__docId__": 166,
    "kind": "function",
    "name": "bootstrap",
    "memberof": "src/cli/bootstrap.ts",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cli/bootstrap.ts~bootstrap",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/serenity-bdd/src/cli/bootstrap.ts",
    "importStyle": "{bootstrap}",
    "description": " Invokes the serenity-bdd command line interface, responsible for downloading and running\n the [Serenity BDD CLI](https://github.com/serenity-bdd/serenity-cli)",
    "lineNumber": 47,
    "params": [
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "argv",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Interceptor"
        ],
        "spread": false,
        "optional": false,
        "name": "interceptor",
        "description": ""
      }
    ],
    "ignore": true,
    "return": null
  },
  {
    "__docId__": 167,
    "kind": "file",
    "name": "src/cli/commands/run.ts",
    "content": "import { actorCalled, actorInTheSpotlight, configure } from '@serenity-js/core';\nimport { Path } from '@serenity-js/core/lib/io';\nimport * as path from 'path';\nimport { Argv } from '../Argv';\nimport { defaults } from '../defaults';\nimport { GAV } from '../model';\nimport { Printer } from '../Printer';\nimport { Complain, InvokeSerenityBDD, SerenityBDDArguments } from '../screenplay';\nimport { SystemProperties } from '../screenplay/questions/SystemProperties';\nimport { Actors, NotificationReporter, ProgressReporter } from '../stage';\n\nexport = {\n    command: 'run',\n    desc: 'Invokes the Serenity BDD CLI jar to produce a Serenity BDD HTML report from the Serenity/JS JSON reports',\n    builder: {\n        cacheDir: {\n            default:   defaults.cacheDir,\n            describe: 'A relative path to where the Serenity BDD CLI jar file is stored',\n        },\n        destination: {\n            default:   defaults.reportDir,\n            describe: 'A relative path to the directory where the Serenity BDD report should be produced',\n        },\n        features: {\n            default:   defaults.featuresDir,\n            describe: 'A relative path to the directory containing the Cucumber.js feature files',\n        },\n        artifact: {\n            default:   defaults.artifact,\n            describe: `The GAV identifier of the Serenity BDD CLI artifact to use; You're best off with the default option unless you want to experiment.`,\n        },\n        source: {\n            default:   defaults.sourceDir,\n            describe: `A relative path to the directory containing the Serenity/JS JSON reports`,\n        },\n        issueTrackerUrl: {\n            describe: `Base URL for issue trackers other than JIRA`,\n        },\n        jiraProject: {\n            describe: `JIRA project identifier`,\n        },\n        jiraUrl: {\n            describe: `Base URL of your JIRA server`,\n        },\n        project: {\n            default: path.basename(process.cwd()),\n            describe: `Project name to appear in the Serenity reports`,\n        },\n        log: {\n            default: defaults.log,\n            choices: [ 'warn', 'info', 'debug' ],\n            describe: `A Logback log level to pass to the Serenity BDD CLI jar`,\n        },\n    },\n    handler: (argv: Argv) => {\n\n        const\n            printer         = new Printer(process.stdout, process.stderr),\n            artifactGAV     = GAV.fromString(argv.artifact),\n            pathToArtifact  = new Path(argv.cacheDir).join(artifactGAV.toPath()),\n            moduleRoot      = path.resolve(__dirname, '../../../');\n\n        configure({\n            actors: new Actors(new Path(process.cwd())),\n            crew: [\n                new NotificationReporter(printer),\n                new ProgressReporter(printer),\n            ],\n        });\n\n        return actorCalled('Serenity/JS').attemptsTo(\n            InvokeSerenityBDD.at(pathToArtifact)\n                .withProperties(SystemProperties.from({\n                    'LOG_LEVEL': argv.log,\n                    'logback.configurationFile': path.resolve(moduleRoot, './resources/logback.config.xml'),\n                }))\n                .withArguments(SerenityBDDArguments.from(argv)),\n        )\n        .catch(error => actorInTheSpotlight().attemptsTo(\n            Complain.about(error),\n        ));\n    },\n};\n",
    "static": true,
    "longname": "/home/travis/build/serenity-js/serenity-js/packages/serenity-bdd/src/cli/commands/run.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 168,
    "kind": "file",
    "name": "src/cli/commands/update.ts",
    "content": "import { Check, equals } from '@serenity-js/assertions';\nimport { actorCalled, actorInTheSpotlight, configure } from '@serenity-js/core';\nimport { Path } from '@serenity-js/core/lib/io';\nimport * as https from 'https';\nimport { URL } from 'url';\nimport { Argv } from '../Argv';\nimport { defaults } from '../defaults';\nimport { GAV } from '../model';\nimport { Printer } from '../Printer';\nimport { Complain, DownloadArtifact, FileExists, Notify } from '../screenplay';\nimport { Actors, NotificationReporter, ProgressReporter } from '../stage';\n\nexport = {\n    command: 'update',\n    desc: 'Makes sure the Serenity BDD CLI jar file is available and up to date',\n    builder: {\n        cacheDir: {\n            default:   defaults.cacheDir,\n            describe: 'A relative path to where the Serenity BDD CLI jar file should be stored',\n        },\n        ignoreSSL: {\n            default:   false,\n            describe: 'Ignore SSL certificates',\n        },\n        repository: {\n            default:   defaults.repository,\n            describe: 'Maven repository url where we should look for the Serenity BDD CLI artifact',\n        },\n        artifact: {\n            default:   defaults.artifact,\n            describe: `The GAV identifier of the Serenity BDD CLI artifact to use; You're best off with the default option unless you want to experiment.`,\n        },\n    },\n    handler: (argv: Argv) => {\n\n        const\n            printer         = new Printer(process.stdout, process.stderr),\n            artifactGAV     = GAV.fromString(argv.artifact),\n            pathToArtifact  = new Path(argv.cacheDir).join(artifactGAV.toPath()),\n            repository      = new URL(argv.repository),\n            httpsConfig     = { httpsAgent: new https.Agent({ rejectUnauthorized: ! argv.ignoreSSL }) };\n\n        configure({\n            actors: new Actors(new Path(process.cwd())),\n            crew: [\n                new NotificationReporter(printer),\n                new ProgressReporter(printer),\n            ],\n        });\n\n        return actorCalled('Serenity/JS').attemptsTo(\n            Check.whether(FileExists.at(pathToArtifact), equals(true))\n                .andIfSo(\n                    Notify.that(`Looks like you're good to go! Serenity BDD CLI is already at ${ pathToArtifact.value }`),\n                )\n                .otherwise(\n                    DownloadArtifact\n                        .identifiedBy(artifactGAV)\n                        .availableFrom(repository)\n                        .to(pathToArtifact.directory())\n                        .using(httpsConfig),\n                ),\n            )\n            .catch(error => actorInTheSpotlight().attemptsTo(\n                Complain.about(error),\n            ));\n    },\n};\n",
    "static": true,
    "longname": "/home/travis/build/serenity-js/serenity-js/packages/serenity-bdd/src/cli/commands/update.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 169,
    "kind": "file",
    "name": "src/cli/defaults.ts",
    "content": "/**\n * @desc\n *  Default configuration to be used when invoking the serenity-bdd command line interface.\n *  See the source code to find out more about the values being used.\n *\n * @typedef {Object} defaults\n * @property {string} artifact      The GAV identifier of the artifact to download from the artifact repository\n * @property {string} repository    The URL of the repository where the artifact can be found\n * @property {string} cacheDir      A relative path to the directory where the artifact should be downloaded\n * @property {string} sourceDir     A relative path to the directory where the intermediate Serenity/JS JSON reports have been generated\n * @property {string} reportDir     A relative path to the directory where the Serenity BDD HTML report should be generated\n * @property {string} featuresDir   A relative path to the Cucumber.js features directory (if Cucumber is used)\n * @property {string} log           A Logback log level that Serenity BDD CLI should use (info, warn, debug)\n *\n * @public\n */\nexport const defaults = {\n    artifact:    'net.serenity-bdd:serenity-cli:jar:all:2.1.10',\n    repository:  'https://jcenter.bintray.com/',\n    cacheDir:    'node_modules/@serenity-js/cache',\n    sourceDir:   'target/site/serenity',\n    reportDir:   'target/site/serenity',\n    featuresDir: 'features',\n    log:         'warn',\n};\n",
    "static": true,
    "longname": "/home/travis/build/serenity-js/serenity-js/packages/serenity-bdd/src/cli/defaults.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 170,
    "kind": "typedef",
    "name": "defaults",
    "memberof": "src/cli/defaults.ts",
    "static": true,
    "longname": "src/cli/defaults.ts~defaults",
    "access": "public",
    "description": " Default configuration to be used when invoking the serenity-bdd command line interface.\n See the source code to find out more about the values being used.",
    "lineNumber": 17,
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "artifact",
        "description": "The GAV identifier of the artifact to download from the artifact repository"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "repository",
        "description": "The URL of the repository where the artifact can be found"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "cacheDir",
        "description": "A relative path to the directory where the artifact should be downloaded"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "sourceDir",
        "description": "A relative path to the directory where the intermediate Serenity/JS JSON reports have been generated"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "reportDir",
        "description": "A relative path to the directory where the Serenity BDD HTML report should be generated"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "featuresDir",
        "description": "A relative path to the Cucumber.js features directory (if Cucumber is used)"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "log",
        "description": "A Logback log level that Serenity BDD CLI should use (info, warn, debug)"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "defaults"
    }
  },
  {
    "__docId__": 171,
    "kind": "file",
    "name": "src/cli/index.ts",
    "content": "import { bootstrap } from './bootstrap';\n\nexport = bootstrap;\n",
    "static": true,
    "longname": "/home/travis/build/serenity-js/serenity-js/packages/serenity-bdd/src/cli/index.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 172,
    "kind": "file",
    "name": "src/cli/model/Complaint.ts",
    "content": "import { JSONData } from '@serenity-js/core/lib/model';\n\n/**\n * @desc\n *  An issue to be reported to the user.\n *\n * @package\n */\nexport class Complaint extends JSONData {\n    static fromJSON(value: { description: string, message: string, stack?: string }) {\n        return new Complaint(Buffer.from(JSON.stringify(value, null, 0), 'utf8').toString('base64'));\n    }\n}\n",
    "static": true,
    "longname": "/home/travis/build/serenity-js/serenity-js/packages/serenity-bdd/src/cli/model/Complaint.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 173,
    "kind": "class",
    "name": "Complaint",
    "memberof": "src/cli/model/Complaint.ts",
    "static": true,
    "longname": "src/cli/model/Complaint.ts~Complaint",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/serenity-bdd/src/cli/model/Complaint.ts",
    "importStyle": "{Complaint}",
    "description": " An issue to be reported to the user.",
    "lineNumber": 16,
    "interface": false,
    "extends": [
      "@serenity-js/core/lib/model~JSONData"
    ],
    "ignore": true
  },
  {
    "__docId__": 174,
    "kind": "method",
    "name": "fromJSON",
    "memberof": "src/cli/model/Complaint.ts~Complaint",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cli/model/Complaint.ts~Complaint.fromJSON",
    "access": "public",
    "description": " ",
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "UNKNOWN"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 175,
    "kind": "file",
    "name": "src/cli/model/DownloadProgressReport.ts",
    "content": "import { JSONData } from '@serenity-js/core/lib/model';\n\n/**\n * @desc\n *  An update on the progress of the Serenity BDD jar download.\n *\n * @package\n */\nexport class DownloadProgressReport extends JSONData {\n    static fromJSON(value: { downloadedBytes: number, totalDownloadedBytes: number, totalBytes: number }) {\n        return new DownloadProgressReport(Buffer.from(JSON.stringify(value, null, 0), 'utf8').toString('base64'));\n    }\n}\n",
    "static": true,
    "longname": "/home/travis/build/serenity-js/serenity-js/packages/serenity-bdd/src/cli/model/DownloadProgressReport.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 176,
    "kind": "class",
    "name": "DownloadProgressReport",
    "memberof": "src/cli/model/DownloadProgressReport.ts",
    "static": true,
    "longname": "src/cli/model/DownloadProgressReport.ts~DownloadProgressReport",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/serenity-bdd/src/cli/model/DownloadProgressReport.ts",
    "importStyle": "{DownloadProgressReport}",
    "description": " An update on the progress of the Serenity BDD jar download.",
    "lineNumber": 16,
    "interface": false,
    "extends": [
      "@serenity-js/core/lib/model~JSONData"
    ],
    "ignore": true
  },
  {
    "__docId__": 177,
    "kind": "method",
    "name": "fromJSON",
    "memberof": "src/cli/model/DownloadProgressReport.ts~DownloadProgressReport",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cli/model/DownloadProgressReport.ts~DownloadProgressReport.fromJSON",
    "access": "public",
    "description": " ",
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "UNKNOWN"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 178,
    "kind": "file",
    "name": "src/cli/model/ExecutionError.ts",
    "content": "import { RuntimeError } from '@serenity-js/core';\n\n/**\n * @desc\n *  An error that has occurred during the execution of the Serenity BDD jar.\n *\n * @extends {@serenity-js/core/lib/core/errors~RuntimeError}\n *\n * @package\n */\nexport class ExecutionError extends RuntimeError {\n    constructor(message: string, cause?: Error) {\n        super(ExecutionError, message, cause);\n    }\n}\n",
    "static": true,
    "longname": "/home/travis/build/serenity-js/serenity-js/packages/serenity-bdd/src/cli/model/ExecutionError.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 179,
    "kind": "class",
    "name": "ExecutionError",
    "memberof": "src/cli/model/ExecutionError.ts",
    "static": true,
    "longname": "src/cli/model/ExecutionError.ts~ExecutionError",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/serenity-bdd/src/cli/model/ExecutionError.ts",
    "importStyle": "{ExecutionError}",
    "description": " An error that has occurred during the execution of the Serenity BDD jar.",
    "lineNumber": 18,
    "interface": false,
    "extends": [
      "RuntimeError"
    ],
    "ignore": true
  },
  {
    "__docId__": 180,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/cli/model/ExecutionError.ts~ExecutionError",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/model/ExecutionError.ts~ExecutionError#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true
  },
  {
    "__docId__": 181,
    "kind": "file",
    "name": "src/cli/model/GAV.ts",
    "content": "import { Path } from '@serenity-js/core/lib/io';\nimport { ensure, isDefined, isInRange, isInteger, Predicate, property, TinyType } from 'tiny-types';\n\n/**\n * @package\n */\nexport class GAV extends TinyType {\n    static fromString(gav: string) {\n        const parts = gav.split(':');\n\n        ensure('GAV segments', parts, property('length', isInteger(), isInRange(3, 5)));\n\n        switch (parts.length) {\n            case 5:     return new GAV(parts[0], parts[1], parts[4], parts[2], parts[3]);\n            case 4:     return new GAV(parts[0], parts[1], parts[3], parts[2]);\n            default:    return new GAV(parts[0], parts[1], parts[2]);\n        }\n    }\n\n    constructor(\n        public readonly groupId: string,\n        public readonly artifactId: string,\n        public readonly version: string,\n        public readonly extension: string = 'jar',\n        public readonly classifier?: string,\n    ) {\n        super();\n        ensure('groupId', groupId, isDefined(), matchesRegex('group name', /^[a-z][a-z0-9_-]+(?:\\.[a-z0-9_-]+)+[0-9a-z_-]$/));\n        ensure('artifactId', artifactId, isDefined(), matchesRegex('artifact name', /^[a-z0-9_-]+$/));\n        ensure('version', version, isDefined(), matchesRegex('version', /^(?:\\d+\\.?){3}$/));\n        ensure('extension', extension, isDefined(), matchesRegex('version', /^[a-z]+$/));\n    }\n\n    toPath(): Path {\n        const name = [\n            this.artifactId,\n            this.version,\n            this.classifier,\n        ].filter(s => !!s).join('-');\n\n        return new Path(`${ name }.${ this.extension}`);\n    }\n}\n\nfunction matchesRegex(type: string, regex: RegExp): Predicate<string> {\n    return Predicate.to(`match ${type} regex ${regex}`, (value: string) =>\n        typeof value === 'string' &&\n        regex.test(value),\n    );\n}\n",
    "static": true,
    "longname": "/home/travis/build/serenity-js/serenity-js/packages/serenity-bdd/src/cli/model/GAV.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 182,
    "kind": "class",
    "name": "GAV",
    "memberof": "src/cli/model/GAV.ts",
    "static": true,
    "longname": "src/cli/model/GAV.ts~GAV",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/serenity-bdd/src/cli/model/GAV.ts",
    "importStyle": "{GAV}",
    "description": "",
    "lineNumber": 14,
    "interface": false,
    "extends": [
      "tiny-types~TinyType"
    ],
    "ignore": true
  },
  {
    "__docId__": 183,
    "kind": "method",
    "name": "fromString",
    "memberof": "src/cli/model/GAV.ts~GAV",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cli/model/GAV.ts~GAV.fromString",
    "access": "public",
    "description": " ",
    "lineNumber": 8,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "gav",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 184,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/cli/model/GAV.ts~GAV",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/model/GAV.ts~GAV#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "undocument": true
  },
  {
    "__docId__": 185,
    "kind": "method",
    "name": "toPath",
    "memberof": "src/cli/model/GAV.ts~GAV",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/model/GAV.ts~GAV#toPath",
    "access": "public",
    "description": " ",
    "lineNumber": 34,
    "return": {
      "nullable": null,
      "types": [
        "Path"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 186,
    "kind": "function",
    "name": "matchesRegex",
    "memberof": "src/cli/model/GAV.ts",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cli/model/GAV.ts~matchesRegex",
    "access": "public",
    "export": false,
    "importPath": "@serenity-js/serenity-bdd/src/cli/model/GAV.ts",
    "importStyle": null,
    "description": " ",
    "lineNumber": 45,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "RegExp"
        ],
        "spread": false,
        "optional": false,
        "name": "regex",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Predicate"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 187,
    "kind": "file",
    "name": "src/cli/model/Notification.ts",
    "content": "import { JSONData } from '@serenity-js/core/lib/model';\n\n/**\n * @desc\n *  An information that the user should be notified about.\n *\n * @package\n */\nexport class Notification extends JSONData {\n    static fromJSON(value: { message: string }) {\n        return new Notification(Buffer.from(JSON.stringify(value, null, 0), 'utf8').toString('base64'));\n    }\n}\n",
    "static": true,
    "longname": "/home/travis/build/serenity-js/serenity-js/packages/serenity-bdd/src/cli/model/Notification.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 188,
    "kind": "class",
    "name": "Notification",
    "memberof": "src/cli/model/Notification.ts",
    "static": true,
    "longname": "src/cli/model/Notification.ts~Notification",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/serenity-bdd/src/cli/model/Notification.ts",
    "importStyle": "{Notification}",
    "description": " An information that the user should be notified about.",
    "lineNumber": 16,
    "interface": false,
    "extends": [
      "@serenity-js/core/lib/model~JSONData"
    ],
    "ignore": true
  },
  {
    "__docId__": 189,
    "kind": "method",
    "name": "fromJSON",
    "memberof": "src/cli/model/Notification.ts~Notification",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cli/model/Notification.ts~Notification.fromJSON",
    "access": "public",
    "description": " ",
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "UNKNOWN"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 190,
    "kind": "file",
    "name": "src/cli/model/index.ts",
    "content": "export * from './Complaint';\nexport * from './DownloadProgressReport';\nexport * from './ExecutionError';\nexport * from './GAV';\nexport * from './Notification';\n",
    "static": true,
    "longname": "/home/travis/build/serenity-js/serenity-js/packages/serenity-bdd/src/cli/model/index.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 191,
    "kind": "file",
    "name": "src/cli/screenplay/abilities/UseFileSystem.ts",
    "content": "import { Ability, UsesAbilities } from '@serenity-js/core';\nimport { FileSystem, Path } from '@serenity-js/core/lib/io';\nimport { Stats, WriteStream } from 'fs';\n\n/**\n * @package\n */\nexport class UseFileSystem implements Ability {\n    static at(root: Path) {\n        return new UseFileSystem(new FileSystem(root));\n    }\n\n    static as(actor: UsesAbilities): UseFileSystem {\n        return actor.abilityTo(UseFileSystem);\n    }\n\n    constructor(private readonly fileSystem: FileSystem) {\n    }\n\n    createWriteStreamTo(relativePathToFile: Path): WriteStream {\n        return this.fileSystem.createWriteStreamTo(relativePathToFile);\n    }\n\n    createDirectory(relativePathToDirectory: Path) {\n        return this.fileSystem.ensureDirectoryExistsAt(relativePathToDirectory);\n    }\n\n    remove(relativePathToFileOrDirectory: Path): Promise<void> {\n        return this.fileSystem.remove(relativePathToFileOrDirectory);\n    }\n\n    rename(source: Path, destination: Path): Promise<void> {\n        return this.fileSystem.rename(source, destination);\n    }\n\n    attributesOf(relativePathToFileOrDirectory: Path): Promise<Stats> {\n        return this.fileSystem.stat(relativePathToFileOrDirectory);\n    }\n}\n",
    "static": true,
    "longname": "/home/travis/build/serenity-js/serenity-js/packages/serenity-bdd/src/cli/screenplay/abilities/UseFileSystem.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 192,
    "kind": "class",
    "name": "UseFileSystem",
    "memberof": "src/cli/screenplay/abilities/UseFileSystem.ts",
    "static": true,
    "longname": "src/cli/screenplay/abilities/UseFileSystem.ts~UseFileSystem",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/serenity-bdd/src/cli/screenplay/abilities/UseFileSystem.ts",
    "importStyle": "{UseFileSystem}",
    "description": "",
    "lineNumber": 15,
    "interface": false,
    "ignore": true
  },
  {
    "__docId__": 193,
    "kind": "method",
    "name": "at",
    "memberof": "src/cli/screenplay/abilities/UseFileSystem.ts~UseFileSystem",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cli/screenplay/abilities/UseFileSystem.ts~UseFileSystem.at",
    "access": "public",
    "description": " ",
    "lineNumber": 9,
    "params": [
      {
        "nullable": null,
        "types": [
          "Path"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 194,
    "kind": "method",
    "name": "as",
    "memberof": "src/cli/screenplay/abilities/UseFileSystem.ts~UseFileSystem",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cli/screenplay/abilities/UseFileSystem.ts~UseFileSystem.as",
    "access": "public",
    "description": " ",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "UsesAbilities"
        ],
        "spread": false,
        "optional": false,
        "name": "actor",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "UseFileSystem"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 195,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/cli/screenplay/abilities/UseFileSystem.ts~UseFileSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/screenplay/abilities/UseFileSystem.ts~UseFileSystem#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 52,
    "undocument": true
  },
  {
    "__docId__": 196,
    "kind": "method",
    "name": "createWriteStreamTo",
    "memberof": "src/cli/screenplay/abilities/UseFileSystem.ts~UseFileSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/screenplay/abilities/UseFileSystem.ts~UseFileSystem#createWriteStreamTo",
    "access": "public",
    "description": " ",
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "Path"
        ],
        "spread": false,
        "optional": false,
        "name": "relativePathToFile",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "WriteStream"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 197,
    "kind": "method",
    "name": "createDirectory",
    "memberof": "src/cli/screenplay/abilities/UseFileSystem.ts~UseFileSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/screenplay/abilities/UseFileSystem.ts~UseFileSystem#createDirectory",
    "access": "public",
    "description": " ",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "Path"
        ],
        "spread": false,
        "optional": false,
        "name": "relativePathToDirectory",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 198,
    "kind": "method",
    "name": "remove",
    "memberof": "src/cli/screenplay/abilities/UseFileSystem.ts~UseFileSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/screenplay/abilities/UseFileSystem.ts~UseFileSystem#remove",
    "access": "public",
    "description": " ",
    "lineNumber": 28,
    "params": [
      {
        "nullable": null,
        "types": [
          "Path"
        ],
        "spread": false,
        "optional": false,
        "name": "relativePathToFileOrDirectory",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 199,
    "kind": "method",
    "name": "rename",
    "memberof": "src/cli/screenplay/abilities/UseFileSystem.ts~UseFileSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/screenplay/abilities/UseFileSystem.ts~UseFileSystem#rename",
    "access": "public",
    "description": " ",
    "lineNumber": 32,
    "params": [
      {
        "nullable": null,
        "types": [
          "Path"
        ],
        "spread": false,
        "optional": false,
        "name": "source",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Path"
        ],
        "spread": false,
        "optional": false,
        "name": "destination",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 200,
    "kind": "method",
    "name": "attributesOf",
    "memberof": "src/cli/screenplay/abilities/UseFileSystem.ts~UseFileSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/screenplay/abilities/UseFileSystem.ts~UseFileSystem#attributesOf",
    "access": "public",
    "description": " ",
    "lineNumber": 36,
    "params": [
      {
        "nullable": null,
        "types": [
          "Path"
        ],
        "spread": false,
        "optional": false,
        "name": "relativePathToFileOrDirectory",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 201,
    "kind": "file",
    "name": "src/cli/screenplay/abilities/index.ts",
    "content": "export * from './UseFileSystem';\n",
    "static": true,
    "longname": "/home/travis/build/serenity-js/serenity-js/packages/serenity-bdd/src/cli/screenplay/abilities/index.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 202,
    "kind": "file",
    "name": "src/cli/screenplay/index.ts",
    "content": "export * from './abilities';\nexport * from './interactions';\nexport * from './tasks';\nexport * from './questions';\n",
    "static": true,
    "longname": "/home/travis/build/serenity-js/serenity-js/packages/serenity-bdd/src/cli/screenplay/index.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 203,
    "kind": "file",
    "name": "src/cli/screenplay/interactions/Complain.ts",
    "content": "import { AnswersQuestions, CollectsArtifacts, Interaction, UsesAbilities } from '@serenity-js/core';\nimport { Complaint } from '../../model';\n\n/**\n * @package\n */\nexport class Complain extends Interaction {\n    static about(error: Error) {\n        return new Complain(error);\n    }\n\n    constructor(private readonly error: Error) {\n        super();\n    }\n\n    /**\n     * @desc\n     *  Makes the provided {@link @serenity-js/core/lib/screenplay/actor~Actor}\n     *  perform this {@link @serenity-js/core/lib/screenplay~Interaction}.\n     *\n     * @param {UsesAbilities & AnswersQuestions & CollectsArtifacts} actor\n     * @returns {Promise<void>}\n     *\n     * @see {@link @serenity-js/core/lib/screenplay/actor~Actor}\n     * @see {@link @serenity-js/core/lib/screenplay/actor~UsesAbilities}\n     * @see {@link @serenity-js/core/lib/screenplay/actor~AnswersQuestions}\n     */\n    performAs(actor: UsesAbilities & AnswersQuestions & CollectsArtifacts): PromiseLike<void> {\n        return Promise.resolve(\n            actor.collect(Complaint.fromJSON({\n                description: this.description(),\n                message:     this.error.message,\n                stack:       this.error.stack,\n            })),\n        );\n    }\n\n    /**\n     * @desc\n     *  Generates a description to be used when reporting this {@link @serenity-js/core/lib/screenplay~Activity}.\n     *\n     * @returns {string}\n     */\n    toString(): string {\n        return `#actor complains about: ${ this.error.message }`;\n    }\n\n    private description() {\n        switch (true) {\n            case /ETIMEDOUT/.test(this.error.message):\n                return `Are you behind a proxy or a firewall that needs to be configured?`;\n            case /self signed certificate in certificate chain/.test(this.error.message):\n                return `If you're using a self-signed certificate you might want to check if it's configured correctly, ` +\n                    `or use the --ignoreSSL option.`;\n            default:\n                return `I'm terribly sorry, but something didn't go according to plan.`;\n        }\n    }\n}\n",
    "static": true,
    "longname": "/home/travis/build/serenity-js/serenity-js/packages/serenity-bdd/src/cli/screenplay/interactions/Complain.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 204,
    "kind": "class",
    "name": "Complain",
    "memberof": "src/cli/screenplay/interactions/Complain.ts",
    "static": true,
    "longname": "src/cli/screenplay/interactions/Complain.ts~Complain",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/serenity-bdd/src/cli/screenplay/interactions/Complain.ts",
    "importStyle": "{Complain}",
    "description": "",
    "lineNumber": 14,
    "interface": false,
    "extends": [
      "@serenity-js/core~Interaction"
    ],
    "ignore": true
  },
  {
    "__docId__": 205,
    "kind": "method",
    "name": "about",
    "memberof": "src/cli/screenplay/interactions/Complain.ts~Complain",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cli/screenplay/interactions/Complain.ts~Complain.about",
    "access": "public",
    "description": " ",
    "lineNumber": 8,
    "params": [
      {
        "nullable": null,
        "types": [
          "Error"
        ],
        "spread": false,
        "optional": false,
        "name": "error",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 206,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/cli/screenplay/interactions/Complain.ts~Complain",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/screenplay/interactions/Complain.ts~Complain#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "undocument": true
  },
  {
    "__docId__": 207,
    "kind": "method",
    "name": "performAs",
    "memberof": "src/cli/screenplay/interactions/Complain.ts~Complain",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/screenplay/interactions/Complain.ts~Complain#performAs",
    "access": "public",
    "description": " Makes the provided {@link @serenity-js/core/lib/screenplay/actor~Actor}\n perform this {@link @serenity-js/core/lib/screenplay~Interaction}.",
    "see": [
      "{@link @serenity-js/core/lib/screenplay/actor~Actor}",
      "{@link @serenity-js/core/lib/screenplay/actor~UsesAbilities}",
      "{@link @serenity-js/core/lib/screenplay/actor~AnswersQuestions}"
    ],
    "lineNumber": 61,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<void>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "UsesAbilities & AnswersQuestions & CollectsArtifacts"
        ],
        "spread": false,
        "optional": false,
        "name": "actor",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 208,
    "kind": "method",
    "name": "toString",
    "memberof": "src/cli/screenplay/interactions/Complain.ts~Complain",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/screenplay/interactions/Complain.ts~Complain#toString",
    "access": "public",
    "description": " Generates a description to be used when reporting this {@link @serenity-js/core/lib/screenplay~Activity}.",
    "lineNumber": 88,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 209,
    "kind": "method",
    "name": "description",
    "memberof": "src/cli/screenplay/interactions/Complain.ts~Complain",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/screenplay/interactions/Complain.ts~Complain#description",
    "access": "private",
    "description": " ",
    "lineNumber": 48,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 210,
    "kind": "file",
    "name": "src/cli/screenplay/interactions/CreateDirectory.ts",
    "content": "import { Interaction } from '@serenity-js/core';\nimport { Path } from '@serenity-js/core/lib/io';\nimport { UseFileSystem } from '../abilities';\n\n/**\n * @package\n */\nexport const CreateDirectory = {\n    at: (destination: Path) => Interaction.where(`#actor creates a directory at ${ destination.value }`, actor =>\n        UseFileSystem.as(actor).createDirectory(destination).then(_ => void 0)),\n};\n",
    "static": true,
    "longname": "/home/travis/build/serenity-js/serenity-js/packages/serenity-bdd/src/cli/screenplay/interactions/CreateDirectory.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 211,
    "kind": "variable",
    "name": "CreateDirectory",
    "memberof": "src/cli/screenplay/interactions/CreateDirectory.ts",
    "static": true,
    "longname": "src/cli/screenplay/interactions/CreateDirectory.ts~CreateDirectory",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/serenity-bdd/src/cli/screenplay/interactions/CreateDirectory.ts",
    "importStyle": "{CreateDirectory}",
    "description": "",
    "lineNumber": 8,
    "ignore": true,
    "type": {
      "types": [
        "{\"at\": *}"
      ]
    }
  },
  {
    "__docId__": 212,
    "kind": "file",
    "name": "src/cli/screenplay/interactions/Notify.ts",
    "content": "import { Interaction } from '@serenity-js/core';\nimport { Notification } from '../../model';\n\n/**\n * @package\n */\nexport const Notify = {\n    that: (message: string) => Interaction.where(`#actor notifies that \"${ message }\"`, actor =>\n        actor.collect(Notification.fromJSON({ message })),\n    ),\n};\n",
    "static": true,
    "longname": "/home/travis/build/serenity-js/serenity-js/packages/serenity-bdd/src/cli/screenplay/interactions/Notify.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 213,
    "kind": "variable",
    "name": "Notify",
    "memberof": "src/cli/screenplay/interactions/Notify.ts",
    "static": true,
    "longname": "src/cli/screenplay/interactions/Notify.ts~Notify",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/serenity-bdd/src/cli/screenplay/interactions/Notify.ts",
    "importStyle": "{Notify}",
    "description": "",
    "lineNumber": 7,
    "ignore": true,
    "type": {
      "types": [
        "{\"that\": *}"
      ]
    }
  },
  {
    "__docId__": 214,
    "kind": "file",
    "name": "src/cli/screenplay/interactions/RenameFile.ts",
    "content": "import { Interaction } from '@serenity-js/core';\nimport { Path } from '@serenity-js/core/lib/io';\nimport { UseFileSystem } from '../abilities';\n\n/**\n * @package\n */\nexport const RenameFile = {\n    from: (source: Path) => ({\n        to: (destination: Path) => Interaction.where(`#actor renames ${ source.value } to ${ destination.value }`, actor =>\n            UseFileSystem.as(actor).rename(source, destination)),\n    }),\n};\n",
    "static": true,
    "longname": "/home/travis/build/serenity-js/serenity-js/packages/serenity-bdd/src/cli/screenplay/interactions/RenameFile.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 215,
    "kind": "variable",
    "name": "RenameFile",
    "memberof": "src/cli/screenplay/interactions/RenameFile.ts",
    "static": true,
    "longname": "src/cli/screenplay/interactions/RenameFile.ts~RenameFile",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/serenity-bdd/src/cli/screenplay/interactions/RenameFile.ts",
    "importStyle": "{RenameFile}",
    "description": "",
    "lineNumber": 8,
    "ignore": true,
    "type": {
      "types": [
        "{\"from\": *}"
      ]
    }
  },
  {
    "__docId__": 216,
    "kind": "file",
    "name": "src/cli/screenplay/interactions/Spawn.ts",
    "content": "import { Answerable, AnswersQuestions, CollectsArtifacts, Interaction, UsesAbilities } from '@serenity-js/core';\nimport { formatted, Path } from '@serenity-js/core/lib/io';\nimport { spawn } from 'child_process';\nimport { Complaint, ExecutionError, Notification } from '../../model';\n\n/**\n * @package\n */\nexport class Spawn extends Interaction {\n    static the(pathToExecutable: Answerable<Path>, ...args: string[]) {\n        return new Spawn(pathToExecutable, args);\n    }\n\n    constructor(\n        private readonly pathToExecutable: Answerable<Path>,\n        private readonly args: string[],\n    ) {\n        super();\n    }\n\n    /**\n     * @desc\n     *  Makes the provided {@link @serenity-js/core/lib/screenplay/actor~Actor}\n     *  perform this {@link @serenity-js/core/lib/screenplay~Interaction}.\n     *\n     * @param {UsesAbilities & AnswersQuestions & CollectsArtifacts} actor\n     * @returns {Promise<void>}\n     *\n     * @see {@link @serenity-js/core/lib/screenplay/actor~Actor}\n     * @see {@link @serenity-js/core/lib/screenplay/actor~UsesAbilities}\n     * @see {@link @serenity-js/core/lib/screenplay/actor~AnswersQuestions}\n     * @see {@link @serenity-js/core/lib/screenplay/actor~CollectsArtifacts}\n     */\n    performAs(actor: UsesAbilities & AnswersQuestions & CollectsArtifacts): PromiseLike<void> {\n        return actor.answer(this.pathToExecutable)\n            .then(pathToExecutable => new Promise((resolve, reject) => {\n                actor.collect(Notification.fromJSON({ message: `Spawning: ${ pathToExecutable.value } ${ this.args.join(' ') }` }));\n\n                const spawned = spawn(pathToExecutable.value, this.args, { stdio: [process.stdin, process.stdout, process.stderr] });\n\n                spawned.once('error', (error: Error) =>\n                    actor.collect(Complaint.fromJSON({ description: `Invoking Serenity BDD CLI has failed`, message: error.message, stack: error.stack })),\n                );\n\n                spawned.once('exit', (exitCode: number) =>\n                    exitCode !== 0\n                        ? reject(new ExecutionError(`The following process exited with ${ exitCode }: ${ pathToExecutable.value } ${ this.args.join(' ') }`))\n                        : resolve(void 0),\n                );\n            }));\n    }\n\n    /**\n     * @desc\n     *  Generates a description to be used when reporting this {@link @serenity-js/core/lib/screenplay~Activity}.\n     *\n     * @returns {string}\n     */\n    toString(): string {\n        return formatted `#actor executes ${ this.pathToExecutable } with ${ this.args }`;\n    }\n}\n",
    "static": true,
    "longname": "/home/travis/build/serenity-js/serenity-js/packages/serenity-bdd/src/cli/screenplay/interactions/Spawn.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 217,
    "kind": "class",
    "name": "Spawn",
    "memberof": "src/cli/screenplay/interactions/Spawn.ts",
    "static": true,
    "longname": "src/cli/screenplay/interactions/Spawn.ts~Spawn",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/serenity-bdd/src/cli/screenplay/interactions/Spawn.ts",
    "importStyle": "{Spawn}",
    "description": "",
    "lineNumber": 16,
    "interface": false,
    "extends": [
      "@serenity-js/core~Interaction"
    ],
    "ignore": true
  },
  {
    "__docId__": 218,
    "kind": "method",
    "name": "the",
    "memberof": "src/cli/screenplay/interactions/Spawn.ts~Spawn",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cli/screenplay/interactions/Spawn.ts~Spawn.the",
    "access": "public",
    "description": " ",
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "Answerable"
        ],
        "spread": false,
        "optional": false,
        "name": "pathToExecutable",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "UNKNOWN"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 219,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/cli/screenplay/interactions/Spawn.ts~Spawn",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/screenplay/interactions/Spawn.ts~Spawn#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 36,
    "undocument": true
  },
  {
    "__docId__": 220,
    "kind": "method",
    "name": "performAs",
    "memberof": "src/cli/screenplay/interactions/Spawn.ts~Spawn",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/screenplay/interactions/Spawn.ts~Spawn#performAs",
    "access": "public",
    "description": " Makes the provided {@link @serenity-js/core/lib/screenplay/actor~Actor}\n perform this {@link @serenity-js/core/lib/screenplay~Interaction}.",
    "see": [
      "{@link @serenity-js/core/lib/screenplay/actor~Actor}",
      "{@link @serenity-js/core/lib/screenplay/actor~UsesAbilities}",
      "{@link @serenity-js/core/lib/screenplay/actor~AnswersQuestions}",
      "{@link @serenity-js/core/lib/screenplay/actor~CollectsArtifacts}"
    ],
    "lineNumber": 69,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<void>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "UsesAbilities & AnswersQuestions & CollectsArtifacts"
        ],
        "spread": false,
        "optional": false,
        "name": "actor",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 221,
    "kind": "method",
    "name": "toString",
    "memberof": "src/cli/screenplay/interactions/Spawn.ts~Spawn",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/screenplay/interactions/Spawn.ts~Spawn#toString",
    "access": "public",
    "description": " Generates a description to be used when reporting this {@link @serenity-js/core/lib/screenplay~Activity}.",
    "lineNumber": 105,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 222,
    "kind": "file",
    "name": "src/cli/screenplay/interactions/StreamResponse.ts",
    "content": "import { Answerable, AnswersQuestions, CollectsArtifacts, Interaction, UsesAbilities } from '@serenity-js/core';\nimport { formatted, Path } from '@serenity-js/core/lib/io';\nimport { CallAnApi } from '@serenity-js/rest';\nimport { AxiosRequestConfig } from 'axios';\nimport { DownloadProgressReport } from '../../model';\nimport { UseFileSystem } from '../abilities';\n\n/**\n * @package\n */\nexport class StreamResponse extends Interaction {\n\n    static to(request: Answerable<AxiosRequestConfig>) {\n        return {\n            to: (destination: Path) => new StreamResponse(request, destination),\n        };\n    }\n\n    constructor(\n        private readonly request: Answerable<AxiosRequestConfig>,\n        private readonly destination: Path,\n    ) {\n        super();\n    }\n\n    /**\n     * @desc\n     *  Makes the provided {@link @serenity-js/core/lib/screenplay/actor~Actor}\n     *  perform this {@link @serenity-js/core/lib/screenplay~Interaction}.\n     *\n     * @param {UsesAbilities & CollectsArtifacts & AnswersQuestions} actor\n     * @returns {Promise<void>}\n     *\n     * @see {@link @serenity-js/core/lib/screenplay/actor~Actor}\n     * @see {@link @serenity-js/core/lib/screenplay/actor~UsesAbilities}\n     * @see {@link @serenity-js/core/lib/screenplay/actor~CollectsArtifacts}\n     * @see {@link @serenity-js/core/lib/screenplay/actor~AnswersQuestions}\n     */\n    performAs(actor: UsesAbilities & CollectsArtifacts & AnswersQuestions): Promise<void> {\n        return actor.answer(this.request)\n            .then((config: AxiosRequestConfig) => CallAnApi.as(actor).request({\n                ...config,\n                responseType: 'stream',\n            }).\n            then(response => new Promise((resolve, reject) => {\n\n                const\n                    totalBytes  = parseInt(response.headers['content-length'], 10),\n                    output      = UseFileSystem.as(actor).createWriteStreamTo(this.destination);\n\n                let totalDownloadedBytes  = 0;\n\n                response.data.pipe(output);\n\n                response.data.on('data', chunk => {\n                    const downloadedBytes = chunk.length;\n                    totalDownloadedBytes += downloadedBytes;\n\n                    actor.collect(DownloadProgressReport.fromJSON({\n                        downloadedBytes,\n                        totalDownloadedBytes,\n                        totalBytes,\n                    }));\n                });\n\n                response.data.on('end', () => {\n                    output.end();\n                    return resolve();\n                });\n\n                response.data.on('error', error => reject(error));\n            })));\n    }\n\n    /**\n     * @desc\n     *  Generates a description to be used when reporting this {@link @serenity-js/core/lib/screenplay~Activity}.\n     *\n     * @returns {string}\n     */\n    toString() {\n        return formatted `#actor saves response to ${ this.request } in ${ this.destination.value }`;\n    }\n}\n",
    "static": true,
    "longname": "/home/travis/build/serenity-js/serenity-js/packages/serenity-bdd/src/cli/screenplay/interactions/StreamResponse.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 223,
    "kind": "class",
    "name": "StreamResponse",
    "memberof": "src/cli/screenplay/interactions/StreamResponse.ts",
    "static": true,
    "longname": "src/cli/screenplay/interactions/StreamResponse.ts~StreamResponse",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/serenity-bdd/src/cli/screenplay/interactions/StreamResponse.ts",
    "importStyle": "{StreamResponse}",
    "description": "",
    "lineNumber": 18,
    "interface": false,
    "extends": [
      "@serenity-js/core~Interaction"
    ],
    "ignore": true
  },
  {
    "__docId__": 224,
    "kind": "method",
    "name": "to",
    "memberof": "src/cli/screenplay/interactions/StreamResponse.ts~StreamResponse",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cli/screenplay/interactions/StreamResponse.ts~StreamResponse.to",
    "access": "public",
    "description": " ",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "Answerable"
        ],
        "spread": false,
        "optional": false,
        "name": "request",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "{\"to\": *}"
      ]
    }
  },
  {
    "__docId__": 225,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/cli/screenplay/interactions/StreamResponse.ts~StreamResponse",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/screenplay/interactions/StreamResponse.ts~StreamResponse#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "undocument": true
  },
  {
    "__docId__": 226,
    "kind": "method",
    "name": "performAs",
    "memberof": "src/cli/screenplay/interactions/StreamResponse.ts~StreamResponse",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/screenplay/interactions/StreamResponse.ts~StreamResponse#performAs",
    "access": "public",
    "description": " Makes the provided {@link @serenity-js/core/lib/screenplay/actor~Actor}\n perform this {@link @serenity-js/core/lib/screenplay~Interaction}.",
    "see": [
      "{@link @serenity-js/core/lib/screenplay/actor~Actor}",
      "{@link @serenity-js/core/lib/screenplay/actor~UsesAbilities}",
      "{@link @serenity-js/core/lib/screenplay/actor~CollectsArtifacts}",
      "{@link @serenity-js/core/lib/screenplay/actor~AnswersQuestions}"
    ],
    "lineNumber": 72,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<void>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "UsesAbilities & CollectsArtifacts & AnswersQuestions"
        ],
        "spread": false,
        "optional": false,
        "name": "actor",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 227,
    "kind": "method",
    "name": "toString",
    "memberof": "src/cli/screenplay/interactions/StreamResponse.ts~StreamResponse",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/screenplay/interactions/StreamResponse.ts~StreamResponse#toString",
    "access": "public",
    "description": " Generates a description to be used when reporting this {@link @serenity-js/core/lib/screenplay~Activity}.",
    "lineNumber": 123,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 228,
    "kind": "file",
    "name": "src/cli/screenplay/interactions/TerminateFlow.ts",
    "content": "import { Interaction } from '@serenity-js/core';\nimport { ExecutionError } from '../../model';\n\n/**\n * @package\n */\nexport const TerminateFlow = {\n    because: (message: string, cause?: Error) => Interaction.where(`#actor terminates the flow because \"${ message }\"`, actor => {\n        throw new ExecutionError(message, cause);\n    }),\n};\n",
    "static": true,
    "longname": "/home/travis/build/serenity-js/serenity-js/packages/serenity-bdd/src/cli/screenplay/interactions/TerminateFlow.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 229,
    "kind": "variable",
    "name": "TerminateFlow",
    "memberof": "src/cli/screenplay/interactions/TerminateFlow.ts",
    "static": true,
    "longname": "src/cli/screenplay/interactions/TerminateFlow.ts~TerminateFlow",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/serenity-bdd/src/cli/screenplay/interactions/TerminateFlow.ts",
    "importStyle": "{TerminateFlow}",
    "description": "",
    "lineNumber": 7,
    "ignore": true,
    "type": {
      "types": [
        "{\"because\": *}"
      ]
    }
  },
  {
    "__docId__": 230,
    "kind": "file",
    "name": "src/cli/screenplay/interactions/index.ts",
    "content": "export * from './Complain';\nexport * from './CreateDirectory';\nexport * from './Notify';\nexport * from './Spawn';\nexport * from './StreamResponse';\n",
    "static": true,
    "longname": "/home/travis/build/serenity-js/serenity-js/packages/serenity-bdd/src/cli/screenplay/interactions/index.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 231,
    "kind": "file",
    "name": "src/cli/screenplay/questions/FileExists.ts",
    "content": "import { Question } from '@serenity-js/core';\nimport { Path } from '@serenity-js/core/lib/io';\nimport { UseFileSystem } from '../abilities';\n\n/**\n * @package\n */\nexport const FileExists = {\n    at: (path: Path) => Question.about<Promise<boolean>>(`${ path.value } exists`, actor =>\n        UseFileSystem.as(actor).attributesOf(path)\n            .then(_ => true)\n            .catch(error => {\n                if (error.code !== 'ENOENT') {\n                    throw error;\n                }\n\n                return false;\n            }),\n    ),\n};\n",
    "static": true,
    "longname": "/home/travis/build/serenity-js/serenity-js/packages/serenity-bdd/src/cli/screenplay/questions/FileExists.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 232,
    "kind": "variable",
    "name": "FileExists",
    "memberof": "src/cli/screenplay/questions/FileExists.ts",
    "static": true,
    "longname": "src/cli/screenplay/questions/FileExists.ts~FileExists",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/serenity-bdd/src/cli/screenplay/questions/FileExists.ts",
    "importStyle": "{FileExists}",
    "description": "",
    "lineNumber": 8,
    "ignore": true,
    "type": {
      "types": [
        "{\"at\": *}"
      ]
    }
  },
  {
    "__docId__": 233,
    "kind": "file",
    "name": "src/cli/screenplay/questions/JavaExecutable.ts",
    "content": "import { AnswersQuestions, Question, UsesAbilities } from '@serenity-js/core';\nimport { Path } from '@serenity-js/core/lib/io';\nimport * as path from 'path';\nimport { promisify } from 'util';\nconst findJavaHome = promisify(require('find-java-home'));  // tslint:disable-line:no-var-requires\n\n/**\n * @package\n */\nexport class JavaExecutable extends Question<Promise<Path>> {\n    answeredBy(actor: AnswersQuestions & UsesAbilities): Promise<Path> {\n        return findJavaHome({ allowJre: true })\n            .then(pathToJavaHome => path.join(pathToJavaHome, 'bin', this.javaFileName()))\n            .then(Path.fromJSON);\n    }\n\n    toString() {\n        return `java executable`;\n    }\n\n    private javaFileName() {\n        return this.isWindows()\n            ? 'java.exe'\n            : 'java';\n    }\n\n    private isWindows() {\n        return process.platform.indexOf('win') === 0;\n    }\n}\n",
    "static": true,
    "longname": "/home/travis/build/serenity-js/serenity-js/packages/serenity-bdd/src/cli/screenplay/questions/JavaExecutable.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 234,
    "kind": "variable",
    "name": "findJavaHome",
    "memberof": "src/cli/screenplay/questions/JavaExecutable.ts",
    "static": true,
    "longname": "src/cli/screenplay/questions/JavaExecutable.ts~findJavaHome",
    "access": "public",
    "export": false,
    "importPath": "@serenity-js/serenity-bdd/src/cli/screenplay/questions/JavaExecutable.ts",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 235,
    "kind": "class",
    "name": "JavaExecutable",
    "memberof": "src/cli/screenplay/questions/JavaExecutable.ts",
    "static": true,
    "longname": "src/cli/screenplay/questions/JavaExecutable.ts~JavaExecutable",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/serenity-bdd/src/cli/screenplay/questions/JavaExecutable.ts",
    "importStyle": "{JavaExecutable}",
    "description": "",
    "lineNumber": 17,
    "interface": false,
    "extends": [
      "@serenity-js/core~Question"
    ],
    "ignore": true
  },
  {
    "__docId__": 236,
    "kind": "method",
    "name": "answeredBy",
    "memberof": "src/cli/screenplay/questions/JavaExecutable.ts~JavaExecutable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/screenplay/questions/JavaExecutable.ts~JavaExecutable#answeredBy",
    "access": "public",
    "description": " ",
    "lineNumber": 11,
    "params": [
      {
        "nullable": null,
        "types": [
          "AnswersQuestions & UsesAbilities"
        ],
        "spread": false,
        "optional": false,
        "name": "actor",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 237,
    "kind": "method",
    "name": "toString",
    "memberof": "src/cli/screenplay/questions/JavaExecutable.ts~JavaExecutable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/screenplay/questions/JavaExecutable.ts~JavaExecutable#toString",
    "access": "public",
    "description": " ",
    "lineNumber": 17,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 238,
    "kind": "method",
    "name": "javaFileName",
    "memberof": "src/cli/screenplay/questions/JavaExecutable.ts~JavaExecutable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/screenplay/questions/JavaExecutable.ts~JavaExecutable#javaFileName",
    "access": "private",
    "description": " ",
    "lineNumber": 21,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 239,
    "kind": "method",
    "name": "isWindows",
    "memberof": "src/cli/screenplay/questions/JavaExecutable.ts~JavaExecutable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/screenplay/questions/JavaExecutable.ts~JavaExecutable#isWindows",
    "access": "private",
    "description": " ",
    "lineNumber": 27,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 240,
    "kind": "file",
    "name": "src/cli/screenplay/questions/SerenityBDDArguments.ts",
    "content": "import { AnswersQuestions, Question, UsesAbilities } from '@serenity-js/core';\nimport { Argv } from '../../Argv';\n\n/**\n * @package\n */\nexport class SerenityBDDArguments extends Question<string[]> {\n    private static Allowed =  [\n        'destination',\n        'features',\n        'issueTrackerUrl',\n        'jiraProject',\n        'jiraUrl',\n        'project',\n        'source',\n    ];\n\n    static from(argv: Argv) {\n        return new SerenityBDDArguments(argv);\n    }\n\n    constructor(private readonly argv: Argv) {\n        super();\n    }\n\n    answeredBy(actor: AnswersQuestions & UsesAbilities): string[] {\n        return flatten(Object.keys(this.argv)\n            .filter(key => !! ~ SerenityBDDArguments.Allowed.indexOf(key) && !! this.argv[key])\n            .map(arg => [`--${ arg }`, this.argv[arg]]));\n    }\n\n    toString() {\n        return 'Serenity BDD arguments';\n    }\n}\n\nfunction flatten(list: any[]) {\n    return list.reduce((acc, current) => {\n        Array.isArray(current)\n            ? acc.push(...flatten(current))\n            : acc.push(current);\n        return acc;\n    }, []);\n}\n",
    "static": true,
    "longname": "/home/travis/build/serenity-js/serenity-js/packages/serenity-bdd/src/cli/screenplay/questions/SerenityBDDArguments.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 241,
    "kind": "class",
    "name": "SerenityBDDArguments",
    "memberof": "src/cli/screenplay/questions/SerenityBDDArguments.ts",
    "static": true,
    "longname": "src/cli/screenplay/questions/SerenityBDDArguments.ts~SerenityBDDArguments",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/serenity-bdd/src/cli/screenplay/questions/SerenityBDDArguments.ts",
    "importStyle": "{SerenityBDDArguments}",
    "description": "",
    "lineNumber": 14,
    "interface": false,
    "extends": [
      "@serenity-js/core~Question"
    ],
    "ignore": true
  },
  {
    "__docId__": 242,
    "kind": "member",
    "name": "Allowed",
    "memberof": "src/cli/screenplay/questions/SerenityBDDArguments.ts~SerenityBDDArguments",
    "static": true,
    "longname": "src/cli/screenplay/questions/SerenityBDDArguments.ts~SerenityBDDArguments.Allowed",
    "access": "private",
    "description": " ",
    "lineNumber": 8,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 243,
    "kind": "method",
    "name": "from",
    "memberof": "src/cli/screenplay/questions/SerenityBDDArguments.ts~SerenityBDDArguments",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cli/screenplay/questions/SerenityBDDArguments.ts~SerenityBDDArguments.from",
    "access": "public",
    "description": " ",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "Argv"
        ],
        "spread": false,
        "optional": false,
        "name": "argv",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 244,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/cli/screenplay/questions/SerenityBDDArguments.ts~SerenityBDDArguments",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/screenplay/questions/SerenityBDDArguments.ts~SerenityBDDArguments#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 53,
    "undocument": true
  },
  {
    "__docId__": 245,
    "kind": "method",
    "name": "answeredBy",
    "memberof": "src/cli/screenplay/questions/SerenityBDDArguments.ts~SerenityBDDArguments",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/screenplay/questions/SerenityBDDArguments.ts~SerenityBDDArguments#answeredBy",
    "access": "public",
    "description": " ",
    "lineNumber": 26,
    "params": [
      {
        "nullable": null,
        "types": [
          "AnswersQuestions & UsesAbilities"
        ],
        "spread": false,
        "optional": false,
        "name": "actor",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "UNKNOWN"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 246,
    "kind": "method",
    "name": "toString",
    "memberof": "src/cli/screenplay/questions/SerenityBDDArguments.ts~SerenityBDDArguments",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/screenplay/questions/SerenityBDDArguments.ts~SerenityBDDArguments#toString",
    "access": "public",
    "description": " ",
    "lineNumber": 32,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 247,
    "kind": "function",
    "name": "flatten",
    "memberof": "src/cli/screenplay/questions/SerenityBDDArguments.ts",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cli/screenplay/questions/SerenityBDDArguments.ts~flatten",
    "access": "public",
    "export": false,
    "importPath": "@serenity-js/serenity-bdd/src/cli/screenplay/questions/SerenityBDDArguments.ts",
    "importStyle": null,
    "description": " ",
    "lineNumber": 37,
    "params": [
      {
        "nullable": null,
        "types": [
          "UNKNOWN"
        ],
        "spread": false,
        "optional": false,
        "name": "list",
        "description": ""
      }
    ],
    "ignore": true,
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 248,
    "kind": "file",
    "name": "src/cli/screenplay/questions/SystemProperties.ts",
    "content": "import { AnswersQuestions, Question, UsesAbilities } from '@serenity-js/core';\nimport { Argv } from '../../Argv';\n\n/**\n * @package\n */\nexport class SystemProperties extends Question<string[]> {\n    static from(argv: Argv) {\n        return new SystemProperties(argv);\n    }\n\n    constructor(private readonly argv: Argv) {\n        super();\n    }\n\n    answeredBy(actor: AnswersQuestions & UsesAbilities): string[] {\n        return Object.keys(this.argv)\n            .map(arg => `-D${ arg }=${ this.argv[arg] }`);\n    }\n\n    toString() {\n        return 'system properties';\n    }\n}\n",
    "static": true,
    "longname": "/home/travis/build/serenity-js/serenity-js/packages/serenity-bdd/src/cli/screenplay/questions/SystemProperties.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 249,
    "kind": "class",
    "name": "SystemProperties",
    "memberof": "src/cli/screenplay/questions/SystemProperties.ts",
    "static": true,
    "longname": "src/cli/screenplay/questions/SystemProperties.ts~SystemProperties",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/serenity-bdd/src/cli/screenplay/questions/SystemProperties.ts",
    "importStyle": "{SystemProperties}",
    "description": "",
    "lineNumber": 14,
    "interface": false,
    "extends": [
      "@serenity-js/core~Question"
    ],
    "ignore": true
  },
  {
    "__docId__": 250,
    "kind": "method",
    "name": "from",
    "memberof": "src/cli/screenplay/questions/SystemProperties.ts~SystemProperties",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cli/screenplay/questions/SystemProperties.ts~SystemProperties.from",
    "access": "public",
    "description": " ",
    "lineNumber": 8,
    "params": [
      {
        "nullable": null,
        "types": [
          "Argv"
        ],
        "spread": false,
        "optional": false,
        "name": "argv",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 251,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/cli/screenplay/questions/SystemProperties.ts~SystemProperties",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/screenplay/questions/SystemProperties.ts~SystemProperties#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "undocument": true
  },
  {
    "__docId__": 252,
    "kind": "method",
    "name": "answeredBy",
    "memberof": "src/cli/screenplay/questions/SystemProperties.ts~SystemProperties",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/screenplay/questions/SystemProperties.ts~SystemProperties#answeredBy",
    "access": "public",
    "description": " ",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "AnswersQuestions & UsesAbilities"
        ],
        "spread": false,
        "optional": false,
        "name": "actor",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "UNKNOWN"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 253,
    "kind": "method",
    "name": "toString",
    "memberof": "src/cli/screenplay/questions/SystemProperties.ts~SystemProperties",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/screenplay/questions/SystemProperties.ts~SystemProperties#toString",
    "access": "public",
    "description": " ",
    "lineNumber": 21,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 254,
    "kind": "file",
    "name": "src/cli/screenplay/questions/index.ts",
    "content": "export * from './FileExists';\nexport * from './JavaExecutable';\nexport * from './SerenityBDDArguments';\n",
    "static": true,
    "longname": "/home/travis/build/serenity-js/serenity-js/packages/serenity-bdd/src/cli/screenplay/questions/index.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 255,
    "kind": "file",
    "name": "src/cli/screenplay/tasks/DownloadArtifact.ts",
    "content": "import { AnswersQuestions, PerformsActivities, Task, UsesAbilities } from '@serenity-js/core';\nimport { Path } from '@serenity-js/core/lib/io';\nimport { GetRequest } from '@serenity-js/rest';\nimport { AxiosRequestConfig } from 'axios';\nimport { resolve, URL } from 'url';\nimport { GAV } from '../../model';\nimport { CreateDirectory, Notify, StreamResponse } from '../interactions';\nimport { RenameFile } from '../interactions/RenameFile';\n\n/**\n * @package\n */\nexport class DownloadArtifact extends Task {\n    static identifiedBy(artifactIdentifier: GAV) {\n        return {\n            availableFrom: (repository: URL) => ({\n                to: (destinationDirectory: Path) => new DownloadArtifact(artifactIdentifier, repository, destinationDirectory),\n            }),\n        };\n    }\n\n    constructor(\n        private readonly gav: GAV,\n        private readonly repository: URL,\n        private readonly destinationDirectory: Path,\n        private readonly config?: AxiosRequestConfig,\n    ) {\n        super();\n    }\n\n    using(config: AxiosRequestConfig): DownloadArtifact {\n        return new DownloadArtifact(this.gav, this.repository, this.destinationDirectory, config);\n    }\n\n    /**\n     * @desc\n     *  Makes the provided {@link @serenity-js/core/lib/screenplay/actor~Actor}\n     *  perform this {@link @serenity-js/core/lib/screenplay~Task}.\n     *\n     * @param {PerformsActivities & UsesAbilities & AnswersQuestions} actor\n     * @returns {Promise<void>}\n     *\n     * @see {@link @serenity-js/core/lib/screenplay/actor~Actor}\n     * @see {@link @serenity-js/core/lib/screenplay/actor~PerformsActivities}\n     * @see {@link @serenity-js/core/lib/screenplay/actor~UsesAbilities}\n     * @see {@link @serenity-js/core/lib/screenplay/actor~AnswersQuestions}\n     */\n    performAs(actor: PerformsActivities & UsesAbilities & AnswersQuestions): PromiseLike<void> | PromiseLike<any> {\n        const\n            tempFileName        = new Path(`${ this.gav.toPath().value }.download`),\n            pathToTempFile      = this.destinationDirectory.join(tempFileName),\n            pathToFinishedFile  = this.destinationDirectory.join(this.gav.toPath());\n\n        return actor.attemptsTo(\n            Notify.that(`Looks like you need the latest Serenity BDD CLI jar. Let me download it for you...`),\n            CreateDirectory.at(this.destinationDirectory),\n            StreamResponse\n                .to(GetRequest.to(this.artifactURL()).using(this.config))\n                .to(this.destinationDirectory.join(tempFileName)),\n            RenameFile.from(pathToTempFile).to(pathToFinishedFile),\n            Notify.that(`Downloaded ${ pathToFinishedFile.value }`),\n        );\n    }\n\n    /**\n     * @desc\n     *  Generates a description to be used when reporting this {@link @serenity-js/core/lib/screenplay~Activity}.\n     *\n     * @returns {string}\n     */\n    toString(): string {\n        return `#actor downloads ${ this.gav.toPath().value } from ${ this.repository.toString() }`;\n    }\n\n    private artifactURL() {\n        const path = [\n            ...this.gav.groupId.split('.'),\n            this.gav.artifactId,\n            this.gav.version,\n            this.gav.toPath().value,\n        ].join('/');\n\n        return resolve(\n            this.repository.toString(),\n            path,\n        );\n    }\n}\n",
    "static": true,
    "longname": "/home/travis/build/serenity-js/serenity-js/packages/serenity-bdd/src/cli/screenplay/tasks/DownloadArtifact.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 256,
    "kind": "class",
    "name": "DownloadArtifact",
    "memberof": "src/cli/screenplay/tasks/DownloadArtifact.ts",
    "static": true,
    "longname": "src/cli/screenplay/tasks/DownloadArtifact.ts~DownloadArtifact",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/serenity-bdd/src/cli/screenplay/tasks/DownloadArtifact.ts",
    "importStyle": "{DownloadArtifact}",
    "description": "",
    "lineNumber": 20,
    "interface": false,
    "extends": [
      "@serenity-js/core~Task"
    ],
    "ignore": true
  },
  {
    "__docId__": 257,
    "kind": "method",
    "name": "identifiedBy",
    "memberof": "src/cli/screenplay/tasks/DownloadArtifact.ts~DownloadArtifact",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cli/screenplay/tasks/DownloadArtifact.ts~DownloadArtifact.identifiedBy",
    "access": "public",
    "description": " ",
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "GAV"
        ],
        "spread": false,
        "optional": false,
        "name": "artifactIdentifier",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "{\"availableFrom\": *}"
      ]
    }
  },
  {
    "__docId__": 258,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/cli/screenplay/tasks/DownloadArtifact.ts~DownloadArtifact",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/screenplay/tasks/DownloadArtifact.ts~DownloadArtifact#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 42,
    "undocument": true
  },
  {
    "__docId__": 259,
    "kind": "method",
    "name": "using",
    "memberof": "src/cli/screenplay/tasks/DownloadArtifact.ts~DownloadArtifact",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/screenplay/tasks/DownloadArtifact.ts~DownloadArtifact#using",
    "access": "public",
    "description": " ",
    "lineNumber": 31,
    "params": [
      {
        "nullable": null,
        "types": [
          "AxiosRequestConfig"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "DownloadArtifact"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 260,
    "kind": "method",
    "name": "performAs",
    "memberof": "src/cli/screenplay/tasks/DownloadArtifact.ts~DownloadArtifact",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/screenplay/tasks/DownloadArtifact.ts~DownloadArtifact#performAs",
    "access": "public",
    "description": " Makes the provided {@link @serenity-js/core/lib/screenplay/actor~Actor}\n perform this {@link @serenity-js/core/lib/screenplay~Task}.",
    "see": [
      "{@link @serenity-js/core/lib/screenplay/actor~Actor}",
      "{@link @serenity-js/core/lib/screenplay/actor~PerformsActivities}",
      "{@link @serenity-js/core/lib/screenplay/actor~UsesAbilities}",
      "{@link @serenity-js/core/lib/screenplay/actor~AnswersQuestions}"
    ],
    "lineNumber": 94,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<void>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "PerformsActivities & UsesAbilities & AnswersQuestions"
        ],
        "spread": false,
        "optional": false,
        "name": "actor",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 261,
    "kind": "method",
    "name": "toString",
    "memberof": "src/cli/screenplay/tasks/DownloadArtifact.ts~DownloadArtifact",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/screenplay/tasks/DownloadArtifact.ts~DownloadArtifact#toString",
    "access": "public",
    "description": " Generates a description to be used when reporting this {@link @serenity-js/core/lib/screenplay~Activity}.",
    "lineNumber": 128,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 262,
    "kind": "method",
    "name": "artifactURL",
    "memberof": "src/cli/screenplay/tasks/DownloadArtifact.ts~DownloadArtifact",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/screenplay/tasks/DownloadArtifact.ts~DownloadArtifact#artifactURL",
    "access": "private",
    "description": " ",
    "lineNumber": 75,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 263,
    "kind": "file",
    "name": "src/cli/screenplay/tasks/InvokeSerenityBDD.ts",
    "content": "import { Check, equals, not } from '@serenity-js/assertions';\nimport { AnswersQuestions, Log, Note, PerformsActivities, Question, TakeNote, Task, UsesAbilities } from '@serenity-js/core';\nimport { Path } from '@serenity-js/core/lib/io';\nimport { Spawn } from '../interactions';\nimport { TerminateFlow } from '../interactions/TerminateFlow';\nimport { FileExists, JavaExecutable } from '../questions';\n\n/**\n * @package\n */\nexport class InvokeSerenityBDD extends Task {\n    static at(pathToArtifact: Path) {\n        return new InvokeSerenityBDD(pathToArtifact);\n    }\n\n    withArguments(args: Question<string[]>) {\n        return new InvokeSerenityBDD(this.pathToArtifact, args, this.props);\n    }\n\n    withProperties(properties: Question<string[]>) {\n        return new InvokeSerenityBDD(this.pathToArtifact, this.args, properties);\n    }\n\n    // tslint:disable-next-line:member-ordering\n    constructor(\n        private readonly pathToArtifact: Path,\n        private readonly args: Question<string[]>  = Question.about(`no arguments`, actor => []),\n        private readonly props: Question<string[]> = Question.about(`no properties`, actor => []),\n    ) {\n        super();\n    }\n\n    /**\n     * @desc\n     *  Makes the provided {@link @serenity-js/core/lib/screenplay/actor~Actor}\n     *  perform this {@link @serenity-js/core/lib/screenplay~Task}.\n     *\n     * @param {PerformsActivities & UsesAbilities & AnswersQuestions} actor\n     * @returns {Promise<void>}\n     *\n     * @see {@link @serenity-js/core/lib/screenplay/actor~Actor}\n     * @see {@link @serenity-js/core/lib/screenplay/actor~PerformsActivities}\n     * @see {@link @serenity-js/core/lib/screenplay/actor~UsesAbilities}\n     * @see {@link @serenity-js/core/lib/screenplay/actor~AnswersQuestions}\n     */\n    performAs(actor: PerformsActivities & UsesAbilities & AnswersQuestions): PromiseLike<void> | PromiseLike<any> {\n\n        return Promise.all([\n                actor.answer(this.args),\n                actor.answer(this.props),\n            ])\n            .then(([ args, props ]) =>\n                actor.attemptsTo(\n                    Check\n                        .whether(FileExists.at(this.pathToArtifact), equals(false))\n                        .andIfSo(TerminateFlow.because(\n                            `I couldn't access the Serenity BDD CLI at ${ this.pathToArtifact.value }. ` +\n                            `Did you remember to run \\`serenity-bdd update\\`?`,\n                        )),\n                    // todo: check if reports exist before invoking the jar?\n                    Spawn.the(new JavaExecutable(), ...props, '-jar', this.pathToArtifact.value, ...args),\n                ),\n        );\n    }\n\n    /**\n     * @desc\n     *  Generates a description to be used when reporting this {@link @serenity-js/core/lib/screenplay~Activity}.\n     *\n     * @returns {string}\n     */\n    toString(): string {\n        return `#actor invokes Serenity BDD`;\n    }\n}\n",
    "static": true,
    "longname": "/home/travis/build/serenity-js/serenity-js/packages/serenity-bdd/src/cli/screenplay/tasks/InvokeSerenityBDD.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 264,
    "kind": "class",
    "name": "InvokeSerenityBDD",
    "memberof": "src/cli/screenplay/tasks/InvokeSerenityBDD.ts",
    "static": true,
    "longname": "src/cli/screenplay/tasks/InvokeSerenityBDD.ts~InvokeSerenityBDD",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/serenity-bdd/src/cli/screenplay/tasks/InvokeSerenityBDD.ts",
    "importStyle": "{InvokeSerenityBDD}",
    "description": "",
    "lineNumber": 18,
    "interface": false,
    "extends": [
      "@serenity-js/core~Task"
    ],
    "ignore": true
  },
  {
    "__docId__": 265,
    "kind": "method",
    "name": "at",
    "memberof": "src/cli/screenplay/tasks/InvokeSerenityBDD.ts~InvokeSerenityBDD",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cli/screenplay/tasks/InvokeSerenityBDD.ts~InvokeSerenityBDD.at",
    "access": "public",
    "description": " ",
    "lineNumber": 12,
    "params": [
      {
        "nullable": null,
        "types": [
          "Path"
        ],
        "spread": false,
        "optional": false,
        "name": "pathToArtifact",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 266,
    "kind": "method",
    "name": "withArguments",
    "memberof": "src/cli/screenplay/tasks/InvokeSerenityBDD.ts~InvokeSerenityBDD",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/screenplay/tasks/InvokeSerenityBDD.ts~InvokeSerenityBDD#withArguments",
    "access": "public",
    "description": " ",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "Question"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 267,
    "kind": "method",
    "name": "withProperties",
    "memberof": "src/cli/screenplay/tasks/InvokeSerenityBDD.ts~InvokeSerenityBDD",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/screenplay/tasks/InvokeSerenityBDD.ts~InvokeSerenityBDD#withProperties",
    "access": "public",
    "description": " ",
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "Question"
        ],
        "spread": false,
        "optional": false,
        "name": "properties",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 268,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/cli/screenplay/tasks/InvokeSerenityBDD.ts~InvokeSerenityBDD",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/screenplay/tasks/InvokeSerenityBDD.ts~InvokeSerenityBDD#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 67,
    "undocument": true
  },
  {
    "__docId__": 269,
    "kind": "method",
    "name": "performAs",
    "memberof": "src/cli/screenplay/tasks/InvokeSerenityBDD.ts~InvokeSerenityBDD",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/screenplay/tasks/InvokeSerenityBDD.ts~InvokeSerenityBDD#performAs",
    "access": "public",
    "description": " Makes the provided {@link @serenity-js/core/lib/screenplay/actor~Actor}\n perform this {@link @serenity-js/core/lib/screenplay~Task}.",
    "see": [
      "{@link @serenity-js/core/lib/screenplay/actor~Actor}",
      "{@link @serenity-js/core/lib/screenplay/actor~PerformsActivities}",
      "{@link @serenity-js/core/lib/screenplay/actor~UsesAbilities}",
      "{@link @serenity-js/core/lib/screenplay/actor~AnswersQuestions}"
    ],
    "lineNumber": 101,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<void>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "PerformsActivities & UsesAbilities & AnswersQuestions"
        ],
        "spread": false,
        "optional": false,
        "name": "actor",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 270,
    "kind": "method",
    "name": "toString",
    "memberof": "src/cli/screenplay/tasks/InvokeSerenityBDD.ts~InvokeSerenityBDD",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/screenplay/tasks/InvokeSerenityBDD.ts~InvokeSerenityBDD#toString",
    "access": "public",
    "description": " Generates a description to be used when reporting this {@link @serenity-js/core/lib/screenplay~Activity}.",
    "lineNumber": 138,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 271,
    "kind": "file",
    "name": "src/cli/screenplay/tasks/index.ts",
    "content": "export * from './DownloadArtifact';\nexport * from './InvokeSerenityBDD';\n",
    "static": true,
    "longname": "/home/travis/build/serenity-js/serenity-js/packages/serenity-bdd/src/cli/screenplay/tasks/index.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 272,
    "kind": "file",
    "name": "src/cli/stage/Actors.ts",
    "content": "import { Actor, Cast, TakeNotes } from '@serenity-js/core';\nimport { Path } from '@serenity-js/core/lib/io';\nimport { CallAnApi } from '@serenity-js/rest';\nimport axios from 'axios';\nimport { httpAdapter } from 'axios/lib/adapters/http'; // tslint:disable-line:no-submodule-imports\nimport { UseFileSystem } from '../screenplay';\n\n/**\n * @package\n */\nexport class Actors implements Cast {\n    constructor(private readonly rootDir: Path) {\n    }\n\n    prepare(actor: Actor): Actor {\n        return actor.whoCan(\n            CallAnApi.using(axios.create({\n                adapter: httpAdapter,\n            })),\n            UseFileSystem.at(this.rootDir),\n            TakeNotes.usingAnEmptyNotepad(),\n        );\n    }\n}\n",
    "static": true,
    "longname": "/home/travis/build/serenity-js/serenity-js/packages/serenity-bdd/src/cli/stage/Actors.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 273,
    "kind": "class",
    "name": "Actors",
    "memberof": "src/cli/stage/Actors.ts",
    "static": true,
    "longname": "src/cli/stage/Actors.ts~Actors",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/serenity-bdd/src/cli/stage/Actors.ts",
    "importStyle": "{Actors}",
    "description": "",
    "lineNumber": 18,
    "interface": false,
    "ignore": true
  },
  {
    "__docId__": 274,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/cli/stage/Actors.ts~Actors",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/stage/Actors.ts~Actors#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true
  },
  {
    "__docId__": 275,
    "kind": "method",
    "name": "prepare",
    "memberof": "src/cli/stage/Actors.ts~Actors",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/stage/Actors.ts~Actors#prepare",
    "access": "public",
    "description": " ",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "Actor"
        ],
        "spread": false,
        "optional": false,
        "name": "actor",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Actor"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 276,
    "kind": "file",
    "name": "src/cli/stage/NotificationReporter.ts",
    "content": "import { Stage, StageCrewMember } from '@serenity-js/core';\nimport { ArtifactGenerated, DomainEvent } from '@serenity-js/core/lib/events';\nimport { Complaint, Notification } from '../model';\nimport { Printer } from '../Printer';\n\n/**\n * @desc\n *  Notifies the user of any {@link Notification} or {@link Complaint} type artifacts being reported.\n *\n * @package\n */\nexport class NotificationReporter implements StageCrewMember {\n    constructor(\n        private readonly printer: Printer,\n        private readonly stage: Stage = null,\n    ) {\n    }\n\n    assignedTo(stage: Stage): StageCrewMember {\n        return new NotificationReporter(this.printer, stage);\n    }\n\n    notifyOf(event: DomainEvent): void {\n        if (event instanceof ArtifactGenerated && event.artifact instanceof Notification) {\n            this.printer.info(event.artifact.map((notification: { message: string }) => notification.message));\n        }\n\n        else if (event instanceof ArtifactGenerated && event.artifact instanceof Complaint) {\n            this.printer.info(event.artifact.map(({ description, message }: { description: string, message: string }) =>\n                `${ description }\\n${ message }`));\n            // todo: add stack if verbose\n        }\n\n        else {\n            // todo depending on log level, print tasks only, or tasks and interactions\n            // console.log(`[ProgressReporter] ${ event.constructor.name } ${ JSON.stringify(event.toJSON(), null, 0) }`);\n        }\n    }\n}\n",
    "static": true,
    "longname": "/home/travis/build/serenity-js/serenity-js/packages/serenity-bdd/src/cli/stage/NotificationReporter.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 277,
    "kind": "class",
    "name": "NotificationReporter",
    "memberof": "src/cli/stage/NotificationReporter.ts",
    "static": true,
    "longname": "src/cli/stage/NotificationReporter.ts~NotificationReporter",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/serenity-bdd/src/cli/stage/NotificationReporter.ts",
    "importStyle": "{NotificationReporter}",
    "description": " Notifies the user of any {@link Notification} or {@link Complaint} type artifacts being reported.",
    "lineNumber": 19,
    "interface": false,
    "ignore": true
  },
  {
    "__docId__": 278,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/cli/stage/NotificationReporter.ts~NotificationReporter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/stage/NotificationReporter.ts~NotificationReporter#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true
  },
  {
    "__docId__": 279,
    "kind": "method",
    "name": "assignedTo",
    "memberof": "src/cli/stage/NotificationReporter.ts~NotificationReporter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/stage/NotificationReporter.ts~NotificationReporter#assignedTo",
    "access": "public",
    "description": " ",
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "Stage"
        ],
        "spread": false,
        "optional": false,
        "name": "stage",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StageCrewMember"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 280,
    "kind": "method",
    "name": "notifyOf",
    "memberof": "src/cli/stage/NotificationReporter.ts~NotificationReporter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/stage/NotificationReporter.ts~NotificationReporter#notifyOf",
    "access": "public",
    "description": " ",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "DomainEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 281,
    "kind": "file",
    "name": "src/cli/stage/ProgressReporter.ts",
    "content": "import { Stage, StageCrewMember } from '@serenity-js/core';\nimport { ArtifactGenerated, DomainEvent } from '@serenity-js/core/lib/events';\nimport * as ProgressBar from 'progress';\nimport { DownloadProgressReport } from '../model';\nimport { Printer } from '../Printer';\n\n/**\n * @desc\n *  Notifies the user of the progress of the Serenity BDD CLI jar download.\n *\n * @package\n */\nexport class ProgressReporter implements StageCrewMember {\n    constructor(\n        private readonly printer: Printer,\n        private readonly stage: Stage = null,\n        private progressBar: ProgressBar = null,\n    ) {\n    }\n\n    assignedTo(stage: Stage): StageCrewMember {\n        return new ProgressReporter(this.printer, stage, this.progressBar);\n    }\n\n    notifyOf(event: DomainEvent): void {\n        if (event instanceof ArtifactGenerated && event.artifact instanceof DownloadProgressReport) {\n            const { downloadedBytes, totalBytes } = event.artifact.map(report => report) as { downloadedBytes: number, totalDownloadedBytes: number, totalBytes: number };\n\n            if (! this.progressBar) {\n                this.progressBar = new ProgressBar(`[:bar] Downloaded :percent at :ratebps. We should be done in about :etas`, {\n                    complete: '=',\n                    incomplete: '-',\n                    width: 20,\n                    total: totalBytes,\n                    stream: this.printer.out,\n                });\n            }\n\n            this.progressBar.tick(downloadedBytes);\n        }\n    }\n}\n",
    "static": true,
    "longname": "/home/travis/build/serenity-js/serenity-js/packages/serenity-bdd/src/cli/stage/ProgressReporter.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 282,
    "kind": "class",
    "name": "ProgressReporter",
    "memberof": "src/cli/stage/ProgressReporter.ts",
    "static": true,
    "longname": "src/cli/stage/ProgressReporter.ts~ProgressReporter",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/serenity-bdd/src/cli/stage/ProgressReporter.ts",
    "importStyle": "{ProgressReporter}",
    "description": " Notifies the user of the progress of the Serenity BDD CLI jar download.",
    "lineNumber": 20,
    "interface": false,
    "ignore": true
  },
  {
    "__docId__": 283,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/cli/stage/ProgressReporter.ts~ProgressReporter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/stage/ProgressReporter.ts~ProgressReporter#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true
  },
  {
    "__docId__": 284,
    "kind": "method",
    "name": "assignedTo",
    "memberof": "src/cli/stage/ProgressReporter.ts~ProgressReporter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/stage/ProgressReporter.ts~ProgressReporter#assignedTo",
    "access": "public",
    "description": " ",
    "lineNumber": 21,
    "params": [
      {
        "nullable": null,
        "types": [
          "Stage"
        ],
        "spread": false,
        "optional": false,
        "name": "stage",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StageCrewMember"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 285,
    "kind": "method",
    "name": "notifyOf",
    "memberof": "src/cli/stage/ProgressReporter.ts~ProgressReporter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/stage/ProgressReporter.ts~ProgressReporter#notifyOf",
    "access": "public",
    "description": " ",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "DomainEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 286,
    "kind": "member",
    "name": "progressBar",
    "memberof": "src/cli/stage/ProgressReporter.ts~ProgressReporter",
    "static": false,
    "longname": "src/cli/stage/ProgressReporter.ts~ProgressReporter#progressBar",
    "access": "public",
    "description": null,
    "lineNumber": 96,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 287,
    "kind": "file",
    "name": "src/cli/stage/index.ts",
    "content": "export * from './Actors';\nexport * from './NotificationReporter';\nexport * from './ProgressReporter';\n",
    "static": true,
    "longname": "/home/travis/build/serenity-js/serenity-js/packages/serenity-bdd/src/cli/stage/index.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 288,
    "kind": "file",
    "name": "src/index.ts",
    "content": "export * from './stage';\n",
    "static": true,
    "longname": "/home/travis/build/serenity-js/serenity-js/packages/serenity-bdd/src/index.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 289,
    "kind": "file",
    "name": "src/stage/crew/index.ts",
    "content": "export * from './serenity-bdd-reporter';\n",
    "static": true,
    "longname": "/home/travis/build/serenity-js/serenity-js/packages/serenity-bdd/src/stage/crew/index.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 290,
    "kind": "file",
    "name": "src/stage/crew/serenity-bdd-reporter/Current.ts",
    "content": "/**\n * @package\n */\nexport class Current<T> {\n    constructor(private val: T = null) {\n    }\n\n    set value(value: T) {\n        this.val = value;\n    }\n\n    get value() {\n        return this.val;\n    }\n\n    isSet(): boolean {\n        return !! this.val;\n    }\n\n    clear() {\n        this.val = null;\n    }\n}\n",
    "static": true,
    "longname": "/home/travis/build/serenity-js/serenity-js/packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/Current.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 291,
    "kind": "class",
    "name": "Current",
    "memberof": "src/stage/crew/serenity-bdd-reporter/Current.ts",
    "static": true,
    "longname": "src/stage/crew/serenity-bdd-reporter/Current.ts~Current",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/serenity-bdd/src/stage/crew/serenity-bdd-reporter/Current.ts",
    "importStyle": "{Current}",
    "description": "",
    "lineNumber": 11,
    "interface": false,
    "ignore": true
  },
  {
    "__docId__": 292,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/stage/crew/serenity-bdd-reporter/Current.ts~Current",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/Current.ts~Current#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true
  },
  {
    "__docId__": 293,
    "kind": "set",
    "name": "value",
    "memberof": "src/stage/crew/serenity-bdd-reporter/Current.ts~Current",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/Current.ts~Current#value",
    "access": "public",
    "description": " ",
    "lineNumber": 8,
    "type": {
      "nullable": null,
      "types": [
        "T"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 294,
    "kind": "member",
    "name": "val",
    "memberof": "src/stage/crew/serenity-bdd-reporter/Current.ts~Current",
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/Current.ts~Current#val",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 295,
    "kind": "get",
    "name": "value",
    "memberof": "src/stage/crew/serenity-bdd-reporter/Current.ts~Current",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/Current.ts~Current#value",
    "access": "public",
    "description": " ",
    "lineNumber": 12,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 296,
    "kind": "method",
    "name": "isSet",
    "memberof": "src/stage/crew/serenity-bdd-reporter/Current.ts~Current",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/Current.ts~Current#isSet",
    "access": "public",
    "description": " ",
    "lineNumber": 16,
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 297,
    "kind": "method",
    "name": "clear",
    "memberof": "src/stage/crew/serenity-bdd-reporter/Current.ts~Current",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/Current.ts~Current#clear",
    "access": "public",
    "description": " ",
    "lineNumber": 20,
    "params": [],
    "return": null
  },
  {
    "__docId__": 299,
    "kind": "file",
    "name": "src/stage/crew/serenity-bdd-reporter/SerenityBDDJsonSchema.ts",
    "content": "/** @package */\n\nimport { JSONObject } from 'tiny-types';\n\n// https://github.com/serenity-bdd/serenity-core/tree/50a3b1824001f192da2cdca6326d7525d4dd7f25/serenity-model/src/test/resources\n// https://github.com/serenity-bdd/serenity-core/blob/master/serenity-model/src/main/java/net/thucydides/core/model/TestOutcome.java\n\nexport interface SerenityBDDReport extends JSONObject {\n    name: string;                       // done [x]\n    id: string;                         // done [x]\n    testSteps: TestStep[];              // done [x]\n    userStory: UserStory;               // todo [~]    cucumber\n    // https://github.com/serenity-bdd/serenity-core/blob/c89cd6ee4127738ac88525d29d99537921f34701/\n    // serenity-core/src/test/resources/historical-reports/sample-report-4.json\n\n    featureTag: Tag;                    // done [x]\n    title: string;                      // done [x]\n    description: string;                // done [x]\n    tags: Tag[];                        // done [x]\n    startTime: number;                  // done [x]\n    duration: number;                   // done [x]\n    projectKey: string;                 // todo [ ]     protractor                                                  <- this typically comes from an env variable\n    sessionId?: string;                 // todo [ ]     protractor                                                  <- how is this used?\n    driver?: string;                    // todo [ ]     protractor     'chrome:jill'                                <- how is this used?\n    context?: string;                   // done [x]\n    dataTable?: DataTable;              // done [x]     cucumber                                                    <- can I use this with mocha?\n    manual: boolean;                    // done [x]\n    issues?: string[];                  // done [x]\n    additionalIssues?: string[];        // done [x]\n    testSource: string;                 // done [x]\n    result: string;                     // done [x]\n    testFailureCause?: ErrorDetails;    // done [x]\n    backgroundTitle?: string;           // todo [ ]     cucumber\n    backgroundDescription?: string;     // todo [ ]     cucumber\n}\n\nexport interface TestStep extends JSONObject {\n    number: number;\n    description: string;\n    duration: number;\n    startTime: number;\n    result: string;\n    children?: TestStep[];\n    screenshots?: Screenshot[];\n    reportData: ReportData[];\n    restQuery?: RESTQuery;\n    exception?: ErrorDetails;\n    // precondition: false;             // not needed?\n}\n\n// https://github.com/serenity-bdd/serenity-core/blob/master/serenity-model/src/main/java/net/thucydides/core/model/ReportData.java\nexport interface ReportData extends JSONObject {\n    id: string;\n    isEvidence: boolean;\n    path: string;\n    title: string;\n    contents: string;\n}\n\n/**\n * https://github.com/serenity-bdd/serenity-core/blob/master/serenity-model/src/main/java/net/thucydides/core/screenshots/ScreenshotAndHtmlSource.java\n */\nexport interface Screenshot extends JSONObject {\n    screenshot: string;\n    htmlSource?: string;     // \"htmlSource\": \"pagesource7953468346968205961.html.txt\"\n}\n\nexport interface UserStory extends JSONObject {\n    id: string;             // dashified feature name\n    storyName: string;      // feature name\n    path: string;           // relative feature file path\n    type: string;           // 'feature'\n    narrative?: string;     // cucumber narrative, if any\n}\n\nexport interface Tag extends JSONObject {\n    name: string;\n    displayName: string;\n    type: string;\n}\n\nexport interface DataTable extends JSONObject {\n    headers: string[];\n    rows: DataTableRow[];\n    predefinedRows: boolean;\n    scenarioOutline: string;\n    dataSetDescriptors: DataTableDataSetDescriptor[];\n}\n\nexport interface DataTableRow extends JSONObject {\n    values: string[];\n    result?: string;\n}\n\nexport interface DataTableDataSetDescriptor extends JSONObject {\n    startRow: number;\n    rowCount: number;\n    name: string;\n    description: string;\n}\n\nexport interface RESTQuery extends JSONObject {\n    method: string;\n    path: string;\n    content: string;\n    contentType: string;\n    requestHeaders: string;\n    requestCookies: string;\n    responseHeaders: string;\n    responseCookies: string;\n    responseBody: string;\n    statusCode: number;\n}\n\nexport interface ErrorDetails extends JSONObject {\n    errorType: string;\n    message: string;\n    stackTrace: Array<{\n        declaringClass: string,\n        methodName: string,\n        fileName: string,\n        lineNumber: number,\n    }>;\n    rootCause?: ErrorDetails;\n}\n",
    "static": true,
    "longname": "/home/travis/build/serenity-js/serenity-js/packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/SerenityBDDJsonSchema.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 300,
    "kind": "class",
    "name": "ErrorDetails",
    "memberof": "src/stage/crew/serenity-bdd-reporter/SerenityBDDJsonSchema.ts",
    "static": true,
    "longname": "src/stage/crew/serenity-bdd-reporter/SerenityBDDJsonSchema.ts~ErrorDetails",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/serenity-bdd/src/stage/crew/serenity-bdd-reporter/SerenityBDDJsonSchema.ts",
    "importStyle": "{ErrorDetails}",
    "description": null,
    "lineNumber": 9,
    "interface": false,
    "extends": [
      "JSONObject"
    ],
    "ignore": true
  },
  {
    "__docId__": 301,
    "kind": "member",
    "name": "errorType",
    "memberof": "src/stage/crew/serenity-bdd-reporter/SerenityBDDJsonSchema.ts~ErrorDetails",
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/SerenityBDDJsonSchema.ts~ErrorDetails#errorType",
    "access": "public",
    "description": " ",
    "lineNumber": 3,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 302,
    "kind": "member",
    "name": "message",
    "memberof": "src/stage/crew/serenity-bdd-reporter/SerenityBDDJsonSchema.ts~ErrorDetails",
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/SerenityBDDJsonSchema.ts~ErrorDetails#message",
    "access": "public",
    "description": " ",
    "lineNumber": 4,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 303,
    "kind": "member",
    "name": "stackTrace",
    "memberof": "src/stage/crew/serenity-bdd-reporter/SerenityBDDJsonSchema.ts~ErrorDetails",
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/SerenityBDDJsonSchema.ts~ErrorDetails#stackTrace",
    "access": "public",
    "description": " ",
    "lineNumber": 5,
    "type": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 304,
    "kind": "member",
    "name": "rootCause",
    "memberof": "src/stage/crew/serenity-bdd-reporter/SerenityBDDJsonSchema.ts~ErrorDetails",
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/SerenityBDDJsonSchema.ts~ErrorDetails#rootCause",
    "access": "public",
    "description": " ",
    "lineNumber": 11,
    "type": {
      "nullable": null,
      "types": [
        "ErrorDetails"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 305,
    "kind": "file",
    "name": "src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts",
    "content": "import { Stage, StageCrewMember } from '@serenity-js/core';\nimport { ArtifactGenerated, DomainEvent, SceneSequenceDetected, SceneStarts, TestRunFinishes } from '@serenity-js/core/lib/events';\nimport { Name, ScenarioDetails, TestReport } from '@serenity-js/core/lib/model';\nimport { match } from 'tiny-types';\n\nimport { Current } from './Current';\nimport { SceneReports } from './reports';\nimport { SerenityBDDReport } from './SerenityBDDJsonSchema';\nimport { SceneReportingStrategy, SceneSequenceReportingStrategy, SingleSceneReportingStrategy } from './strategies';\n\n/**\n * @desc Produces Serenity BDD-standard JSON reports.\n * @see http://serenity-bdd.info/\n *\n * @access public\n */\nexport class SerenityBDDReporter implements StageCrewMember {\n    private readonly reports: SceneReports = new SceneReports();\n    private currentScenario = new Current<ScenarioDetails>();\n    private currentStrategy = new Current<SceneReportingStrategy>();\n\n    constructor(private readonly stage: Stage = null) {\n    }\n\n    assignedTo(stage: Stage): StageCrewMember {\n        return new SerenityBDDReporter(stage);\n    }\n\n    notifyOf = (event: DomainEvent): void => match<DomainEvent, void>(event)\n        .when(SceneSequenceDetected, (e: SceneSequenceDetected) => {\n            this.use(SceneSequenceReportingStrategy, e.value);\n        })\n        .when(SceneStarts, (e: SceneStarts) => {\n            this.use(SingleSceneReportingStrategy, e.value);\n\n            this.reports.save(this.currentStrategy.value.handle(e, this.reports.for(this.currentScenario.value)));\n        })\n        .when(TestRunFinishes, _ => {\n            this.reports.map(report => this.broadcast(report.toJSON()));\n        })\n        .else(e => {\n            if (this.currentStrategy.isSet()) {\n                this.reports.save(this.currentStrategy.value.handle(e, this.reports.for(this.currentScenario.value)));\n            }\n        })\n\n    private use(strategy: new (sd: ScenarioDetails) => SceneReportingStrategy, scenario: ScenarioDetails) {\n        if (! (this.currentStrategy.isSet() && this.currentStrategy.value.worksFor(scenario))) {\n            this.currentStrategy.value = new strategy(scenario);\n            this.currentScenario.value = scenario;\n        }\n    }\n\n    private broadcast(report: Partial<SerenityBDDReport>) {\n        this.stage.announce(new ArtifactGenerated(\n            new Name(report.name),\n            TestReport.fromJSON(report),\n        ));\n    }\n}\n",
    "static": true,
    "longname": "/home/travis/build/serenity-js/serenity-js/packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 306,
    "kind": "class",
    "name": "SerenityBDDReporter",
    "memberof": "src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts",
    "static": true,
    "longname": "src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts~SerenityBDDReporter",
    "access": "public",
    "export": true,
    "importPath": "@serenity-js/serenity-bdd/lib/stage/crew/serenity-bdd-reporter",
    "importStyle": "{SerenityBDDReporter}",
    "description": "Produces Serenity BDD-standard JSON reports.",
    "see": [
      "http://serenity-bdd.info/"
    ],
    "lineNumber": 24,
    "interface": false
  },
  {
    "__docId__": 307,
    "kind": "member",
    "name": "reports",
    "memberof": "src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts~SerenityBDDReporter",
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts~SerenityBDDReporter#reports",
    "access": "private",
    "description": " ",
    "lineNumber": 18,
    "type": {
      "nullable": null,
      "types": [
        "SceneReports"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 308,
    "kind": "member",
    "name": "currentScenario",
    "memberof": "src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts~SerenityBDDReporter",
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts~SerenityBDDReporter#currentScenario",
    "access": "private",
    "description": " ",
    "lineNumber": 19,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 309,
    "kind": "member",
    "name": "currentStrategy",
    "memberof": "src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts~SerenityBDDReporter",
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts~SerenityBDDReporter#currentStrategy",
    "access": "private",
    "description": " ",
    "lineNumber": 20,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 310,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts~SerenityBDDReporter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts~SerenityBDDReporter#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 58,
    "undocument": true
  },
  {
    "__docId__": 311,
    "kind": "method",
    "name": "assignedTo",
    "memberof": "src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts~SerenityBDDReporter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts~SerenityBDDReporter#assignedTo",
    "access": "public",
    "description": " ",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "Stage"
        ],
        "spread": false,
        "optional": false,
        "name": "stage",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StageCrewMember"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 312,
    "kind": "member",
    "name": "notifyOf",
    "memberof": "src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts~SerenityBDDReporter",
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts~SerenityBDDReporter#notifyOf",
    "access": "public",
    "description": " ",
    "lineNumber": 29,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 313,
    "kind": "method",
    "name": "use",
    "memberof": "src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts~SerenityBDDReporter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts~SerenityBDDReporter#use",
    "access": "private",
    "description": " ",
    "lineNumber": 47,
    "params": [
      {
        "nullable": null,
        "types": [
          "UNKNOWN"
        ],
        "spread": false,
        "optional": false,
        "name": "strategy",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "ScenarioDetails"
        ],
        "spread": false,
        "optional": false,
        "name": "scenario",
        "description": ""
      }
    ],
    "ignore": true,
    "return": null
  },
  {
    "__docId__": 314,
    "kind": "method",
    "name": "broadcast",
    "memberof": "src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts~SerenityBDDReporter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts~SerenityBDDReporter#broadcast",
    "access": "private",
    "description": " ",
    "lineNumber": 54,
    "params": [
      {
        "nullable": null,
        "types": [
          "Partial"
        ],
        "spread": false,
        "optional": false,
        "name": "report",
        "description": ""
      }
    ],
    "ignore": true,
    "return": null
  },
  {
    "__docId__": 315,
    "kind": "file",
    "name": "src/stage/crew/serenity-bdd-reporter/index.ts",
    "content": "export * from './SerenityBDDReporter';\n",
    "static": true,
    "longname": "/home/travis/build/serenity-js/serenity-js/packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/index.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 316,
    "kind": "file",
    "name": "src/stage/crew/serenity-bdd-reporter/reports/ErrorRenderer.ts",
    "content": "import { RuntimeError } from '@serenity-js/core/lib/errors';\nimport { ErrorStackParser } from '@serenity-js/core/lib/io';\n\n/** @package */\nexport class ErrorRenderer {\n    private static parser = new ErrorStackParser();\n\n    render(error: Error) {\n        // tslint:disable-next-line:prefer-object-spread     Esdoc doesn't understand spread\n        return Object.assign(\n            {},\n            this.renderError(error),\n            ((error instanceof RuntimeError && error.cause) ? { rootCause: this.renderError(error.cause) } : {}),\n        );\n    }\n\n    private renderError(error: Error) {\n        return {\n            errorType:    error.constructor.name,\n            message:      error.message,\n            stackTrace:   ErrorRenderer.parser.parse(error).map(frame => ({\n                declaringClass: '',\n                methodName:     `${ frame.functionName }(${ (frame.args || []).join(', ') })`,\n                fileName:       frame.fileName,\n                lineNumber:     frame.lineNumber,\n            })),\n        };\n    }\n}\n",
    "static": true,
    "longname": "/home/travis/build/serenity-js/serenity-js/packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/reports/ErrorRenderer.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 317,
    "kind": "class",
    "name": "ErrorRenderer",
    "memberof": "src/stage/crew/serenity-bdd-reporter/reports/ErrorRenderer.ts",
    "static": true,
    "longname": "src/stage/crew/serenity-bdd-reporter/reports/ErrorRenderer.ts~ErrorRenderer",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/serenity-bdd/src/stage/crew/serenity-bdd-reporter/reports/ErrorRenderer.ts",
    "importStyle": "{ErrorRenderer}",
    "description": null,
    "lineNumber": 12,
    "interface": false,
    "ignore": true
  },
  {
    "__docId__": 318,
    "kind": "member",
    "name": "parser",
    "memberof": "src/stage/crew/serenity-bdd-reporter/reports/ErrorRenderer.ts~ErrorRenderer",
    "static": true,
    "longname": "src/stage/crew/serenity-bdd-reporter/reports/ErrorRenderer.ts~ErrorRenderer.parser",
    "access": "private",
    "description": " ",
    "lineNumber": 6,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 319,
    "kind": "method",
    "name": "render",
    "memberof": "src/stage/crew/serenity-bdd-reporter/reports/ErrorRenderer.ts~ErrorRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/reports/ErrorRenderer.ts~ErrorRenderer#render",
    "access": "public",
    "description": " ",
    "lineNumber": 8,
    "params": [
      {
        "nullable": null,
        "types": [
          "Error"
        ],
        "spread": false,
        "optional": false,
        "name": "error",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 320,
    "kind": "method",
    "name": "renderError",
    "memberof": "src/stage/crew/serenity-bdd-reporter/reports/ErrorRenderer.ts~ErrorRenderer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/reports/ErrorRenderer.ts~ErrorRenderer#renderError",
    "access": "private",
    "description": " ",
    "lineNumber": 17,
    "params": [
      {
        "nullable": null,
        "types": [
          "Error"
        ],
        "spread": false,
        "optional": false,
        "name": "error",
        "description": ""
      }
    ],
    "ignore": true,
    "return": {
      "types": [
        "{\"errorType\": *, \"message\": *, \"stackTrace\": *}"
      ]
    }
  },
  {
    "__docId__": 321,
    "kind": "file",
    "name": "src/stage/crew/serenity-bdd-reporter/reports/OutcomeMapper.ts",
    "content": "import {\n    ExecutionCompromised,\n    ExecutionFailedWithAssertionError,\n    ExecutionFailedWithError,\n    ExecutionIgnored,\n    ExecutionSkipped,\n    ImplementationPending,\n    Outcome,\n} from '@serenity-js/core/lib/model';\nimport { match } from 'tiny-types';\nimport { ErrorDetails } from '../SerenityBDDJsonSchema';\nimport { ErrorRenderer } from './ErrorRenderer';\n\n/** @package */\nexport class OutcomeMapper {\n    private static errorRenderer = new ErrorRenderer();\n\n    public mapOutcome(outcome: Outcome, mapAs: (result: string, error?: ErrorDetails) => void) {\n        const render = OutcomeMapper.errorRenderer;\n\n        return match<Outcome, void>(outcome).\n            when(ExecutionCompromised,              ({ error }: ExecutionCompromised)               => mapAs('COMPROMISED', render.render(error))).\n            when(ExecutionFailedWithError,          ({ error }: ExecutionFailedWithError)           => mapAs('ERROR', render.render(error))).\n            when(ExecutionFailedWithAssertionError, ({ error }: ExecutionFailedWithAssertionError)  => mapAs('FAILURE', render.render(error))).\n            when(ExecutionSkipped,      _ => mapAs('SKIPPED')).\n            when(ExecutionIgnored,      _ => mapAs('IGNORED')).\n            when(ImplementationPending, _ => mapAs('PENDING')).\n            else(/* ExecutionSuccessful */ _ => /* ignore */ mapAs('SUCCESS'));\n    }\n}\n",
    "static": true,
    "longname": "/home/travis/build/serenity-js/serenity-js/packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/reports/OutcomeMapper.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 322,
    "kind": "class",
    "name": "OutcomeMapper",
    "memberof": "src/stage/crew/serenity-bdd-reporter/reports/OutcomeMapper.ts",
    "static": true,
    "longname": "src/stage/crew/serenity-bdd-reporter/reports/OutcomeMapper.ts~OutcomeMapper",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/serenity-bdd/src/stage/crew/serenity-bdd-reporter/reports/OutcomeMapper.ts",
    "importStyle": "{OutcomeMapper}",
    "description": null,
    "lineNumber": 22,
    "interface": false,
    "ignore": true
  },
  {
    "__docId__": 323,
    "kind": "member",
    "name": "errorRenderer",
    "memberof": "src/stage/crew/serenity-bdd-reporter/reports/OutcomeMapper.ts~OutcomeMapper",
    "static": true,
    "longname": "src/stage/crew/serenity-bdd-reporter/reports/OutcomeMapper.ts~OutcomeMapper.errorRenderer",
    "access": "private",
    "description": " ",
    "lineNumber": 16,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 324,
    "kind": "method",
    "name": "mapOutcome",
    "memberof": "src/stage/crew/serenity-bdd-reporter/reports/OutcomeMapper.ts~OutcomeMapper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/reports/OutcomeMapper.ts~OutcomeMapper#mapOutcome",
    "access": "public",
    "description": " ",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "Outcome"
        ],
        "spread": false,
        "optional": false,
        "name": "outcome",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "mapAs",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 325,
    "kind": "file",
    "name": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts",
    "content": "import { Path } from '@serenity-js/core/lib/io';\nimport {\n    ActivityDetails,\n    BrowserTag,\n    CapabilityTag,\n    ContextTag,\n    CorrelationId,\n    Description,\n    ExecutionSuccessful,\n    FeatureTag,\n    IssueTag,\n    ManualTag,\n    Name,\n    Outcome, PlatformTag,\n    RequestAndResponse,\n    ScenarioDetails,\n    ScenarioParameters,\n    Tag,\n    ThemeTag,\n    Timestamp,\n} from '@serenity-js/core/lib/model';\nimport { platform } from 'os';\nimport { JSONObject, match } from 'tiny-types';\nimport { equal } from 'tiny-types/lib/objects'; // tslint:disable-line:no-submodule-imports\nimport { inspect } from 'util';\nimport { DataTable, DataTableDataSetDescriptor, ErrorDetails, SerenityBDDReport, TestStep } from '../SerenityBDDJsonSchema';\nimport { OutcomeMapper } from './OutcomeMapper';\nimport { SceneReportId } from './SceneReportId';\n\n/** @access private */\nfunction extractValues<T>(dictionary: {[key: string]: T}) {\n    return Object.keys(dictionary).map(key => dictionary[key]);\n}\n\n/** @access private */\ninterface ScenarioParametersResultLocation {\n    parameters: ScenarioParameters;\n    line: number;\n    index: number;\n    outcome?: Outcome;\n}\n\n/** @package */\nexport class SceneReport {\n    private static outcomeMapper = new OutcomeMapper();\n\n    private readonly report: Partial<SerenityBDDReport> & { children?: Array<Partial<TestStep>> };\n    private readonly activities = new ActivityStack();\n    private readonly parameters: ScenarioParametersResultLocation[] = [];\n    private stepNumber = 0;\n\n    constructor(public readonly scenarioDetails: ScenarioDetails) {\n\n        this.report = {\n            name:   this.scenarioDetails.name.value,\n            title:  this.scenarioDetails.name.value,\n            id:     new SceneReportId(this.scenarioDetails.category.value).append(this.scenarioDetails.name.value).value,\n            manual: false,\n            testSteps: [],\n            get children() {\n                // fake reference to make the report and the test step interfaces compatible\n                // removed in 'toJSON'\n                return this.testSteps;\n            },\n            userStory: {\n                id:         new SceneReportId(this.scenarioDetails.category.value).value,\n                storyName:  this.scenarioDetails.category.value,\n                path:       this.scenarioDetails.location.path.value,\n                type:       'feature',\n            },\n        };\n\n        this.activities.push(this.report);\n    }\n\n    executionStartedAt(time: Timestamp): SceneReport {\n        return this.withMutated(report => {\n            report.startTime = report.startTime || time.toMillisecondTimestamp();\n        });\n    }\n\n    executedBy(testRunner: Name): SceneReport {\n        return this.withMutated(report => {\n            report.testSource = testRunner.value;\n        });\n    }\n\n    taggedWith(tag: Tag) {\n        return this.withMutated(report => {\n            function displayNameOfRecorded(typeOfTag: { Type: string }) {\n                const found = report.tags.find(t => t.type === typeOfTag.Type);\n\n                return found && found.displayName;\n            }\n\n            function serenityBDDTagFrom(serenityJSTag: Tag): { name: string, displayName: string, type: string } {\n                return {\n                    ...serenityJSTag.toJSON(),\n                    displayName: serenityJSTag.name.replace(/_+/, ' '),\n                };\n            }\n\n            const concatenated = (...names: string[]): string => names.filter(name => !! name).join('/');\n\n            const serenityBDDTag = serenityBDDTagFrom(tag);\n\n            if (! report.tags) {\n                report.tags = [];\n            }\n\n            match<Tag, void>(tag)\n                .when(ManualTag,     _ => report.manual = true)\n                .when(ThemeTag,      _ => {\n                    serenityBDDTag.displayName = tag.name;\n                })\n                .when(CapabilityTag, _ => {\n                    serenityBDDTag.name = concatenated(displayNameOfRecorded(ThemeTag), tag.name);\n                    serenityBDDTag.displayName = tag.name;\n                })\n                .when(FeatureTag,    _ => {\n                    serenityBDDTag.name = concatenated(displayNameOfRecorded(CapabilityTag), tag.name);\n                    serenityBDDTag.displayName = tag.name;\n                    report.featureTag = serenityBDDTag;\n                })\n                .when(IssueTag,      _ => {\n                    report.issues            = (report.issues           || []).concat(tag.name);\n                    report.additionalIssues  = (report.additionalIssues || []).concat(tag.name);\n                })\n                .when(BrowserTag,    (browserTag: BrowserTag) => {\n                    report.context   = [report.context, browserTag.browserName].filter(part => !! part).join(',');\n                    report.driver    = browserTag.browserName;\n                    report.id        = new SceneReportId(browserTag.name, report.id).value;\n                })\n                .when(PlatformTag,   (platformTag: PlatformTag) => {\n                    report.context   = [report.context, platformTag.name].filter(part => !! part).join(',');\n                    report.id        = new SceneReportId(platformTag.name, report.id).value;\n                })\n                .when(ContextTag,    _ => (report.context   = tag.name))\n                .else(_ => void 0);\n\n            if (! report.tags.find(current => equal(current, serenityBDDTag))) {\n                report.tags.push(serenityBDDTag);\n            }\n        });\n    }\n\n    executionFinishedAt(time: Timestamp): SceneReport {\n        return this.withMutated(report => {\n            report.duration = Timestamp.fromMillisecondTimestamp(report.startTime).diff(time).inMilliseconds();\n        });\n    }\n\n    activityStarted(activity: ActivityDetails, time: Timestamp) {\n        return this.withMutated(report => {\n            const activityReport: Partial<TestStep> = {\n                number:      ++this.stepNumber,\n                description: activity.name.value,\n                startTime:   time.toMillisecondTimestamp(),\n                children:    [],\n                reportData:  [],\n                screenshots: [],\n            };\n\n            this.activities.last().children.push(activityReport as any);\n            this.activities.push(activityReport, activity.correlationId);\n        });\n    }\n\n    activityFinished(value: ActivityDetails, outcome: Outcome, time: Timestamp) {\n        return this.withMutated(report => this.mapOutcome(outcome, (result: string, error?: ErrorDetails) => {\n\n            const activityReport = this.activities.pop();\n\n            activityReport.result    = result;\n            activityReport.duration  = Timestamp.fromMillisecondTimestamp(activityReport.startTime).diff(time).inMilliseconds();\n\n            if (!! error && ! this.activities.haveFailed) {\n                activityReport.exception = error;\n                this.activities.haveFailed = true;\n            }\n        }));\n    }\n\n    withBackgroundOf(name: Name, description: Description) {\n        return this.withMutated(report => {\n            report.backgroundTitle       = name.value;\n            report.backgroundDescription = description.value;\n        });\n    }\n\n    withDescriptionOf(description: Description) {\n        return this.withMutated(report => {\n            report.description = description.value;\n        });\n    }\n\n    withScenarioOutline(outline: Description) {\n        return this.withMutated(report => {\n            report.dataTable = this.dataTableFrom(report);\n\n            report.dataTable.scenarioOutline = outline.value;\n        });\n    }\n\n    withScenarioParametersOf(scenario: ScenarioDetails, parameters: ScenarioParameters) {\n\n        const\n            parameterSetName = parameters.name && parameters.name.value,\n            parameterSetDescription = parameters.description && parameters.description.value;\n\n        const matches = (params: ScenarioParameters) => (descriptor: DataTableDataSetDescriptor) => {\n            return descriptor.name === parameterSetName\n                && descriptor.description === parameterSetDescription;\n        };\n\n        return this.withMutated(report => {\n            report.dataTable = this.dataTableFrom(report);\n            report.dataTable.headers = Object.keys(parameters.values);\n\n            let descriptor: DataTableDataSetDescriptor = report.dataTable.dataSetDescriptors.find(matches(parameters));\n\n            if (! descriptor) {\n                descriptor = {\n                    name:           parameterSetName,\n                    description:    parameterSetDescription,\n                    startRow:       report.dataTable.dataSetDescriptors.reduce((acc, current) => acc + current.rowCount, 0),\n                    rowCount:       0,\n                };\n\n                report.dataTable.dataSetDescriptors.push(descriptor);\n            }\n\n            descriptor.rowCount++;\n\n            const length = report.dataTable.rows.push(({\n                values: extractValues(parameters.values),\n            }));\n\n            this.parameters.push({ parameters, index: length - 1, line: scenario.location.line });\n        });\n    }\n\n    withFeatureNarrativeOf(description: Description) {\n        return this.withMutated(report => {\n            report.userStory.narrative = description.value;\n        });\n    }\n\n    photoTaken(details: ActivityDetails, path: Path) {\n        return this.withMutated(report => {\n            this.activities.itemByCorrelationId(details.correlationId).screenshots.push({ screenshot: path.basename() });\n        });\n    }\n\n    arbitraryDataCaptured(name: Name, contents: string) {\n        return this.withMutated(report => {\n            this.activities.mostRecentlyAccessedItem().reportData.push({\n                id: `report-data-${ CorrelationId.create().value }`,\n                isEvidence: false,\n                path: '',\n                title: name.value,\n                contents,\n            });\n        });\n    }\n\n    httpRequestCaptured(requestResponse: RequestAndResponse) {\n        function mapToString(dictionary: {[key: string]: string}) {\n            return Object.keys(dictionary).map(key => `${key}: ${dictionary[key]}`).join('\\n');\n        }\n\n        return this.withMutated(report => {\n            this.activities.mostRecentlyAccessedItem().restQuery = {\n                method:          requestResponse.request.method.toUpperCase(),\n                path:            requestResponse.request.url,\n                content:         inspect(requestResponse.request.data),\n                contentType:     requestResponse.request.headers['Content-Type'] || '', // todo: add a case insensitive proxy around this RFC 2616: 4.2\n                requestHeaders:  mapToString(requestResponse.request.headers)  || '',\n                requestCookies:  requestResponse.request.headers.Cookie || '', // todo: add a case insensitive proxy around this RFC 2616: 4.2\n                statusCode:      requestResponse.response.status,\n                responseHeaders: mapToString(requestResponse.response.headers) || '',\n                responseCookies: requestResponse.response.headers.Cookie || '', // todo: add a case insensitive proxy around this RFC 2616: 4.2\n                responseBody:    inspect(requestResponse.response.data) || '',\n            };\n        });\n    }\n\n    executionFinishedWith(scenario: ScenarioDetails, outcome: Outcome): SceneReport {\n        return this.withMutated(report => this.mapOutcome(outcome, (result: string, error: ErrorDetails = undefined) => {\n\n            report.result           = result;\n            report.testFailureCause = error;\n\n            if (this.parameters.length > 0) {\n                const entry = this.parameters.find(p => p.line === scenario.location.line);\n                if (!! entry) {\n                    entry.outcome = outcome;\n\n                    report.dataTable.rows[ entry.index ].result = result;\n\n                    const worstOutcomeOverall = this.parameters\n                        .filter(p => !! p.outcome)\n                        .map(p => p.outcome)\n                        .reduce((worstSoFar, current) => {\n                            return current.isWorseThan(worstSoFar)\n                                ? current\n                                : worstSoFar;\n                        }, new ExecutionSuccessful());\n\n                    this.mapOutcome(worstOutcomeOverall, (r: string, e: ErrorDetails = undefined) => {\n                        report.result           = r;\n                        report.testFailureCause = e;\n                    });\n                }\n            }\n        }));\n    }\n\n    toJSON(): Partial<SerenityBDDReport> {\n        const report = this.copyOf(this.report);\n\n        delete report.children; // remove the fake reference\n\n        this.parameters.forEach(entry => {\n\n            const parameters = entry.parameters.values;\n            const stringified = Object.keys(parameters).map(key => `${ key }: ${ parameters[key] }`).join(', ').trim();\n\n            report.testSteps[entry.index].description += ` #${ entry.index + 1 } - ${ stringified }`;\n        });\n\n        // todo: optimise the report, remove empty arrays\n        return report;\n    }\n\n    private dataTableFrom(report: Partial<SerenityBDDReport>): DataTable {\n        return report.dataTable || {\n            scenarioOutline: '',\n            dataSetDescriptors: [],\n            headers: [],\n            rows: [],\n            predefinedRows: true,\n        };\n    }\n\n    private mapOutcome(outcome: Outcome, mapAs: (result: string, error?: ErrorDetails) => void) {\n        return SceneReport.outcomeMapper.mapOutcome(outcome, mapAs);\n    }\n\n    private withMutated(mutate: (copied: Partial<SerenityBDDReport>) => void): SceneReport {\n        mutate(this.report);\n\n        return this;\n    }\n\n    private copyOf<T extends JSONObject>(json: T): T {\n        return JSON.parse(JSON.stringify(json));\n    }\n}\n\n/**\n * @package\n */\nclass ActivityStack {\n    public haveFailed: boolean = false;\n    private readonly items: Array<Partial<TestStep>> = [];\n    private mostRecent: Partial<TestStep> = undefined;\n    private correlations: { [key: string]: Partial<TestStep> } = {};\n\n    push(item: Partial<TestStep>, correlationId?: CorrelationId): Partial<TestStep> {\n        this.items.push(item);\n        this.mostRecent = item;\n        this.haveFailed = false;\n        if (!! correlationId) {\n            this.correlations[correlationId.value] = item;\n        }\n\n        return this.mostRecent;\n    }\n\n    pop() {\n        const item = this.items.pop();\n        if (this.items.length === 0) {\n            this.haveFailed = false;\n        }\n\n        this.mostRecent = item;\n\n        return this.mostRecent;\n    }\n\n    last() {\n        return this.items[this.items.length - 1];\n    }\n\n    mostRecentlyAccessedItem() {\n        return this.mostRecent;\n    }\n\n    itemByCorrelationId(correlationId: CorrelationId) {\n        return this.correlations[correlationId.value];\n    }\n}\n",
    "static": true,
    "longname": "/home/travis/build/serenity-js/serenity-js/packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 326,
    "kind": "function",
    "name": "extractValues",
    "memberof": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~extractValues",
    "access": "private",
    "export": false,
    "importPath": "@serenity-js/serenity-bdd/src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts",
    "importStyle": null,
    "description": null,
    "lineNumber": 40,
    "ignore": true,
    "params": [
      {
        "name": "dictionary",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 327,
    "kind": "class",
    "name": "SceneReport",
    "memberof": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts",
    "static": true,
    "longname": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~SceneReport",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/serenity-bdd/src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts",
    "importStyle": "{SceneReport}",
    "description": null,
    "lineNumber": 111,
    "interface": false,
    "ignore": true
  },
  {
    "__docId__": 328,
    "kind": "member",
    "name": "outcomeMapper",
    "memberof": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~SceneReport",
    "static": true,
    "longname": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~SceneReport.outcomeMapper",
    "access": "private",
    "description": " ",
    "lineNumber": 45,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 329,
    "kind": "member",
    "name": "report",
    "memberof": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~SceneReport",
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~SceneReport#report",
    "access": "private",
    "description": " ",
    "lineNumber": 47,
    "type": {
      "nullable": null,
      "types": [
        "Partial & undefined"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 330,
    "kind": "member",
    "name": "activities",
    "memberof": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~SceneReport",
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~SceneReport#activities",
    "access": "private",
    "description": " ",
    "lineNumber": 48,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 331,
    "kind": "member",
    "name": "parameters",
    "memberof": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~SceneReport",
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~SceneReport#parameters",
    "access": "private",
    "description": " ",
    "lineNumber": 49,
    "type": {
      "nullable": null,
      "types": [
        "UNKNOWN"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 332,
    "kind": "member",
    "name": "stepNumber",
    "memberof": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~SceneReport",
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~SceneReport#stepNumber",
    "access": "private",
    "description": " ",
    "lineNumber": 50,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 333,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~SceneReport",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~SceneReport#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 181,
    "undocument": true
  },
  {
    "__docId__": 335,
    "kind": "method",
    "name": "executionStartedAt",
    "memberof": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~SceneReport",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~SceneReport#executionStartedAt",
    "access": "public",
    "description": " ",
    "lineNumber": 76,
    "params": [
      {
        "nullable": null,
        "types": [
          "Timestamp"
        ],
        "spread": false,
        "optional": false,
        "name": "time",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "SceneReport"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 336,
    "kind": "method",
    "name": "executedBy",
    "memberof": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~SceneReport",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~SceneReport#executedBy",
    "access": "public",
    "description": " ",
    "lineNumber": 82,
    "params": [
      {
        "nullable": null,
        "types": [
          "Name"
        ],
        "spread": false,
        "optional": false,
        "name": "testRunner",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "SceneReport"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 337,
    "kind": "method",
    "name": "taggedWith",
    "memberof": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~SceneReport",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~SceneReport#taggedWith",
    "access": "public",
    "description": " ",
    "lineNumber": 88,
    "params": [
      {
        "nullable": null,
        "types": [
          "Tag"
        ],
        "spread": false,
        "optional": false,
        "name": "tag",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 338,
    "kind": "method",
    "name": "executionFinishedAt",
    "memberof": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~SceneReport",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~SceneReport#executionFinishedAt",
    "access": "public",
    "description": " ",
    "lineNumber": 147,
    "params": [
      {
        "nullable": null,
        "types": [
          "Timestamp"
        ],
        "spread": false,
        "optional": false,
        "name": "time",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "SceneReport"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 339,
    "kind": "method",
    "name": "activityStarted",
    "memberof": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~SceneReport",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~SceneReport#activityStarted",
    "access": "public",
    "description": " ",
    "lineNumber": 153,
    "params": [
      {
        "nullable": null,
        "types": [
          "ActivityDetails"
        ],
        "spread": false,
        "optional": false,
        "name": "activity",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Timestamp"
        ],
        "spread": false,
        "optional": false,
        "name": "time",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 340,
    "kind": "method",
    "name": "activityFinished",
    "memberof": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~SceneReport",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~SceneReport#activityFinished",
    "access": "public",
    "description": " ",
    "lineNumber": 169,
    "params": [
      {
        "nullable": null,
        "types": [
          "ActivityDetails"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Outcome"
        ],
        "spread": false,
        "optional": false,
        "name": "outcome",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Timestamp"
        ],
        "spread": false,
        "optional": false,
        "name": "time",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 341,
    "kind": "method",
    "name": "withBackgroundOf",
    "memberof": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~SceneReport",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~SceneReport#withBackgroundOf",
    "access": "public",
    "description": " ",
    "lineNumber": 184,
    "params": [
      {
        "nullable": null,
        "types": [
          "Name"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Description"
        ],
        "spread": false,
        "optional": false,
        "name": "description",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 342,
    "kind": "method",
    "name": "withDescriptionOf",
    "memberof": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~SceneReport",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~SceneReport#withDescriptionOf",
    "access": "public",
    "description": " ",
    "lineNumber": 191,
    "params": [
      {
        "nullable": null,
        "types": [
          "Description"
        ],
        "spread": false,
        "optional": false,
        "name": "description",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 343,
    "kind": "method",
    "name": "withScenarioOutline",
    "memberof": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~SceneReport",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~SceneReport#withScenarioOutline",
    "access": "public",
    "description": " ",
    "lineNumber": 197,
    "params": [
      {
        "nullable": null,
        "types": [
          "Description"
        ],
        "spread": false,
        "optional": false,
        "name": "outline",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 344,
    "kind": "method",
    "name": "withScenarioParametersOf",
    "memberof": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~SceneReport",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~SceneReport#withScenarioParametersOf",
    "access": "public",
    "description": " ",
    "lineNumber": 205,
    "params": [
      {
        "nullable": null,
        "types": [
          "ScenarioDetails"
        ],
        "spread": false,
        "optional": false,
        "name": "scenario",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "ScenarioParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "parameters",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 345,
    "kind": "method",
    "name": "withFeatureNarrativeOf",
    "memberof": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~SceneReport",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~SceneReport#withFeatureNarrativeOf",
    "access": "public",
    "description": " ",
    "lineNumber": 243,
    "params": [
      {
        "nullable": null,
        "types": [
          "Description"
        ],
        "spread": false,
        "optional": false,
        "name": "description",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 346,
    "kind": "method",
    "name": "photoTaken",
    "memberof": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~SceneReport",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~SceneReport#photoTaken",
    "access": "public",
    "description": " ",
    "lineNumber": 249,
    "params": [
      {
        "nullable": null,
        "types": [
          "ActivityDetails"
        ],
        "spread": false,
        "optional": false,
        "name": "details",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Path"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 347,
    "kind": "method",
    "name": "arbitraryDataCaptured",
    "memberof": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~SceneReport",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~SceneReport#arbitraryDataCaptured",
    "access": "public",
    "description": " ",
    "lineNumber": 255,
    "params": [
      {
        "nullable": null,
        "types": [
          "Name"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "contents",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 348,
    "kind": "method",
    "name": "httpRequestCaptured",
    "memberof": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~SceneReport",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~SceneReport#httpRequestCaptured",
    "access": "public",
    "description": " ",
    "lineNumber": 267,
    "params": [
      {
        "nullable": null,
        "types": [
          "RequestAndResponse"
        ],
        "spread": false,
        "optional": false,
        "name": "requestResponse",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 349,
    "kind": "method",
    "name": "executionFinishedWith",
    "memberof": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~SceneReport",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~SceneReport#executionFinishedWith",
    "access": "public",
    "description": " ",
    "lineNumber": 288,
    "params": [
      {
        "nullable": null,
        "types": [
          "ScenarioDetails"
        ],
        "spread": false,
        "optional": false,
        "name": "scenario",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Outcome"
        ],
        "spread": false,
        "optional": false,
        "name": "outcome",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "SceneReport"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 350,
    "kind": "method",
    "name": "toJSON",
    "memberof": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~SceneReport",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~SceneReport#toJSON",
    "access": "public",
    "description": " ",
    "lineNumber": 319,
    "return": {
      "nullable": null,
      "types": [
        "Partial"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 351,
    "kind": "method",
    "name": "dataTableFrom",
    "memberof": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~SceneReport",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~SceneReport#dataTableFrom",
    "access": "private",
    "description": " ",
    "lineNumber": 336,
    "params": [
      {
        "nullable": null,
        "types": [
          "Partial"
        ],
        "spread": false,
        "optional": false,
        "name": "report",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "DataTable"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 352,
    "kind": "method",
    "name": "mapOutcome",
    "memberof": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~SceneReport",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~SceneReport#mapOutcome",
    "access": "private",
    "description": " ",
    "lineNumber": 346,
    "params": [
      {
        "nullable": null,
        "types": [
          "Outcome"
        ],
        "spread": false,
        "optional": false,
        "name": "outcome",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "mapAs",
        "description": ""
      }
    ],
    "ignore": true,
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 353,
    "kind": "method",
    "name": "withMutated",
    "memberof": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~SceneReport",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~SceneReport#withMutated",
    "access": "private",
    "description": " ",
    "lineNumber": 350,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "mutate",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "SceneReport"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 354,
    "kind": "method",
    "name": "copyOf",
    "memberof": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~SceneReport",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~SceneReport#copyOf",
    "access": "private",
    "description": " ",
    "lineNumber": 356,
    "params": [
      {
        "nullable": null,
        "types": [
          "T"
        ],
        "spread": false,
        "optional": false,
        "name": "json",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "T"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 355,
    "kind": "class",
    "name": "ActivityStack",
    "memberof": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts",
    "static": true,
    "longname": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~ActivityStack",
    "access": "package",
    "export": false,
    "importPath": "@serenity-js/serenity-bdd/src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts",
    "importStyle": null,
    "description": "",
    "lineNumber": 832,
    "interface": false,
    "ignore": true
  },
  {
    "__docId__": 356,
    "kind": "member",
    "name": "haveFailed",
    "memberof": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~ActivityStack",
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~ActivityStack#haveFailed",
    "access": "public",
    "description": " ",
    "lineNumber": 365,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 357,
    "kind": "member",
    "name": "items",
    "memberof": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~ActivityStack",
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~ActivityStack#items",
    "access": "private",
    "description": " ",
    "lineNumber": 366,
    "type": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 358,
    "kind": "member",
    "name": "mostRecent",
    "memberof": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~ActivityStack",
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~ActivityStack#mostRecent",
    "access": "private",
    "description": " ",
    "lineNumber": 367,
    "type": {
      "nullable": null,
      "types": [
        "Partial"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 359,
    "kind": "member",
    "name": "correlations",
    "memberof": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~ActivityStack",
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~ActivityStack#correlations",
    "access": "private",
    "description": " ",
    "lineNumber": 368,
    "type": {
      "nullable": null,
      "types": [
        "UNKNOWN"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 360,
    "kind": "method",
    "name": "push",
    "memberof": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~ActivityStack",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~ActivityStack#push",
    "access": "public",
    "description": " ",
    "lineNumber": 370,
    "params": [
      {
        "nullable": null,
        "types": [
          "Partial"
        ],
        "spread": false,
        "optional": false,
        "name": "item",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "CorrelationId"
        ],
        "spread": false,
        "optional": false,
        "name": "correlationId",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Partial"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 363,
    "kind": "method",
    "name": "pop",
    "memberof": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~ActivityStack",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~ActivityStack#pop",
    "access": "public",
    "description": " ",
    "lineNumber": 381,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 366,
    "kind": "method",
    "name": "last",
    "memberof": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~ActivityStack",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~ActivityStack#last",
    "access": "public",
    "description": " ",
    "lineNumber": 392,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 367,
    "kind": "method",
    "name": "mostRecentlyAccessedItem",
    "memberof": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~ActivityStack",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~ActivityStack#mostRecentlyAccessedItem",
    "access": "public",
    "description": " ",
    "lineNumber": 396,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 368,
    "kind": "method",
    "name": "itemByCorrelationId",
    "memberof": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~ActivityStack",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/reports/SceneReport.ts~ActivityStack#itemByCorrelationId",
    "access": "public",
    "description": " ",
    "lineNumber": 400,
    "params": [
      {
        "nullable": null,
        "types": [
          "CorrelationId"
        ],
        "spread": false,
        "optional": false,
        "name": "correlationId",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 369,
    "kind": "file",
    "name": "src/stage/crew/serenity-bdd-reporter/reports/SceneReportId.ts",
    "content": "import { ensure, isDefined, isGreaterThan, property, TinyType } from 'tiny-types';\n\nexport class SceneReportId extends TinyType {\n\n    public readonly value: string;\n\n    constructor(segment: string, base?: string) {\n        super();\n        ensure('ID segment', segment, isDefined(), property('length', isGreaterThan(0)));\n\n        this.value = [\n            base,\n            this.dashify(segment),\n        ].filter(_ => !! _).join(';');\n    }\n\n    append(segment: string): SceneReportId {\n        return new SceneReportId(segment, this.value);\n    }\n\n    private dashify(text: string) {\n        return text\n            .replace(/[ \\t\\W]/g, '-')\n            .replace(/^-+|-+$/g, '')\n            .toLowerCase();\n    }\n}\n",
    "static": true,
    "longname": "/home/travis/build/serenity-js/serenity-js/packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/reports/SceneReportId.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 370,
    "kind": "class",
    "name": "SceneReportId",
    "memberof": "src/stage/crew/serenity-bdd-reporter/reports/SceneReportId.ts",
    "static": true,
    "longname": "src/stage/crew/serenity-bdd-reporter/reports/SceneReportId.ts~SceneReportId",
    "access": "public",
    "export": true,
    "importPath": "@serenity-js/serenity-bdd/lib/stage/crew/serenity-bdd-reporter/reports",
    "importStyle": "{SceneReportId}",
    "description": " ",
    "lineNumber": 3,
    "interface": false,
    "extends": [
      "tiny-types~TinyType"
    ]
  },
  {
    "__docId__": 371,
    "kind": "member",
    "name": "value",
    "memberof": "src/stage/crew/serenity-bdd-reporter/reports/SceneReportId.ts~SceneReportId",
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/reports/SceneReportId.ts~SceneReportId#value",
    "access": "public",
    "description": " ",
    "lineNumber": 5,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 372,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/stage/crew/serenity-bdd-reporter/reports/SceneReportId.ts~SceneReportId",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/reports/SceneReportId.ts~SceneReportId#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true
  },
  {
    "__docId__": 374,
    "kind": "method",
    "name": "append",
    "memberof": "src/stage/crew/serenity-bdd-reporter/reports/SceneReportId.ts~SceneReportId",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/reports/SceneReportId.ts~SceneReportId#append",
    "access": "public",
    "description": " ",
    "lineNumber": 17,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "segment",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "SceneReportId"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 375,
    "kind": "method",
    "name": "dashify",
    "memberof": "src/stage/crew/serenity-bdd-reporter/reports/SceneReportId.ts~SceneReportId",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/reports/SceneReportId.ts~SceneReportId#dashify",
    "access": "private",
    "description": " ",
    "lineNumber": 21,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "text",
        "description": ""
      }
    ],
    "ignore": true,
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 376,
    "kind": "file",
    "name": "src/stage/crew/serenity-bdd-reporter/reports/SceneReports.ts",
    "content": "import { ScenarioDetails } from '@serenity-js/core/lib/model';\nimport { SceneReport } from './SceneReport';\nimport { SceneReportId } from './SceneReportId';\n\n/** @package */\nexport class SceneReports {\n    private readonly reports: { [entryId: string]: SceneReport } = {};\n\n    for(scenarioDetails: ScenarioDetails): SceneReport {\n        if (! this.alreadyHasAReportFor(scenarioDetails)) {\n            return this.createReportFor(scenarioDetails);\n        }\n\n        return this.reportFor(scenarioDetails);\n    }\n\n    save(scenarioReport: SceneReport) {\n        this.reports[this.correlationIdFor(scenarioReport.scenarioDetails)] = scenarioReport;\n    }\n\n    map<T>(fn: (report: SceneReport) => T): T[] {\n        return Object.keys(this.reports).map(correlationId => this.reports[correlationId]).map(fn);\n    }\n\n    private alreadyHasAReportFor(scenarioDetails: ScenarioDetails): boolean {\n        return !! this.reports[this.correlationIdFor(scenarioDetails)];\n    }\n\n    private reportFor(scenarioDetails: ScenarioDetails): SceneReport {\n        return this.reports[this.correlationIdFor(scenarioDetails)];\n    }\n\n    private createReportFor(scenarioDetails: ScenarioDetails): SceneReport {\n        return new SceneReport(scenarioDetails);\n    }\n\n    private correlationIdFor(scenarioDetails: ScenarioDetails): string {\n        return new SceneReportId(scenarioDetails.category.value)\n            .append(scenarioDetails.name.value)\n            .append(scenarioDetails.location.path.value)    // todo: should this include the line?\n            .value;\n    }\n}\n",
    "static": true,
    "longname": "/home/travis/build/serenity-js/serenity-js/packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/reports/SceneReports.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 377,
    "kind": "class",
    "name": "SceneReports",
    "memberof": "src/stage/crew/serenity-bdd-reporter/reports/SceneReports.ts",
    "static": true,
    "longname": "src/stage/crew/serenity-bdd-reporter/reports/SceneReports.ts~SceneReports",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/serenity-bdd/src/stage/crew/serenity-bdd-reporter/reports/SceneReports.ts",
    "importStyle": "{SceneReports}",
    "description": null,
    "lineNumber": 13,
    "interface": false,
    "ignore": true
  },
  {
    "__docId__": 378,
    "kind": "member",
    "name": "reports",
    "memberof": "src/stage/crew/serenity-bdd-reporter/reports/SceneReports.ts~SceneReports",
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/reports/SceneReports.ts~SceneReports#reports",
    "access": "private",
    "description": " ",
    "lineNumber": 7,
    "type": {
      "nullable": null,
      "types": [
        "UNKNOWN"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 379,
    "kind": "method",
    "name": "for",
    "memberof": "src/stage/crew/serenity-bdd-reporter/reports/SceneReports.ts~SceneReports",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/reports/SceneReports.ts~SceneReports#for",
    "access": "public",
    "description": " ",
    "lineNumber": 9,
    "params": [
      {
        "nullable": null,
        "types": [
          "ScenarioDetails"
        ],
        "spread": false,
        "optional": false,
        "name": "scenarioDetails",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "SceneReport"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 380,
    "kind": "method",
    "name": "save",
    "memberof": "src/stage/crew/serenity-bdd-reporter/reports/SceneReports.ts~SceneReports",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/reports/SceneReports.ts~SceneReports#save",
    "access": "public",
    "description": " ",
    "lineNumber": 17,
    "params": [
      {
        "nullable": null,
        "types": [
          "SceneReport"
        ],
        "spread": false,
        "optional": false,
        "name": "scenarioReport",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 381,
    "kind": "method",
    "name": "map",
    "memberof": "src/stage/crew/serenity-bdd-reporter/reports/SceneReports.ts~SceneReports",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/reports/SceneReports.ts~SceneReports#map",
    "access": "public",
    "description": " ",
    "lineNumber": 21,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "fn",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "UNKNOWN"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 382,
    "kind": "method",
    "name": "alreadyHasAReportFor",
    "memberof": "src/stage/crew/serenity-bdd-reporter/reports/SceneReports.ts~SceneReports",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/reports/SceneReports.ts~SceneReports#alreadyHasAReportFor",
    "access": "private",
    "description": " ",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "ScenarioDetails"
        ],
        "spread": false,
        "optional": false,
        "name": "scenarioDetails",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 383,
    "kind": "method",
    "name": "reportFor",
    "memberof": "src/stage/crew/serenity-bdd-reporter/reports/SceneReports.ts~SceneReports",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/reports/SceneReports.ts~SceneReports#reportFor",
    "access": "private",
    "description": " ",
    "lineNumber": 29,
    "params": [
      {
        "nullable": null,
        "types": [
          "ScenarioDetails"
        ],
        "spread": false,
        "optional": false,
        "name": "scenarioDetails",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "SceneReport"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 384,
    "kind": "method",
    "name": "createReportFor",
    "memberof": "src/stage/crew/serenity-bdd-reporter/reports/SceneReports.ts~SceneReports",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/reports/SceneReports.ts~SceneReports#createReportFor",
    "access": "private",
    "description": " ",
    "lineNumber": 33,
    "params": [
      {
        "nullable": null,
        "types": [
          "ScenarioDetails"
        ],
        "spread": false,
        "optional": false,
        "name": "scenarioDetails",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "SceneReport"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 385,
    "kind": "method",
    "name": "correlationIdFor",
    "memberof": "src/stage/crew/serenity-bdd-reporter/reports/SceneReports.ts~SceneReports",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/reports/SceneReports.ts~SceneReports#correlationIdFor",
    "access": "private",
    "description": " ",
    "lineNumber": 37,
    "params": [
      {
        "nullable": null,
        "types": [
          "ScenarioDetails"
        ],
        "spread": false,
        "optional": false,
        "name": "scenarioDetails",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 386,
    "kind": "file",
    "name": "src/stage/crew/serenity-bdd-reporter/reports/index.ts",
    "content": "export * from './SceneReport';\nexport * from './SceneReports';\n",
    "static": true,
    "longname": "/home/travis/build/serenity-js/serenity-js/packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/reports/index.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 387,
    "kind": "file",
    "name": "src/stage/crew/serenity-bdd-reporter/strategies/SceneReportingStrategy.ts",
    "content": "import {\n    ActivityRelatedArtifactArchived,\n    ArtifactGenerated,\n    DomainEvent,\n    FeatureNarrativeDetected,\n    SceneBackgroundDetected,\n    SceneDescriptionDetected,\n    SceneTagged,\n    TestRunnerDetected,\n} from '@serenity-js/core/lib/events';\nimport { AssertionReportDiffer } from '@serenity-js/core/lib/io';\nimport { Artifact, ArtifactType, AssertionReport, HTTPRequestResponse, JSONData, LogEntry, Photo, ScenarioDetails, TextData } from '@serenity-js/core/lib/model';\nimport { match } from 'tiny-types';\nimport { SceneReport } from '../reports';\n\n/**\n * @package\n */\nexport abstract class SceneReportingStrategy {\n\n    private static readonly differ = new AssertionReportDiffer({\n        expected: line => `+ ${ line }`,\n        actual:   line => `- ${ line }`,\n        matching: line => `  ${ line }`,\n    });\n\n    constructor(protected readonly scenario: ScenarioDetails) {\n    }\n\n    abstract worksFor(anotherScenario: ScenarioDetails): boolean;\n\n    handle(event: DomainEvent, report: SceneReport): SceneReport {\n        return match<DomainEvent, SceneReport>(event)\n            .when(FeatureNarrativeDetected, (e: FeatureNarrativeDetected)   => report.withFeatureNarrativeOf(e.description))\n            .when(SceneBackgroundDetected,  (e: SceneBackgroundDetected)    => report.withBackgroundOf(e.name, e.description))\n            .when(SceneDescriptionDetected, (e: SceneDescriptionDetected)   => report.withDescriptionOf(e.description))\n            .when(SceneTagged,              (e: SceneTagged)                => report.taggedWith(e.tag))\n            .when(TestRunnerDetected,       (e: TestRunnerDetected)         => report.executedBy(e.value))\n            .when(ArtifactGenerated,        (e: ArtifactGenerated)          => match<Artifact, SceneReport>(e.artifact)\n                .when(HTTPRequestResponse,  _ => report.httpRequestCaptured(e.artifact.map(data => data)))\n                .when(TextData,             _ => report.arbitraryDataCaptured(e.name, e.artifact.map(artifactContents => artifactContents.data)))\n                .when(LogEntry,             _ => report.arbitraryDataCaptured(e.name, e.artifact.map(artifactContents => artifactContents.data)))\n                .when(AssertionReport,      _ =>\n                    report.arbitraryDataCaptured(e.name, e.artifact.map(artifactContents =>\n                        SceneReportingStrategy.differ.diff(artifactContents.expected, artifactContents.actual),\n                    )),\n                )\n                .when(JSONData,             _ => report.arbitraryDataCaptured(e.name, e.artifact.map(artifactContents => JSON.stringify(artifactContents, null, 4))))\n                .else(_ => report))\n            .when(ActivityRelatedArtifactArchived, (e: ActivityRelatedArtifactArchived) => match<ArtifactType, SceneReport>(e.type)\n                .when(Photo,                _ => report.photoTaken(e.details, e.path))\n                .else(_ => report))\n            .else(_ => report);\n    }\n}\n",
    "static": true,
    "longname": "/home/travis/build/serenity-js/serenity-js/packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/strategies/SceneReportingStrategy.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 388,
    "kind": "class",
    "name": "SceneReportingStrategy",
    "memberof": "src/stage/crew/serenity-bdd-reporter/strategies/SceneReportingStrategy.ts",
    "static": true,
    "longname": "src/stage/crew/serenity-bdd-reporter/strategies/SceneReportingStrategy.ts~SceneReportingStrategy",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/serenity-bdd/src/stage/crew/serenity-bdd-reporter/strategies/SceneReportingStrategy.ts",
    "importStyle": "{SceneReportingStrategy}",
    "description": "",
    "lineNumber": 26,
    "interface": false,
    "ignore": true
  },
  {
    "__docId__": 389,
    "kind": "member",
    "name": "differ",
    "memberof": "src/stage/crew/serenity-bdd-reporter/strategies/SceneReportingStrategy.ts~SceneReportingStrategy",
    "static": true,
    "longname": "src/stage/crew/serenity-bdd-reporter/strategies/SceneReportingStrategy.ts~SceneReportingStrategy.differ",
    "access": "private",
    "description": " ",
    "lineNumber": 21,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 390,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/stage/crew/serenity-bdd-reporter/strategies/SceneReportingStrategy.ts~SceneReportingStrategy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/strategies/SceneReportingStrategy.ts~SceneReportingStrategy#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 45,
    "undocument": true
  },
  {
    "__docId__": 391,
    "kind": "method",
    "name": "handle",
    "memberof": "src/stage/crew/serenity-bdd-reporter/strategies/SceneReportingStrategy.ts~SceneReportingStrategy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/strategies/SceneReportingStrategy.ts~SceneReportingStrategy#handle",
    "access": "public",
    "description": " ",
    "lineNumber": 32,
    "params": [
      {
        "nullable": null,
        "types": [
          "DomainEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "SceneReport"
        ],
        "spread": false,
        "optional": false,
        "name": "report",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "SceneReport"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 392,
    "kind": "file",
    "name": "src/stage/crew/serenity-bdd-reporter/strategies/SceneSequenceReportingStrategy.ts",
    "content": "import { ActivityFinished, ActivityStarts, DomainEvent, SceneFinished, SceneParametersDetected, SceneStarts, SceneTemplateDetected } from '@serenity-js/core/lib/events';\nimport { ActivityDetails, ScenarioDetails } from '@serenity-js/core/lib/model';\nimport { match } from 'tiny-types';\n\nimport { SceneReport } from '../reports';\nimport { SceneReportingStrategy } from './SceneReportingStrategy';\n\n/**\n * @package\n */\nexport class SceneSequenceReportingStrategy extends SceneReportingStrategy {\n\n    worksFor(anotherScenario: ScenarioDetails): boolean {\n        return !! anotherScenario\n            && this.scenario.name.equals(anotherScenario.name)             // todo: what about templated scenario names?\n            && this.scenario.category.equals(anotherScenario.category)\n            && this.scenario.location.path.equals(anotherScenario.location.path);\n    }\n\n    handle(event: DomainEvent, report: SceneReport): SceneReport {\n        return match<DomainEvent, SceneReport>(event)\n            .when(SceneStarts,                      (e: SceneStarts) => {\n                return report\n                    .activityStarted(this.asActivity(e.value), e.timestamp)\n                    .executionStartedAt(e.timestamp);\n            })\n            .when(SceneTemplateDetected,    (e: SceneTemplateDetected) => {\n                return report.withScenarioOutline(e.template);\n            })\n            .when(SceneParametersDetected,  (e: SceneParametersDetected) => {\n                return report.withScenarioParametersOf(e.scenario, e.value);\n            })\n            .when(ActivityStarts,                   (e: ActivityStarts) => {\n                return report.activityStarted(e.value, e.timestamp);\n            })\n            .when(ActivityFinished,                 (e: ActivityFinished) => {\n                return report.activityFinished(e.value, e.outcome, e.timestamp);\n            })\n            .when(SceneFinished,                    (e: SceneFinished) => {\n                return report\n                    .activityFinished(this.asActivity(e.value), e.outcome, e.timestamp)\n                    .executionFinishedWith(e.value, e.outcome)\n                    .executionFinishedAt(e.timestamp);\n            })\n            .else(e => super.handle(e, report));\n    }\n\n    private asActivity(scenario: ScenarioDetails): ActivityDetails {\n        return new ActivityDetails(scenario.name);\n    }\n}\n",
    "static": true,
    "longname": "/home/travis/build/serenity-js/serenity-js/packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/strategies/SceneSequenceReportingStrategy.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 393,
    "kind": "class",
    "name": "SceneSequenceReportingStrategy",
    "memberof": "src/stage/crew/serenity-bdd-reporter/strategies/SceneSequenceReportingStrategy.ts",
    "static": true,
    "longname": "src/stage/crew/serenity-bdd-reporter/strategies/SceneSequenceReportingStrategy.ts~SceneSequenceReportingStrategy",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/serenity-bdd/src/stage/crew/serenity-bdd-reporter/strategies/SceneSequenceReportingStrategy.ts",
    "importStyle": "{SceneSequenceReportingStrategy}",
    "description": "",
    "lineNumber": 18,
    "interface": false,
    "extends": [
      "src/stage/crew/serenity-bdd-reporter/strategies/SceneReportingStrategy.js~SceneReportingStrategy"
    ],
    "ignore": true
  },
  {
    "__docId__": 394,
    "kind": "method",
    "name": "worksFor",
    "memberof": "src/stage/crew/serenity-bdd-reporter/strategies/SceneSequenceReportingStrategy.ts~SceneSequenceReportingStrategy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/strategies/SceneSequenceReportingStrategy.ts~SceneSequenceReportingStrategy#worksFor",
    "access": "public",
    "description": " ",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "ScenarioDetails"
        ],
        "spread": false,
        "optional": false,
        "name": "anotherScenario",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 395,
    "kind": "method",
    "name": "handle",
    "memberof": "src/stage/crew/serenity-bdd-reporter/strategies/SceneSequenceReportingStrategy.ts~SceneSequenceReportingStrategy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/strategies/SceneSequenceReportingStrategy.ts~SceneSequenceReportingStrategy#handle",
    "access": "public",
    "description": " ",
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "DomainEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "SceneReport"
        ],
        "spread": false,
        "optional": false,
        "name": "report",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "SceneReport"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 396,
    "kind": "method",
    "name": "asActivity",
    "memberof": "src/stage/crew/serenity-bdd-reporter/strategies/SceneSequenceReportingStrategy.ts~SceneSequenceReportingStrategy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/strategies/SceneSequenceReportingStrategy.ts~SceneSequenceReportingStrategy#asActivity",
    "access": "private",
    "description": " ",
    "lineNumber": 48,
    "params": [
      {
        "nullable": null,
        "types": [
          "ScenarioDetails"
        ],
        "spread": false,
        "optional": false,
        "name": "scenario",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ActivityDetails"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 397,
    "kind": "file",
    "name": "src/stage/crew/serenity-bdd-reporter/strategies/SingleSceneReportingStrategy.ts",
    "content": "import { ActivityFinished, ActivityStarts, DomainEvent, SceneFinished, SceneStarts } from '@serenity-js/core/lib/events';\nimport { ScenarioDetails } from '@serenity-js/core/lib/model';\nimport { match } from 'tiny-types';\n\nimport { SceneReport } from '../reports';\nimport { SceneReportingStrategy } from './SceneReportingStrategy';\n\n/**\n * @package\n */\nexport class SingleSceneReportingStrategy extends SceneReportingStrategy {\n    worksFor(anotherScenario: ScenarioDetails): boolean {\n        return this.scenario.equals(anotherScenario);\n    }\n\n    handle(event: DomainEvent, report: SceneReport): SceneReport {\n        return match<DomainEvent, SceneReport>(event)\n            .when(SceneStarts,      (e: SceneStarts)      => report.executionStartedAt(e.timestamp))\n            .when(ActivityStarts,   (e: ActivityStarts)   => report.activityStarted(e.value, e.timestamp))\n            .when(ActivityFinished, (e: ActivityFinished) => report.activityFinished(e.value, e.outcome, e.timestamp))\n            .when(SceneFinished,    (e: SceneFinished)    => {\n                return report\n                    .executionFinishedAt(e.timestamp)\n                    .executionFinishedWith(e.value, e.outcome);\n            })\n            .else(e => super.handle(e, report));\n    }\n}\n",
    "static": true,
    "longname": "/home/travis/build/serenity-js/serenity-js/packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/strategies/SingleSceneReportingStrategy.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 398,
    "kind": "class",
    "name": "SingleSceneReportingStrategy",
    "memberof": "src/stage/crew/serenity-bdd-reporter/strategies/SingleSceneReportingStrategy.ts",
    "static": true,
    "longname": "src/stage/crew/serenity-bdd-reporter/strategies/SingleSceneReportingStrategy.ts~SingleSceneReportingStrategy",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/serenity-bdd/src/stage/crew/serenity-bdd-reporter/strategies/SingleSceneReportingStrategy.ts",
    "importStyle": "{SingleSceneReportingStrategy}",
    "description": "",
    "lineNumber": 18,
    "interface": false,
    "extends": [
      "src/stage/crew/serenity-bdd-reporter/strategies/SceneReportingStrategy.js~SceneReportingStrategy"
    ],
    "ignore": true
  },
  {
    "__docId__": 399,
    "kind": "method",
    "name": "worksFor",
    "memberof": "src/stage/crew/serenity-bdd-reporter/strategies/SingleSceneReportingStrategy.ts~SingleSceneReportingStrategy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/strategies/SingleSceneReportingStrategy.ts~SingleSceneReportingStrategy#worksFor",
    "access": "public",
    "description": " ",
    "lineNumber": 12,
    "params": [
      {
        "nullable": null,
        "types": [
          "ScenarioDetails"
        ],
        "spread": false,
        "optional": false,
        "name": "anotherScenario",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 400,
    "kind": "method",
    "name": "handle",
    "memberof": "src/stage/crew/serenity-bdd-reporter/strategies/SingleSceneReportingStrategy.ts~SingleSceneReportingStrategy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/strategies/SingleSceneReportingStrategy.ts~SingleSceneReportingStrategy#handle",
    "access": "public",
    "description": " ",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "DomainEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "SceneReport"
        ],
        "spread": false,
        "optional": false,
        "name": "report",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "SceneReport"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 401,
    "kind": "file",
    "name": "src/stage/crew/serenity-bdd-reporter/strategies/index.ts",
    "content": "export * from './SceneReportingStrategy';\nexport * from './SceneSequenceReportingStrategy';\nexport * from './SingleSceneReportingStrategy';\n",
    "static": true,
    "longname": "/home/travis/build/serenity-js/serenity-js/packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/strategies/index.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 402,
    "kind": "file",
    "name": "src/stage/index.ts",
    "content": "export * from './crew';\n",
    "static": true,
    "longname": "/home/travis/build/serenity-js/serenity-js/packages/serenity-bdd/src/stage/index.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "kind": "index",
    "content": "# Serenity/JS\n\n[Serenity/JS](https://serenity-js.org) is a Node.js library designed to make acceptance and regression testing\nof modern full-stack applications faster, more collaborative and easier to scale.\n\n## Serenity BDD\n\nThe `@serenity-js/serenity-bdd` module integrates Serenity/JS and the Serenity BDD reporting CLI.\n\nThis integration enables your Serenity/JS tests to produce interim JSON reports, which the Serenity BDD reporting CLI\ncan then turn into world-class, illustrated test reports and living documentation.\n\n### Installation\n\n```\nnpm install --save-dev @serenity-js/core @serenity-js/assertions @serenity-js/rest @serenity-js/serenity-bdd\n```\n\n### SerenityBDDReporter\n\nTo allow Serenity/JS to produce Serenity BDD-standard JSON reports, assign the `SerenityBDDReporter` to the `Stage`\nand configure the `ArtifactArchiver` to store the reports at the location where Serenity BDD expects to find them.\n\nThis can be done in your `protractor.conf.js` file if you're using Protractor, or programmatically.\n\n#### Programmatic configuration\n\n```typescript\nimport { ArtifactArchiver, serenity } from '@serenity-js/core';\nimport { SerenityBDDReporter } from '@serenity-js/serenity-bdd';\n\nserenity.setTheStage(\n    ArtifactArchiver.storingArtifactsAt('./target/site/serenity'),\n    new SerenityBDDReporter(),\n);\n```\n\n#### Protractor\n\n```javascript\n// protractor.conf.js\n\nconst\n    { ArtifactArchiver }    = require('@serenity-js/core'),\n    { SerenityBDDReporter } = require('@serenity-js/serenity-bdd'),\n\nexports.config = {\n\n    framework:      'custom',\n    frameworkPath:  require.resolve('@serenity-js/protractor/adapter'),\n\n    serenity: {\n        crew: [\n            ArtifactArchiver.storingArtifactsAt('./target/site/serenity'),\n            new SerenityBDDReporter(),\n        ]\n    },\n\n    // ...\n}\n```\n\n### Serenity BDD Living Documentation\n\nTo turn the Serenity BDD-standard JSON reports produced by the `SerenityBDDReporter` into Serenity BDD test reports,\nyou need the [Serenity BDD reporting CLI](https://github.com/serenity-bdd/serenity-cli).\n\nThe Serenity BDD reporting CLI is a Java program, distributed as an executable `.jar` file and [available on Bintray](https://bintray.com/serenity/maven/serenity-cli).\n\nThis module ships with a `serenity-bdd` CLI wrapper that makes downloading and running the Serenity BDD reporting CLI easy.\n\nTo learn more about the usage of the `serenity-bdd` wrapper, run:\n\n```\nnpx serenity-bdd --help\n```\n\n#### Downloading the Serenity BDD reporting CLI\n\nTo download the Serenity BDD reporting CLI or update it, use the update command:\n\n```\nnpx serenity-bdd update\n```\n\nPlease note that the `update` command will try to download the jar only if you don't have one cached already,\nor when the one you have is not up to date. Otherwise no outbound network calls are made.\n\nIf you're behind a corporate proxy server that causes certificate errors you can tell the wrapper to ignore the SSL certificate check:\n\n```\nnpx serenity-bdd update --ignoreSSL\n```\n\nYou can also tell it to download the Serenity BDD reporting CLI jar from your company's artifact repository\nif you can't use the official Bintray one:\n\n```\nnpx serenity-bdd update --repository https://artifactory.example.org/\n```\n\nTo learn more about the `update` command, run:\n\n```\nnpx serenity-bdd --help update\n```\n\n#### Producing the Serenity BDD test report\n\nTo produce the Serenity BDD test report and living documentation using default settings, run:\n\n```\nnpx serenity-bdd run\n```\n\nTo learn more about the `run` command and how to change the default settings, run:\n\n```\nnpx serenity-bdd --help run\n```\n\n### Using NPM scripts\n\nThe easiest way to ensure that the Serenity BDD reporting CLI is up to date\nand that the Serenity BDD test report is produced after each test run is to\nadd the following entries to the scripts section of the `package.json` file:\n\n```json\n{\n  \"scripts\": {\n    \"test:update-serenity\": \"serenity-bdd update\",\n    \"test:acceptance\": \"/* invoke the test runner */\",\n    \"test:report\": \"serenity-bdd run\",\n    \"test\": \"failsafe test:acceptance test:update-serenity test:report\",\n    // ... other scripts\n  },\n  // ... other config\n}\n```\n\nIn the above example, the [`npm-failsafe`](https://www.npmjs.com/package/npm-failsafe) module is used to invoke\neach of the `test:update-serenity`, `test:acceptance` and `test:report` scripts when `npm test` is executed.\nThis is to ensure that the Serenity BDD report is produced even when there is a test failure.\n",
    "longname": "/home/travis/build/serenity-js/serenity-js/packages/serenity-bdd/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"@serenity-js/serenity-bdd\",\n  \"version\": \"2.3.6\",\n  \"description\": \"Serenity BDD reporter for Serenity/JS\",\n  \"author\": {\n    \"name\": \"Jan Molak\",\n    \"email\": \"jan.molak@smartcodeltd.co.uk\",\n    \"url\": \"https://janmolak.com\"\n  },\n  \"funding\": {\n    \"url\": \"https://github.com/sponsors/serenity-js\"\n  },\n  \"homepage\": \"https://serenity-js.org\",\n  \"license\": \"Apache-2.0\",\n  \"publishConfig\": {\n    \"access\": \"public\"\n  },\n  \"main\": \"lib/index.js\",\n  \"typings\": \"lib/index.d.ts\",\n  \"bin\": {\n    \"serenity-bdd\": \"bin/serenity-bdd\"\n  },\n  \"keywords\": [\n    \"serenity-js\",\n    \"tdd\",\n    \"bdd\",\n    \"test\",\n    \"testing\"\n  ],\n  \"scripts\": {\n    \"clean\": \"rimraf .nyc_output lib target\",\n    \"lint\": \"tslint --project tsconfig-lint.json --config ../../tslint.json --format stylish\",\n    \"test\": \"nyc --report-dir ../../target/coverage/serenity-bdd mocha --config ../../.mocharc.yml 'spec/**/*.spec.*'\",\n    \"compile\": \"tsc --project tsconfig.json\",\n    \"site\": \"esdoc -c .esdoc.js\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/serenity-js/serenity-js.git\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/serenity-js/serenity-js/issues\"\n  },\n  \"engines\": {\n    \"node\": \">= 8\",\n    \"npm\": \">= 5\"\n  },\n  \"dependencies\": {\n    \"axios\": \"^0.19.2\",\n    \"chalk\": \"^4.0.0\",\n    \"find-java-home\": \"^1.1.0\",\n    \"progress\": \"^2.0.3\",\n    \"tiny-types\": \"^1.12.4\",\n    \"which\": \"^2.0.2\",\n    \"yargs\": \"^15.3.1\"\n  },\n  \"peerDependencies\": {\n    \"@serenity-js/assertions\": \"2.x\",\n    \"@serenity-js/core\": \"2.x\",\n    \"@serenity-js/rest\": \"2.x\"\n  },\n  \"devDependencies\": {\n    \"@documentation/esdoc-template\": \"2.0.7\",\n    \"@integration/testing-tools\": \"2.3.6\",\n    \"@serenity-js/assertions\": \"2.3.6\",\n    \"@serenity-js/core\": \"2.3.6\",\n    \"@serenity-js/rest\": \"2.3.6\",\n    \"@types/mocha\": \"^7.0.2\",\n    \"@types/progress\": \"^2.0.3\",\n    \"memfs\": \"^3.1.2\"\n  },\n  \"nyc\": {\n    \"include\": [\n      \"src/**/*.ts\"\n    ],\n    \"exclude\": [\n      \"src/**/*.d.ts\",\n      \"src/cli\",\n      \"lib\",\n      \"node_modules\",\n      \"spec\"\n    ],\n    \"extension\": [\n      \".ts\"\n    ],\n    \"require\": [\n      \"ts-node/register\"\n    ],\n    \"reporter\": [\n      \"json\"\n    ],\n    \"cache\": true,\n    \"all\": true\n  }\n}\n",
    "longname": "/home/travis/build/serenity-js/serenity-js/packages/serenity-bdd/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  },
  {
    "__docId__": 403,
    "kind": "testFile",
    "name": "spec/cli/bootstrap.spec.ts",
    "content": "import 'mocha';\n\nimport { expect } from '@integration/testing-tools';\nimport { bootstrap } from '../../src/cli/bootstrap';\n\ndescribe('Serenity BDD CLI', () => {\n\n    it('should tell its version', () => {\n        const pkg = require('../../package.json');\n\n        bootstrap(['--version'], (error, parsed, output) => {\n            expect(output).to.equal(pkg.version);\n        });\n    });\n});\n",
    "static": true,
    "longname": "/home/travis/build/serenity-js/serenity-js/packages/serenity-bdd/spec/cli/bootstrap.spec.ts",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 404,
    "kind": "test",
    "name": "describe0",
    "testId": 0,
    "memberof": "spec/cli/bootstrap.spec.ts",
    "testDepth": 0,
    "static": true,
    "longname": "spec/cli/bootstrap.spec.ts~describe0",
    "access": null,
    "description": "Serenity BDD CLI",
    "lineNumber": 6
  },
  {
    "__docId__": 405,
    "kind": "test",
    "name": "it1",
    "testId": 1,
    "memberof": "spec/cli/bootstrap.spec.ts~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "spec/cli/bootstrap.spec.ts~describe0.it1",
    "access": null,
    "description": "should tell its version",
    "lineNumber": 8
  },
  {
    "__docId__": 406,
    "kind": "testFile",
    "name": "spec/cli/model/GAV.spec.ts",
    "content": "import 'mocha';\n\nimport { expect } from '@integration/testing-tools';\nimport { Path } from '@serenity-js/core/lib/io';\n\nimport { GAV } from '../../../src/cli/model';\n\ndescribe('GAV', () => {\n\n    describe('can be described using a string which format', () => {\n\n        it('follows group:artifact:version', () => {\n            const gav = GAV.fromString('net.serenity-bdd:serenity-cli:2.1.9');\n\n            expect(gav.groupId).to.equal('net.serenity-bdd');\n            expect(gav.artifactId).to.equal('serenity-cli');\n            expect(gav.extension).to.equal('jar');\n            expect(gav.version).to.equal('2.1.9');\n            expect(gav.classifier).to.equal(undefined);\n        });\n\n        it('follows group:artifact:extension:version', () => {\n            const gav = GAV.fromString('net.serenity-bdd:serenity:war:2.1.9');\n\n            expect(gav.groupId).to.equal('net.serenity-bdd');\n            expect(gav.artifactId).to.equal('serenity');\n            expect(gav.extension).to.equal('war');\n            expect(gav.version).to.equal('2.1.9');\n            expect(gav.classifier).to.equal(undefined);\n        });\n\n        it('follows group:artifact:extension:classifier:version', () => {\n            const gav = GAV.fromString('net.serenity-bdd:serenity-cli:jar:all:2.1.9');\n\n            expect(gav.groupId).to.equal('net.serenity-bdd');\n            expect(gav.artifactId).to.equal('serenity-cli');\n            expect(gav.extension).to.equal('jar');\n            expect(gav.version).to.equal('2.1.9');\n            expect(gav.classifier).to.equal('all');\n        });\n    });\n\n    describe('can be converted to a file name when the identifier', () => {\n        it('follows group:artifact:version', () => {\n            const gav = GAV.fromString('net.serenity-bdd:serenity-cli:2.1.9');\n\n            expect(gav.toPath()).to.equal(new Path('serenity-cli-2.1.9.jar'));\n        });\n\n        it('follows group:artifact:extension:version', () => {\n            const gav = GAV.fromString('net.serenity-bdd:serenity:war:2.1.9');\n\n            expect(gav.toPath()).to.equal(new Path('serenity-2.1.9.war'));\n        });\n\n        it('follows group:artifact:extension:classifier:version', () => {\n            const gav = GAV.fromString('net.serenity-bdd:serenity-cli:jar:all:2.1.9');\n\n            expect(gav.toPath()).to.equal(new Path('serenity-cli-2.1.9-all.jar'));\n        });\n    });\n});\n",
    "static": true,
    "longname": "/home/travis/build/serenity-js/serenity-js/packages/serenity-bdd/spec/cli/model/GAV.spec.ts",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 407,
    "kind": "test",
    "name": "describe2",
    "testId": 2,
    "memberof": "spec/cli/model/GAV.spec.ts",
    "testDepth": 0,
    "static": true,
    "longname": "spec/cli/model/GAV.spec.ts~describe2",
    "access": null,
    "description": "GAV",
    "lineNumber": 8
  },
  {
    "__docId__": 408,
    "kind": "test",
    "name": "describe3",
    "testId": 3,
    "memberof": "spec/cli/model/GAV.spec.ts~describe2",
    "testDepth": 1,
    "static": true,
    "longname": "spec/cli/model/GAV.spec.ts~describe2.describe3",
    "access": null,
    "description": "can be described using a string which format",
    "lineNumber": 10
  },
  {
    "__docId__": 409,
    "kind": "test",
    "name": "it4",
    "testId": 4,
    "memberof": "spec/cli/model/GAV.spec.ts~describe2.describe3",
    "testDepth": 2,
    "static": true,
    "longname": "spec/cli/model/GAV.spec.ts~describe2.describe3.it4",
    "access": null,
    "description": "follows group:artifact:version",
    "lineNumber": 12
  },
  {
    "__docId__": 410,
    "kind": "test",
    "name": "it5",
    "testId": 5,
    "memberof": "spec/cli/model/GAV.spec.ts~describe2.describe3",
    "testDepth": 2,
    "static": true,
    "longname": "spec/cli/model/GAV.spec.ts~describe2.describe3.it5",
    "access": null,
    "description": "follows group:artifact:extension:version",
    "lineNumber": 22
  },
  {
    "__docId__": 411,
    "kind": "test",
    "name": "it6",
    "testId": 6,
    "memberof": "spec/cli/model/GAV.spec.ts~describe2.describe3",
    "testDepth": 2,
    "static": true,
    "longname": "spec/cli/model/GAV.spec.ts~describe2.describe3.it6",
    "access": null,
    "description": "follows group:artifact:extension:classifier:version",
    "lineNumber": 32
  },
  {
    "__docId__": 412,
    "kind": "test",
    "name": "describe7",
    "testId": 7,
    "memberof": "spec/cli/model/GAV.spec.ts~describe2",
    "testDepth": 1,
    "static": true,
    "longname": "spec/cli/model/GAV.spec.ts~describe2.describe7",
    "access": null,
    "description": "can be converted to a file name when the identifier",
    "lineNumber": 43
  },
  {
    "__docId__": 413,
    "kind": "test",
    "name": "it8",
    "testId": 8,
    "memberof": "spec/cli/model/GAV.spec.ts~describe2.describe7",
    "testDepth": 2,
    "static": true,
    "longname": "spec/cli/model/GAV.spec.ts~describe2.describe7.it8",
    "access": null,
    "description": "follows group:artifact:version",
    "lineNumber": 44
  },
  {
    "__docId__": 414,
    "kind": "test",
    "name": "it9",
    "testId": 9,
    "memberof": "spec/cli/model/GAV.spec.ts~describe2.describe7",
    "testDepth": 2,
    "static": true,
    "longname": "spec/cli/model/GAV.spec.ts~describe2.describe7.it9",
    "access": null,
    "description": "follows group:artifact:extension:version",
    "lineNumber": 50
  },
  {
    "__docId__": 415,
    "kind": "test",
    "name": "it10",
    "testId": 10,
    "memberof": "spec/cli/model/GAV.spec.ts~describe2.describe7",
    "testDepth": 2,
    "static": true,
    "longname": "spec/cli/model/GAV.spec.ts~describe2.describe7.it10",
    "access": null,
    "description": "follows group:artifact:extension:classifier:version",
    "lineNumber": 56
  },
  {
    "__docId__": 416,
    "kind": "testFile",
    "name": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/describing_scene.spec.ts",
    "content": "import 'mocha';\n\nimport { expect } from '@integration/testing-tools';\nimport { StageManager } from '@serenity-js/core';\nimport { FeatureNarrativeDetected, SceneBackgroundDetected, SceneDescriptionDetected, SceneFinished, SceneStarts, TestRunFinishes } from '@serenity-js/core/lib/events';\nimport { Description, ExecutionSuccessful, Name } from '@serenity-js/core/lib/model';\nimport * as sinon from 'sinon';\n\nimport { SerenityBDDReporter } from '../../../../../src';\nimport { SerenityBDDReport } from '../../../../../src/stage/crew/serenity-bdd-reporter/SerenityBDDJsonSchema';\nimport { given } from '../../given';\nimport { defaultCardScenario } from '../../samples';\nimport { create } from '../create';\n\ndescribe('SerenityBDDReporter', () => {\n\n    let stageManager: sinon.SinonStubbedInstance<StageManager>,\n        reporter: SerenityBDDReporter;\n\n    beforeEach(() => {\n        const env = create();\n\n        stageManager    = env.stageManager;\n        reporter        = env.reporter;\n    });\n\n    /**\n     * @test {SerenityBDDReporter}\n     * @test {SceneStarts}\n     * @test {SceneBackgroundDetected}\n     * @test {SceneFinished}\n     * @test {ExecutionSuccessful}\n     * @test {TestRunFinishes}\n     */\n    it('captures information about scenario background', () => {\n        given(reporter).isNotifiedOfFollowingEvents(\n            new SceneStarts(defaultCardScenario),\n                new SceneBackgroundDetected(new Name('Background title'), new Description('Background description')),\n            new SceneFinished(defaultCardScenario, new ExecutionSuccessful()),\n            new TestRunFinishes(),\n        );\n\n        const report: SerenityBDDReport = stageManager.notifyOf.firstCall.lastArg.artifact.map(_ => _);\n\n        expect(report.backgroundTitle).to.equal('Background title');\n        expect(report.backgroundDescription).to.equal('Background description');\n    });\n\n    /**\n     * @test {SerenityBDDReporter}\n     * @test {SceneStarts}\n     * @test {SceneDescriptionDetected}\n     * @test {SceneFinished}\n     * @test {ExecutionSuccessful}\n     * @test {TestRunFinishes}\n     */\n    it('captures the description of the scenario', () => {\n        given(reporter).isNotifiedOfFollowingEvents(\n            new SceneStarts(defaultCardScenario),\n            new SceneDescriptionDetected(new Description('Scenario description')),\n            new SceneFinished(defaultCardScenario, new ExecutionSuccessful()),\n            new TestRunFinishes(),\n        );\n\n        const report: SerenityBDDReport = stageManager.notifyOf.firstCall.lastArg.artifact.map(_ => _);\n\n        expect(report.description).to.equal('Scenario description');\n    });\n\n    /**\n     * @test {SerenityBDDReporter}\n     * @test {SceneStarts}\n     * @test {FeatureNarrativeDetected}\n     * @test {SceneFinished}\n     * @test {ExecutionSuccessful}\n     * @test {TestRunFinishes}\n     */\n    it('captures the narrative behind the scenario', () => {\n        given(reporter).isNotifiedOfFollowingEvents(\n            new SceneStarts(defaultCardScenario),\n            new FeatureNarrativeDetected(new Description('Feature narrative')),\n            new SceneFinished(defaultCardScenario, new ExecutionSuccessful()),\n            new TestRunFinishes(),\n        );\n\n        const report: SerenityBDDReport = stageManager.notifyOf.firstCall.lastArg.artifact.map(_ => _);\n\n        expect(report.userStory.narrative).to.equal('Feature narrative');\n    });\n});\n",
    "static": true,
    "longname": "/home/travis/build/serenity-js/serenity-js/packages/serenity-bdd/spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/describing_scene.spec.ts",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 417,
    "kind": "test",
    "name": "describe11",
    "testId": 11,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/describing_scene.spec.ts",
    "testDepth": 0,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/describing_scene.spec.ts~describe11",
    "access": null,
    "description": "SerenityBDDReporter",
    "lineNumber": 15
  },
  {
    "__docId__": 418,
    "kind": "test",
    "name": "it12",
    "testId": 12,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/describing_scene.spec.ts~describe11",
    "testDepth": 1,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/describing_scene.spec.ts~describe11.it12",
    "access": null,
    "description": "captures information about scenario background",
    "lineNumber": 35,
    "testTargets": [
      "SerenityBDDReporter",
      "SceneStarts",
      "SceneBackgroundDetected",
      "SceneFinished",
      "ExecutionSuccessful",
      "TestRunFinishes"
    ]
  },
  {
    "__docId__": 419,
    "kind": "test",
    "name": "it13",
    "testId": 13,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/describing_scene.spec.ts~describe11",
    "testDepth": 1,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/describing_scene.spec.ts~describe11.it13",
    "access": null,
    "description": "captures the description of the scenario",
    "lineNumber": 57,
    "testTargets": [
      "SerenityBDDReporter",
      "SceneStarts",
      "SceneDescriptionDetected",
      "SceneFinished",
      "ExecutionSuccessful",
      "TestRunFinishes"
    ]
  },
  {
    "__docId__": 420,
    "kind": "test",
    "name": "it14",
    "testId": 14,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/describing_scene.spec.ts~describe11",
    "testDepth": 1,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/describing_scene.spec.ts~describe11.it14",
    "access": null,
    "description": "captures the narrative behind the scenario",
    "lineNumber": 78,
    "testTargets": [
      "SerenityBDDReporter",
      "SceneStarts",
      "FeatureNarrativeDetected",
      "SceneFinished",
      "ExecutionSuccessful",
      "TestRunFinishes"
    ]
  },
  {
    "__docId__": 421,
    "kind": "testFile",
    "name": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/reporting_activities.spec.ts",
    "content": "import 'mocha';\n\nimport { expect } from '@integration/testing-tools';\nimport { StageManager } from '@serenity-js/core';\nimport {\n    ActivityRelatedArtifactArchived,\n    ActivityRelatedArtifactGenerated,\n    ArtifactArchived,\n    ArtifactGenerated,\n    SceneFinished,\n    SceneStarts,\n    TaskFinished,\n    TaskStarts,\n    TestRunFinishes,\n} from '@serenity-js/core/lib/events';\nimport { Path } from '@serenity-js/core/lib/io';\nimport { ActivityDetails, ExecutionSuccessful, JSONData, Name, Photo, TextData } from '@serenity-js/core/lib/model';\nimport * as sinon from 'sinon';\n\nimport { SerenityBDDReporter } from '../../../../../src/stage';\nimport { SerenityBDDReport } from '../../../../../src/stage/crew/serenity-bdd-reporter/SerenityBDDJsonSchema';\nimport { given } from '../../given';\nimport { defaultCardScenario, photo } from '../../samples';\nimport { create } from '../create';\n\ndescribe('SerenityBDDReporter', () => {\n\n    let stageManager: sinon.SinonStubbedInstance<StageManager>,\n        reporter: SerenityBDDReporter;\n\n    beforeEach(() => {\n        const env = create();\n\n        stageManager    = env.stageManager;\n        reporter        = env.reporter;\n    });\n\n    describe('reports the activities that took place during scenario execution:', () => {\n\n        /**\n         * @test {SerenityBDDReporter}\n         * @test {SceneStarts}\n         * @test {TaskStarts}\n         * @test {TaskFinished}\n         * @test {ExecutionSuccessful}\n         * @test {SceneFinished}\n         * @test {TestRunFinishes}\n         */\n        it('reports the outcome of a single activity', () => {\n            const pickACard = new ActivityDetails(new Name('Pick the default credit card'));\n\n            given(reporter).isNotifiedOfFollowingEvents(\n                new SceneStarts(defaultCardScenario),\n                    new TaskStarts(pickACard),\n                    new TaskFinished(pickACard, new ExecutionSuccessful()),\n                new SceneFinished(defaultCardScenario, new ExecutionSuccessful()),\n                new TestRunFinishes(),\n            );\n\n            const report: SerenityBDDReport = stageManager.notifyOf.firstCall.lastArg.artifact.map(_ => _);\n\n            expect(report.testSteps).to.have.lengthOf(1);\n            expect(report.testSteps[0].description).to.equal(pickACard.name.value);\n            expect(report.testSteps[0].result).to.equal('SUCCESS');\n        });\n\n        /**\n         * @test {SerenityBDDReporter}\n         * @test {SceneStarts}\n         * @test {TaskStarts}\n         * @test {TaskFinished}\n         * @test {ExecutionSuccessful}\n         * @test {SceneFinished}\n         * @test {TestRunFinishes}\n         */\n        it('reports the outcome of a sequence of several activities', () => {\n            const pickACard   = new ActivityDetails(new Name('Pick the default credit card'));\n            const makePayment = new ActivityDetails(new Name('Make the payment'));\n\n            given(reporter).isNotifiedOfFollowingEvents(\n                new SceneStarts(defaultCardScenario),\n                    new TaskStarts(pickACard),\n                    new TaskFinished(pickACard, new ExecutionSuccessful()),\n                    new TaskStarts(makePayment),\n                    new TaskFinished(makePayment, new ExecutionSuccessful()),\n                new SceneFinished(defaultCardScenario, new ExecutionSuccessful()),\n                new TestRunFinishes(),\n            );\n\n            const report: SerenityBDDReport = stageManager.notifyOf.firstCall.lastArg.artifact.map(_ => _);\n\n            expect(report.testSteps).to.have.lengthOf(2);\n            expect(report.testSteps[0].description).to.equal(pickACard.name.value);\n            expect(report.testSteps[0].result).to.equal('SUCCESS');\n            expect(report.testSteps[1].description).to.equal(makePayment.name.value);\n            expect(report.testSteps[1].result).to.equal('SUCCESS');\n        });\n\n        /**\n         * @test {SerenityBDDReporter}\n         * @test {SceneStarts}\n         * @test {TaskStarts}\n         * @test {TaskFinished}\n         * @test {ExecutionSuccessful}\n         * @test {SceneFinished}\n         * @test {TestRunFinishes}\n         */\n        it('reports the outcome of nested activities', () => {\n            const pickACard = new ActivityDetails(new Name('Pick the default credit card'));\n            const viewListOfCards = new ActivityDetails(new Name('View the list of available cards'));\n\n            given(reporter).isNotifiedOfFollowingEvents(\n                new SceneStarts(defaultCardScenario),\n                    new TaskStarts(pickACard),\n                        new TaskStarts(viewListOfCards),\n                        new TaskFinished(viewListOfCards, new ExecutionSuccessful()),\n                    new TaskFinished(pickACard, new ExecutionSuccessful()),\n                new SceneFinished(defaultCardScenario, new ExecutionSuccessful()),\n                new TestRunFinishes(),\n            );\n\n            const report: SerenityBDDReport = stageManager.notifyOf.firstCall.lastArg.artifact.map(_ => _);\n\n            expect(report.testSteps).to.have.lengthOf(1);\n            expect(report.testSteps[0].children).to.have.lengthOf(1);\n            expect(report.testSteps[0].children[0].description).to.equal(viewListOfCards.name.value);\n            expect(report.testSteps[0].children[0].result).to.equal('SUCCESS');\n        });\n    });\n\n    describe('order of events', () => {\n\n        /**\n         * @test {SerenityBDDReporter}\n         * @test {SceneStarts}\n         * @test {TaskStarts}\n         * @test {ArtifactGenerated}\n         * @test {TaskFinished}\n         * @test {ExecutionSuccessful}\n         * @test {SceneFinished}\n         * @test {TestRunFinishes}\n         */\n        it('records the events in a correct order', () => {\n            const pickACard = new ActivityDetails(new Name('Pick the default credit card'));\n\n            given(reporter).isNotifiedOfFollowingEvents(\n                new SceneStarts(defaultCardScenario),\n                    new TaskStarts(pickACard),\n                        new ActivityRelatedArtifactGenerated(pickACard, new Name('photo1'), photo),\n                        new ActivityRelatedArtifactArchived(pickACard, new Name('photo1'), Photo, new Path('target/site/serenity/photo1.png')),\n                    new TaskFinished(pickACard, new ExecutionSuccessful()),\n                        new ActivityRelatedArtifactGenerated(pickACard, new Name('photo2'), photo),\n                        new ActivityRelatedArtifactArchived(pickACard, new Name('photo2'), Photo, new Path('target/site/serenity/photo2.png')),\n                new SceneFinished(defaultCardScenario, new ExecutionSuccessful()),\n                new TestRunFinishes(),\n            );\n\n            const report: SerenityBDDReport = stageManager.notifyOf.firstCall.lastArg.artifact.map(_ => _);\n\n            expect(report.testSteps).to.have.lengthOf(1);\n            expect(report.testSteps[0].screenshots).to.deep.equal([\n                { screenshot: 'photo1.png'},\n                { screenshot: 'photo2.png'},\n            ]);\n        });\n\n        /**\n         * @test {SerenityBDDReporter}\n         * @test {SceneStarts}\n         * @test {TaskStarts}\n         * @test {TaskFinished}\n         * @test {ExecutionSuccessful}\n         * @test {SceneFinished}\n         * @test {TestRunFinishes}\n         */\n        it('records the order of test steps so that the Serenity BDD reporter can display the reportData in the correct context', () => {\n            const\n                pickACard   = new ActivityDetails(new Name('Pick a credit card')),\n                makePayment = new ActivityDetails(new Name('Make a payment'));\n\n            given(reporter).isNotifiedOfFollowingEvents(\n                new SceneStarts(defaultCardScenario),\n                    new TaskStarts(pickACard),\n                        new ArtifactGenerated(new Name('pick a card message'), JSONData.fromJSON({ card: 'default' })),\n                        new ArtifactArchived(new Name('pick a card message'), JSONData, new Path('target/site/serenity/pick-a-card-message-md5hash.json')),\n                    new TaskFinished(pickACard, new ExecutionSuccessful()),\n                    new TaskStarts(makePayment),\n                        new ArtifactGenerated(new Name('make a payment message'), JSONData.fromJSON({ amount: '£42' })),\n                        new ArtifactArchived(new Name('make a payment message'), JSONData, new Path('target/site/serenity/make-a-payment-message-md5hash.json')),\n                        new ArtifactGenerated(new Name('server log'), TextData.fromJSON({ contentType: 'text/plain', data: 'received payment request' })),\n                    new TaskFinished(makePayment, new ExecutionSuccessful()),\n                new SceneFinished(defaultCardScenario, new ExecutionSuccessful()),\n                new TestRunFinishes(),\n            );\n\n            const report: SerenityBDDReport = stageManager.notifyOf.firstCall.lastArg.artifact.map(_ => _);\n\n            expect(report.testSteps).to.have.lengthOf(2);\n            expect(report.testSteps[0].number).to.equal(1);\n            expect(report.testSteps[0].reportData[0].title).to.equal('pick a card message');\n            expect(report.testSteps[0].reportData[0].contents).to.equal('{\\n    \"card\": \"default\"\\n}');\n\n            expect(report.testSteps[1].number).to.equal(2);\n\n            expect(report.testSteps[1].reportData[0].title).to.equal('make a payment message');\n            expect(report.testSteps[1].reportData[0].contents).to.deep.equal('{\\n    \\\"amount\\\": \\\"£42\\\"\\n}');\n\n            expect(report.testSteps[1].reportData[1].title).to.equal('server log');\n            expect(report.testSteps[1].reportData[1].contents).to.deep.equal('received payment request');\n        });\n    });\n\n    describe('artifacts', () => {\n\n        /**\n         * @test {SerenityBDDReporter}\n         * @test {SceneStarts}\n         * @test {TaskStarts}\n         * @test {ArtifactGenerated}\n         * @test {TaskFinished}\n         * @test {ExecutionSuccessful}\n         * @test {SceneFinished}\n         * @test {TestRunFinishes}\n         */\n        it('records the arbitrary JSON data emitted during the interaction', () => {\n            const pickACard = new ActivityDetails(new Name('Pick the default credit card'));\n\n            given(reporter).isNotifiedOfFollowingEvents(\n                new SceneStarts(defaultCardScenario),\n                new TaskStarts(pickACard),\n                new ActivityRelatedArtifactGenerated(pickACard, new Name('photo1'), photo),\n                new ActivityRelatedArtifactArchived(pickACard, new Name('photo1'), Photo, new Path('target/site/serenity/photo1.png')),\n                new TaskFinished(pickACard, new ExecutionSuccessful()),\n                new ActivityRelatedArtifactGenerated(pickACard, new Name('photo2'), photo),\n                new ActivityRelatedArtifactArchived(pickACard, new Name('photo2'), Photo, new Path('target/site/serenity/photo2.png')),\n                new SceneFinished(defaultCardScenario, new ExecutionSuccessful()),\n                new TestRunFinishes(),\n            );\n\n            const report: SerenityBDDReport = stageManager.notifyOf.firstCall.lastArg.artifact.map(_ => _);\n\n            expect(report.testSteps).to.have.lengthOf(1);\n            expect(report.testSteps[0].screenshots).to.deep.equal([\n                { screenshot: 'photo1.png'},\n                { screenshot: 'photo2.png'},\n            ]);\n        });\n    });\n});\n",
    "static": true,
    "longname": "/home/travis/build/serenity-js/serenity-js/packages/serenity-bdd/spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/reporting_activities.spec.ts",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 422,
    "kind": "test",
    "name": "describe15",
    "testId": 15,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/reporting_activities.spec.ts",
    "testDepth": 0,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/reporting_activities.spec.ts~describe15",
    "access": null,
    "description": "SerenityBDDReporter",
    "lineNumber": 26
  },
  {
    "__docId__": 423,
    "kind": "test",
    "name": "describe16",
    "testId": 16,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/reporting_activities.spec.ts~describe15",
    "testDepth": 1,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/reporting_activities.spec.ts~describe15.describe16",
    "access": null,
    "description": "reports the activities that took place during scenario execution:",
    "lineNumber": 38
  },
  {
    "__docId__": 424,
    "kind": "test",
    "name": "it17",
    "testId": 17,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/reporting_activities.spec.ts~describe15.describe16",
    "testDepth": 2,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/reporting_activities.spec.ts~describe15.describe16.it17",
    "access": null,
    "description": "reports the outcome of a single activity",
    "lineNumber": 49,
    "testTargets": [
      "SerenityBDDReporter",
      "SceneStarts",
      "TaskStarts",
      "TaskFinished",
      "ExecutionSuccessful",
      "SceneFinished",
      "TestRunFinishes"
    ]
  },
  {
    "__docId__": 425,
    "kind": "test",
    "name": "it18",
    "testId": 18,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/reporting_activities.spec.ts~describe15.describe16",
    "testDepth": 2,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/reporting_activities.spec.ts~describe15.describe16.it18",
    "access": null,
    "description": "reports the outcome of a sequence of several activities",
    "lineNumber": 76,
    "testTargets": [
      "SerenityBDDReporter",
      "SceneStarts",
      "TaskStarts",
      "TaskFinished",
      "ExecutionSuccessful",
      "SceneFinished",
      "TestRunFinishes"
    ]
  },
  {
    "__docId__": 426,
    "kind": "test",
    "name": "it19",
    "testId": 19,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/reporting_activities.spec.ts~describe15.describe16",
    "testDepth": 2,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/reporting_activities.spec.ts~describe15.describe16.it19",
    "access": null,
    "description": "reports the outcome of nested activities",
    "lineNumber": 108,
    "testTargets": [
      "SerenityBDDReporter",
      "SceneStarts",
      "TaskStarts",
      "TaskFinished",
      "ExecutionSuccessful",
      "SceneFinished",
      "TestRunFinishes"
    ]
  },
  {
    "__docId__": 427,
    "kind": "test",
    "name": "describe20",
    "testId": 20,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/reporting_activities.spec.ts~describe15",
    "testDepth": 1,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/reporting_activities.spec.ts~describe15.describe20",
    "access": null,
    "description": "order of events",
    "lineNumber": 131
  },
  {
    "__docId__": 428,
    "kind": "test",
    "name": "it21",
    "testId": 21,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/reporting_activities.spec.ts~describe15.describe20",
    "testDepth": 2,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/reporting_activities.spec.ts~describe15.describe20.it21",
    "access": null,
    "description": "records the events in a correct order",
    "lineNumber": 143,
    "testTargets": [
      "SerenityBDDReporter",
      "SceneStarts",
      "TaskStarts",
      "ArtifactGenerated",
      "TaskFinished",
      "ExecutionSuccessful",
      "SceneFinished",
      "TestRunFinishes"
    ]
  },
  {
    "__docId__": 429,
    "kind": "test",
    "name": "it22",
    "testId": 22,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/reporting_activities.spec.ts~describe15.describe20",
    "testDepth": 2,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/reporting_activities.spec.ts~describe15.describe20.it22",
    "access": null,
    "description": "records the order of test steps so that the Serenity BDD reporter can display the reportData in the correct context",
    "lineNumber": 176,
    "testTargets": [
      "SerenityBDDReporter",
      "SceneStarts",
      "TaskStarts",
      "TaskFinished",
      "ExecutionSuccessful",
      "SceneFinished",
      "TestRunFinishes"
    ]
  },
  {
    "__docId__": 430,
    "kind": "test",
    "name": "describe23",
    "testId": 23,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/reporting_activities.spec.ts~describe15",
    "testDepth": 1,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/reporting_activities.spec.ts~describe15.describe23",
    "access": null,
    "description": "artifacts",
    "lineNumber": 213
  },
  {
    "__docId__": 431,
    "kind": "test",
    "name": "it24",
    "testId": 24,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/reporting_activities.spec.ts~describe15.describe23",
    "testDepth": 2,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/reporting_activities.spec.ts~describe15.describe23.it24",
    "access": null,
    "description": "records the arbitrary JSON data emitted during the interaction",
    "lineNumber": 225,
    "testTargets": [
      "SerenityBDDReporter",
      "SceneStarts",
      "TaskStarts",
      "ArtifactGenerated",
      "TaskFinished",
      "ExecutionSuccessful",
      "SceneFinished",
      "TestRunFinishes"
    ]
  },
  {
    "__docId__": 432,
    "kind": "testFile",
    "name": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/reporting_scene_sequences.spec.ts",
    "content": "import 'mocha';\n\nimport { expect } from '@integration/testing-tools';\nimport { StageManager } from '@serenity-js/core';\nimport { SceneFinished, SceneParametersDetected, SceneSequenceDetected, SceneStarts, SceneTemplateDetected, TestRunFinishes } from '@serenity-js/core/lib/events';\nimport { FileSystemLocation, Path } from '@serenity-js/core/lib/io';\nimport { Category, Description, ExecutionFailedWithError, ExecutionSuccessful, Name, ScenarioDetails, ScenarioParameters } from '@serenity-js/core/lib/model';\nimport * as sinon from 'sinon';\n\nimport { SerenityBDDReporter } from '../../../../../src/stage';\nimport { SerenityBDDReport } from '../../../../../src/stage/crew/serenity-bdd-reporter/SerenityBDDJsonSchema';\nimport { given } from '../../given';\nimport { create } from '../create';\n\ndescribe('SerenityBDDReporter', () => {\n\n    let stageManager: sinon.SinonStubbedInstance<StageManager>,\n        reporter: SerenityBDDReporter;\n\n    beforeEach(() => {\n        const env = create();\n\n        stageManager    = env.stageManager;\n        reporter        = env.reporter;\n    });\n\n    // see examples/cucumber/features/reporting_results/reports_scenario_outlines.feature for more context\n    const\n        category = new Category('Reporting results'),\n        name     = new Name('Reports scenario outlines'),\n        path     = new Path(`reporting_results/reports_scenario_outlines.feature`),\n        template = new Description(`\n            When <Developer> makes a contribution of:\n              | value      |\n              | time       |\n              | talent     |\n              | great code |\n            Then they help bring serenity to fellow devs\n        `),\n        sequence = new ScenarioDetails(name, category, new FileSystemLocation(\n            path,\n            7,\n        )),\n        scenario1 = new ScenarioDetails(name, category, new FileSystemLocation(\n            path,\n            25,\n        )),\n        scenario2 = new ScenarioDetails(name, category, new FileSystemLocation(\n            path,\n            26,\n        ))\n    ;\n\n    /**\n     * @test {SerenityBDDReporter}\n     * @test {SceneSequenceDetected}\n     * @test {SceneTemplateDetected}\n     * @test {SceneParametersDetected}\n     * @test {ScenarioParameters}\n     * @test {SceneStarts}\n     * @test {SceneFinished}\n     * @test {ExecutionSuccessful}\n     * @test {TestRunFinishes}\n     */\n    it('captures information about a sequence of scenes (2 scenes in a sequence)', () => {\n        given(reporter).isNotifiedOfFollowingEvents(\n            new SceneSequenceDetected(sequence),\n                new SceneTemplateDetected(template),\n                new SceneParametersDetected(\n                    scenario1,\n                    new ScenarioParameters(\n                        new Name('Serenity/JS contributors'),\n                        new Description(`Some of the people who have contributed their time and talent to the Serenity/JS project`),\n                        { Developer: 'jan-molak', Twitter_Handle: '@JanMolak' },\n                    ),\n                ),\n                new SceneStarts(scenario1),\n                new SceneFinished(scenario1, new ExecutionSuccessful()),\n            new SceneSequenceDetected(sequence),\n                new SceneTemplateDetected(template),\n                new SceneParametersDetected(\n                    scenario2,\n                    new ScenarioParameters(\n                        new Name('Serenity/JS contributors'),\n                        new Description(`Some of the people who have contributed their time and talent to the Serenity/JS project`),\n                        { Developer: 'wakaleo', Twitter_Handle: '@wakaleo' },\n                    ),\n                ),\n                new SceneStarts(scenario2),\n                new SceneFinished(scenario2, new ExecutionSuccessful()),\n            new TestRunFinishes(),\n        );\n\n        const report: SerenityBDDReport = stageManager.notifyOf.firstCall.lastArg.artifact.map(_ => _);\n\n        expect(report.name).to.equal(name.value);\n        expect(report.dataTable).to.exist;  // tslint:disable-line:no-unused-expression\n        expect(report.dataTable.scenarioOutline).to.equal(template.value);\n        expect(report.dataTable.headers).to.deep.equal([\n            'Developer',\n            'Twitter_Handle',\n        ]);\n\n        expect(report.dataTable.dataSetDescriptors).to.deep.equal([{\n            startRow: 0,\n            rowCount: 2,\n            name: 'Serenity/JS contributors',\n            description: 'Some of the people who have contributed their time and talent to the Serenity/JS project',\n        }]);\n\n        expect(report.dataTable.rows).to.deep.equal([\n            { values: [ 'jan-molak', '@JanMolak' ], result: 'SUCCESS' },\n            { values: [ 'wakaleo', '@wakaleo' ], result: 'SUCCESS' },\n        ]);\n\n        expect(report.testSteps).to.have.lengthOf(2);\n        expect(report.testSteps[0].description)\n            .to.equal(`${name.value} #1 - Developer: jan-molak, Twitter_Handle: @JanMolak`);\n\n        expect(report.testSteps[1].description)\n            .to.equal(`${name.value} #2 - Developer: wakaleo, Twitter_Handle: @wakaleo`);\n    });\n\n    /**\n     * @test {SerenityBDDReporter}\n     * @test {SceneSequenceDetected}\n     * @test {SceneTemplateDetected}\n     * @test {SceneParametersDetected}\n     * @test {ScenarioParameters}\n     * @test {SceneStarts}\n     * @test {SceneFinished}\n     * @test {ExecutionFailedWithError}\n     * @test {ExecutionSuccessful}\n     * @test {TestRunFinishes}\n     */\n    it('determines the result of the sequence based on the worst result of the contributing scenarios', () => {\n        given(reporter).isNotifiedOfFollowingEvents(\n            new SceneSequenceDetected(sequence),\n                new SceneTemplateDetected(template),\n                new SceneParametersDetected(\n                    scenario1,\n                    new ScenarioParameters(\n                        new Name('Serenity/JS contributors'),\n                        new Description(`Some of the people who have contributed their time and talent to the Serenity/JS project`),\n                        { Developer: 'jan-molak', Twitter_Handle: '@JanMolak' },\n                    ),\n                ),\n                new SceneStarts(scenario1),\n                new SceneFinished(scenario1, new ExecutionFailedWithError(new Error('Something happened'))),\n\n            new SceneSequenceDetected(sequence),\n                new SceneTemplateDetected(template),\n                new SceneParametersDetected(\n                    scenario2,\n                    new ScenarioParameters(\n                        new Name('Serenity/JS contributors'),\n                        new Description(`Some of the people who have contributed their time and talent to the Serenity/JS project`),\n                        { Developer: 'wakaleo', Twitter_Handle: '@wakaleo' },\n                    ),\n                ),\n                new SceneStarts(scenario2),\n                new SceneFinished(scenario2, new ExecutionSuccessful()),\n            new TestRunFinishes(),\n        );\n\n        const report: SerenityBDDReport = stageManager.notifyOf.firstCall.lastArg.artifact.map(_ => _);\n\n        expect(report.dataTable.rows).to.deep.equal([\n            { values: [ 'jan-molak', '@JanMolak' ], result: 'ERROR' },\n            { values: [ 'wakaleo', '@wakaleo' ], result: 'SUCCESS' },\n        ]);\n\n        expect(report.testSteps).to.have.lengthOf(2);\n        expect(report.testSteps[0].description)\n            .to.equal(`${name.value} #1 - Developer: jan-molak, Twitter_Handle: @JanMolak`);\n        // todo: check for error somewhere here\n        // todo: map well map the main report\n\n        expect(report.testSteps[1].description)\n            .to.equal(`${name.value} #2 - Developer: wakaleo, Twitter_Handle: @wakaleo`);\n    });\n});\n",
    "static": true,
    "longname": "/home/travis/build/serenity-js/serenity-js/packages/serenity-bdd/spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/reporting_scene_sequences.spec.ts",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 433,
    "kind": "test",
    "name": "describe25",
    "testId": 25,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/reporting_scene_sequences.spec.ts",
    "testDepth": 0,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/reporting_scene_sequences.spec.ts~describe25",
    "access": null,
    "description": "SerenityBDDReporter",
    "lineNumber": 15
  },
  {
    "__docId__": 434,
    "kind": "test",
    "name": "it26",
    "testId": 26,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/reporting_scene_sequences.spec.ts~describe25",
    "testDepth": 1,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/reporting_scene_sequences.spec.ts~describe25.it26",
    "access": null,
    "description": "captures information about a sequence of scenes (2 scenes in a sequence)",
    "lineNumber": 65,
    "testTargets": [
      "SerenityBDDReporter",
      "SceneSequenceDetected",
      "SceneTemplateDetected",
      "SceneParametersDetected",
      "ScenarioParameters",
      "SceneStarts",
      "SceneFinished",
      "ExecutionSuccessful",
      "TestRunFinishes"
    ]
  },
  {
    "__docId__": 435,
    "kind": "test",
    "name": "it27",
    "testId": 27,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/reporting_scene_sequences.spec.ts~describe25",
    "testDepth": 1,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/reporting_scene_sequences.spec.ts~describe25.it27",
    "access": null,
    "description": "determines the result of the sequence based on the worst result of the contributing scenarios",
    "lineNumber": 136,
    "testTargets": [
      "SerenityBDDReporter",
      "SceneSequenceDetected",
      "SceneTemplateDetected",
      "SceneParametersDetected",
      "ScenarioParameters",
      "SceneStarts",
      "SceneFinished",
      "ExecutionFailedWithError",
      "ExecutionSuccessful",
      "TestRunFinishes"
    ]
  },
  {
    "__docId__": 436,
    "kind": "testFile",
    "name": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts",
    "content": "import 'mocha';\n\nimport { expect } from '@integration/testing-tools';\nimport { StageManager } from '@serenity-js/core';\nimport { SceneFinished, SceneStarts, SceneTagged, TestRunFinishes } from '@serenity-js/core/lib/events';\nimport { ArbitraryTag, BrowserTag, CapabilityTag, ContextTag, ExecutionSuccessful, FeatureTag, IssueTag, ManualTag, ThemeTag } from '@serenity-js/core/lib/model';\nimport * as sinon from 'sinon';\n\nimport { SerenityBDDReporter } from '../../../../../src/stage';\nimport { SerenityBDDReport } from '../../../../../src/stage/crew/serenity-bdd-reporter/SerenityBDDJsonSchema';\nimport { given } from '../../given';\nimport { defaultCardScenario } from '../../samples';\nimport { create } from '../create';\n\ndescribe('SerenityBDDReporter', () => {\n\n    let stageManager: sinon.SinonStubbedInstance<StageManager>,\n        reporter: SerenityBDDReporter;\n\n    beforeEach(() => {\n        const env = create();\n\n        stageManager    = env.stageManager;\n        reporter        = env.reporter;\n    });\n\n    describe('produces a SerenityBDDReport that', () => {\n\n        let report: SerenityBDDReport;\n\n        describe('can be tagged', () => {\n\n            beforeEach(() => {\n                given(reporter).isNotifiedOfFollowingEvents(\n                    new SceneStarts(defaultCardScenario),\n                );\n            });\n\n            describe('@manual', () => {\n\n                /**\n                 * @test {SerenityBDDReporter}\n                 * @test {SceneStarts}\n                 * @test {SceneFinished}\n                 * @test {TestRunFinishes}\n                 * @test {ExecutionSuccessful}\n                 */\n                it('is marked as automated (non-manual) by default', () => {\n                    given(reporter).isNotifiedOfFollowingEvents(\n                        new SceneFinished(defaultCardScenario, new ExecutionSuccessful()),\n                        new TestRunFinishes(),\n                    );\n\n                    report = stageManager.notifyOf.firstCall.lastArg.artifact.map(_ => _);\n\n                    expect(report.manual).to.equal(false);\n                });\n\n                /**\n                 * @test {SerenityBDDReporter}\n                 * @test {SceneStarts}\n                 * @test {SceneFinished}\n                 * @test {SceneTagged}\n                 * @test {TestRunFinishes}\n                 * @test {ExecutionSuccessful}\n                 * @test {ManualTag}\n                 */\n                it('can be optionally tagged as manual', () => {\n                    given(reporter).isNotifiedOfFollowingEvents(\n                        new SceneTagged(defaultCardScenario, new ManualTag()),\n                        new SceneFinished(defaultCardScenario, new ExecutionSuccessful()),\n                        new TestRunFinishes(),\n                    );\n\n                    report = stageManager.notifyOf.firstCall.lastArg.artifact.map(_ => _);\n\n                    expect(report.manual).to.equal(true);\n                    expect(report.tags).to.deep.include.members([{\n                        name: 'Manual',\n                        displayName: 'Manual',\n                        type: 'External Tests',\n                    }]);\n                });\n            });\n\n            describe('@issue', () => {\n\n                /**\n                 * @test {SerenityBDDReporter}\n                 * @test {SceneStarts}\n                 * @test {SceneFinished}\n                 * @test {SceneTagged}\n                 * @test {TestRunFinishes}\n                 * @test {ExecutionSuccessful}\n                 * @test {IssueTag}\n                 */\n                it('can be tagged with an issue number', () => {\n                    given(reporter).isNotifiedOfFollowingEvents(\n                        new SceneTagged(defaultCardScenario, new IssueTag('ABC-1234')),\n                        new SceneTagged(defaultCardScenario, new IssueTag('DEF-5678')),\n                        new SceneFinished(defaultCardScenario, new ExecutionSuccessful()),\n                        new TestRunFinishes(),\n                    );\n\n                    report = stageManager.notifyOf.firstCall.lastArg.artifact.map(_ => _);\n\n                    expect(report.tags).to.deep.include.members([{\n                        name:        'ABC-1234',\n                        displayName: 'ABC-1234',\n                        type:        'issue',\n                    }, {\n                        name:        'DEF-5678',\n                        displayName: 'DEF-5678',\n                        type:        'issue',\n                    }]);\n\n                    expect(report.issues).to.deep.equal([\n                        'ABC-1234',\n                        'DEF-5678',\n                    ]);\n\n                    expect(report.additionalIssues).to.deep.equal([\n                        'ABC-1234',\n                        'DEF-5678',\n                    ]);\n                });\n            });\n\n            describe('@arbitrary-tag', () => {\n\n                /**\n                 * @test {SerenityBDDReporter}\n                 * @test {SceneStarts}\n                 * @test {SceneFinished}\n                 * @test {SceneTagged}\n                 * @test {TestRunFinishes}\n                 * @test {ExecutionSuccessful}\n                 * @test {ArbitraryTag}\n                 */\n                it('can be tagged with an arbitrary tag', () => {\n                    given(reporter).isNotifiedOfFollowingEvents(\n                        new SceneTagged(defaultCardScenario, new ArbitraryTag('regression')),\n                        new SceneFinished(defaultCardScenario, new ExecutionSuccessful()),\n                        new TestRunFinishes(),\n                    );\n\n                    report = stageManager.notifyOf.firstCall.lastArg.artifact.map(_ => _);\n\n                    expect(report.tags).to.deep.include.members([{\n                        name:        'regression',\n                        displayName: 'regression',\n                        type:        'tag',\n                    }]);\n                });\n            });\n\n            describe('to indicate that a scenario', () => {\n\n                /**\n                 * @test {SerenityBDDReporter}\n                 * @test {SceneStarts}\n                 * @test {SceneFinished}\n                 * @test {SceneTagged}\n                 * @test {TestRunFinishes}\n                 * @test {ExecutionSuccessful}\n                 * @test {FeatureTag}\n                 */\n                it('belongs to a feature', () => {\n                    given(reporter).isNotifiedOfFollowingEvents(\n                        new SceneTagged(defaultCardScenario, new FeatureTag('Checkout')),\n                        new SceneFinished(defaultCardScenario, new ExecutionSuccessful()),\n                        new TestRunFinishes(),\n                    );\n\n                    report = stageManager.notifyOf.firstCall.lastArg.artifact.map(_ => _);\n\n                    expect(report.tags).to.deep.include.members([{\n                        name: 'Checkout',\n                        type: 'feature',\n                        displayName: 'Checkout',\n                    }]);\n\n                    expect(report.featureTag).to.deep.equal({\n                        name: 'Checkout',\n                        type: 'feature',\n                        displayName: 'Checkout',\n                    });\n                });\n\n                /**\n                 * @test {SerenityBDDReporter}\n                 * @test {SceneStarts}\n                 * @test {SceneFinished}\n                 * @test {SceneTagged}\n                 * @test {TestRunFinishes}\n                 * @test {ExecutionSuccessful}\n                 * @test {FeatureTag}\n                 * @test {CapabilityTag}\n                 */\n                it('belongs to a capability', () => {\n                    given(reporter).isNotifiedOfFollowingEvents(\n                        new SceneTagged(defaultCardScenario, new CapabilityTag('E-Commerce')),\n                        new SceneTagged(defaultCardScenario, new FeatureTag('Checkout')),\n                        new SceneFinished(defaultCardScenario, new ExecutionSuccessful()),\n                        new TestRunFinishes(),\n                    );\n\n                    report = stageManager.notifyOf.firstCall.lastArg.artifact.map(_ => _);\n\n                    expect(report.tags).to.deep.include.members([{\n                        name: 'E-Commerce',\n                        type: 'capability',\n                        displayName: 'E-Commerce',\n                    }, {\n                        name: 'E-Commerce/Checkout',\n                        type: 'feature',\n                        displayName: 'Checkout',\n                    }]);\n\n                    expect(report.featureTag).to.deep.equal({\n                        name: 'E-Commerce/Checkout',\n                        type: 'feature',\n                        displayName: 'Checkout',\n                    });\n                });\n\n                /**\n                 * @test {SerenityBDDReporter}\n                 * @test {SceneStarts}\n                 * @test {SceneFinished}\n                 * @test {SceneTagged}\n                 * @test {TestRunFinishes}\n                 * @test {ExecutionSuccessful}\n                 * @test {FeatureTag}\n                 * @test {CapabilityTag}\n                 * @test {ThemeTag}\n                 */\n                it('belongs to a theme', () => {\n                    given(reporter).isNotifiedOfFollowingEvents(\n                        new SceneTagged(defaultCardScenario, new ThemeTag('Digital')),\n                        new SceneTagged(defaultCardScenario, new CapabilityTag('E-Commerce')),\n                        new SceneTagged(defaultCardScenario, new FeatureTag('Checkout')),\n                        new SceneFinished(defaultCardScenario, new ExecutionSuccessful()),\n                        new TestRunFinishes(),\n                    );\n\n                    report = stageManager.notifyOf.firstCall.lastArg.artifact.map(_ => _);\n\n                    expect(report.tags).to.deep.include.members([{\n                        name: 'Digital',\n                        type: 'theme',\n                        displayName: 'Digital',\n                    }, {\n                        name: 'Digital/E-Commerce',\n                        type: 'capability',\n                        displayName: 'E-Commerce',\n                    }, {\n                        name: 'E-Commerce/Checkout',\n                        type: 'feature',\n                        displayName: 'Checkout',\n                    }]);\n\n                    expect(report.featureTag).to.deep.equal({\n                        name: 'E-Commerce/Checkout',\n                        type: 'feature',\n                        displayName: 'Checkout',\n                    });\n                });\n\n                describe('is executed in the context and', () => {\n\n                    /**\n                     * @test {SerenityBDDReporter}\n                     * @test {SceneStarts}\n                     * @test {SceneFinished}\n                     * @test {SceneTagged}\n                     * @test {TestRunFinishes}\n                     * @test {ExecutionSuccessful}\n                     * @test {BrowserTag}\n                     */\n                    it('indicates the web browser where the test was executed', () => {\n                        given(reporter).isNotifiedOfFollowingEvents(\n                            new SceneTagged(defaultCardScenario, new BrowserTag('chrome', '80.0.3987.87')),\n                            new SceneFinished(defaultCardScenario, new ExecutionSuccessful()),\n                            new TestRunFinishes(),\n                        );\n\n                        report = stageManager.notifyOf.firstCall.lastArg.artifact.map(_ => _);\n\n                        expect(report.context).to.equal('chrome');\n\n                        expect(report.tags).to.deep.include.members([{\n                            browserName: 'chrome',\n                            browserVersion: '80.0.3987.87',\n                            name: 'chrome 80.0.3987.87',\n                            displayName: 'chrome 80.0.3987.87',\n                            type: 'browser',\n                        }]);\n                    });\n\n                    /**\n                     * @test {SerenityBDDReporter}\n                     * @test {SceneStarts}\n                     * @test {SceneFinished}\n                     * @test {SceneTagged}\n                     * @test {TestRunFinishes}\n                     * @test {ExecutionSuccessful}\n                     * @test {ContextTag}\n                     */\n                    it('indicates the operating system where the test was executed', () => {\n                        given(reporter).isNotifiedOfFollowingEvents(\n                            new SceneTagged(defaultCardScenario, new ContextTag('iphone')),\n                            new SceneFinished(defaultCardScenario, new ExecutionSuccessful()),\n                            new TestRunFinishes(),\n                        );\n\n                        report = stageManager.notifyOf.firstCall.lastArg.artifact.map(_ => _);\n\n                        expect(report.context).to.equal('iphone');\n\n                        expect(report.tags).to.deep.include.members([{\n                            name: 'iphone',\n                            displayName: 'iphone',\n                            type: 'context',\n                        }]);\n                    });\n\n                    /**\n                     * @test {SerenityBDDReporter}\n                     * @test {SceneStarts}\n                     * @test {SceneFinished}\n                     * @test {SceneTagged}\n                     * @test {TestRunFinishes}\n                     * @test {ExecutionSuccessful}\n                     * @test {BrowserTag}\n                     * @test {ContextTag}\n                     */\n                    it('ensures that the user-specified context takes precedence over browser context', () => {\n                        given(reporter).isNotifiedOfFollowingEvents(\n                            new SceneTagged(defaultCardScenario, new BrowserTag('safari', '13.0.5')),\n                            new SceneTagged(defaultCardScenario, new ContextTag('iphone')),\n                            new SceneFinished(defaultCardScenario, new ExecutionSuccessful()),\n                            new TestRunFinishes(),\n                        );\n\n                        report = stageManager.notifyOf.firstCall.lastArg.artifact.map(_ => _);\n\n                        expect(report.context).to.equal('iphone');\n\n                        expect(report.tags).to.deep.include.members([{\n                            name: 'safari 13.0.5',\n                            displayName: 'safari 13.0.5',\n                            type: 'browser',\n                            browserName: 'safari',\n                            browserVersion: '13.0.5',\n                        }, {\n                            name: 'iphone',\n                            displayName: 'iphone',\n                            type: 'context',\n                        }]);\n                    });\n                });\n            });\n        });\n    });\n});\n",
    "static": true,
    "longname": "/home/travis/build/serenity-js/serenity-js/packages/serenity-bdd/spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 437,
    "kind": "test",
    "name": "describe28",
    "testId": 28,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts",
    "testDepth": 0,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts~describe28",
    "access": null,
    "description": "SerenityBDDReporter",
    "lineNumber": 15
  },
  {
    "__docId__": 438,
    "kind": "test",
    "name": "describe29",
    "testId": 29,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts~describe28",
    "testDepth": 1,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts~describe28.describe29",
    "access": null,
    "description": "produces a SerenityBDDReport that",
    "lineNumber": 27
  },
  {
    "__docId__": 439,
    "kind": "test",
    "name": "describe30",
    "testId": 30,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts~describe28.describe29",
    "testDepth": 2,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts~describe28.describe29.describe30",
    "access": null,
    "description": "can be tagged",
    "lineNumber": 31
  },
  {
    "__docId__": 440,
    "kind": "test",
    "name": "describe31",
    "testId": 31,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts~describe28.describe29.describe30",
    "testDepth": 3,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts~describe28.describe29.describe30.describe31",
    "access": null,
    "description": "@manual",
    "lineNumber": 39
  },
  {
    "__docId__": 441,
    "kind": "test",
    "name": "it32",
    "testId": 32,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts~describe28.describe29.describe30.describe31",
    "testDepth": 4,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts~describe28.describe29.describe30.describe31.it32",
    "access": null,
    "description": "is marked as automated (non-manual) by default",
    "lineNumber": 48,
    "testTargets": [
      "SerenityBDDReporter",
      "SceneStarts",
      "SceneFinished",
      "TestRunFinishes",
      "ExecutionSuccessful"
    ]
  },
  {
    "__docId__": 442,
    "kind": "test",
    "name": "it33",
    "testId": 33,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts~describe28.describe29.describe30.describe31",
    "testDepth": 4,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts~describe28.describe29.describe30.describe31.it33",
    "access": null,
    "description": "can be optionally tagged as manual",
    "lineNumber": 68,
    "testTargets": [
      "SerenityBDDReporter",
      "SceneStarts",
      "SceneFinished",
      "SceneTagged",
      "TestRunFinishes",
      "ExecutionSuccessful",
      "ManualTag"
    ]
  },
  {
    "__docId__": 443,
    "kind": "test",
    "name": "describe34",
    "testId": 34,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts~describe28.describe29.describe30",
    "testDepth": 3,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts~describe28.describe29.describe30.describe34",
    "access": null,
    "description": "@issue",
    "lineNumber": 86
  },
  {
    "__docId__": 444,
    "kind": "test",
    "name": "it35",
    "testId": 35,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts~describe28.describe29.describe30.describe34",
    "testDepth": 4,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts~describe28.describe29.describe30.describe34.it35",
    "access": null,
    "description": "can be tagged with an issue number",
    "lineNumber": 97,
    "testTargets": [
      "SerenityBDDReporter",
      "SceneStarts",
      "SceneFinished",
      "SceneTagged",
      "TestRunFinishes",
      "ExecutionSuccessful",
      "IssueTag"
    ]
  },
  {
    "__docId__": 445,
    "kind": "test",
    "name": "describe36",
    "testId": 36,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts~describe28.describe29.describe30",
    "testDepth": 3,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts~describe28.describe29.describe30.describe36",
    "access": null,
    "description": "@arbitrary-tag",
    "lineNumber": 129
  },
  {
    "__docId__": 446,
    "kind": "test",
    "name": "it37",
    "testId": 37,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts~describe28.describe29.describe30.describe36",
    "testDepth": 4,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts~describe28.describe29.describe30.describe36.it37",
    "access": null,
    "description": "can be tagged with an arbitrary tag",
    "lineNumber": 140,
    "testTargets": [
      "SerenityBDDReporter",
      "SceneStarts",
      "SceneFinished",
      "SceneTagged",
      "TestRunFinishes",
      "ExecutionSuccessful",
      "ArbitraryTag"
    ]
  },
  {
    "__docId__": 447,
    "kind": "test",
    "name": "describe38",
    "testId": 38,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts~describe28.describe29.describe30",
    "testDepth": 3,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts~describe28.describe29.describe30.describe38",
    "access": null,
    "description": "to indicate that a scenario",
    "lineNumber": 157
  },
  {
    "__docId__": 448,
    "kind": "test",
    "name": "it39",
    "testId": 39,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts~describe28.describe29.describe30.describe38",
    "testDepth": 4,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts~describe28.describe29.describe30.describe38.it39",
    "access": null,
    "description": "belongs to a feature",
    "lineNumber": 168,
    "testTargets": [
      "SerenityBDDReporter",
      "SceneStarts",
      "SceneFinished",
      "SceneTagged",
      "TestRunFinishes",
      "ExecutionSuccessful",
      "FeatureTag"
    ]
  },
  {
    "__docId__": 449,
    "kind": "test",
    "name": "it40",
    "testId": 40,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts~describe28.describe29.describe30.describe38",
    "testDepth": 4,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts~describe28.describe29.describe30.describe38.it40",
    "access": null,
    "description": "belongs to a capability",
    "lineNumber": 200,
    "testTargets": [
      "SerenityBDDReporter",
      "SceneStarts",
      "SceneFinished",
      "SceneTagged",
      "TestRunFinishes",
      "ExecutionSuccessful",
      "FeatureTag",
      "CapabilityTag"
    ]
  },
  {
    "__docId__": 450,
    "kind": "test",
    "name": "it41",
    "testId": 41,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts~describe28.describe29.describe30.describe38",
    "testDepth": 4,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts~describe28.describe29.describe30.describe38.it41",
    "access": null,
    "description": "belongs to a theme",
    "lineNumber": 238,
    "testTargets": [
      "SerenityBDDReporter",
      "SceneStarts",
      "SceneFinished",
      "SceneTagged",
      "TestRunFinishes",
      "ExecutionSuccessful",
      "FeatureTag",
      "CapabilityTag",
      "ThemeTag"
    ]
  },
  {
    "__docId__": 451,
    "kind": "test",
    "name": "describe42",
    "testId": 42,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts~describe28.describe29.describe30.describe38",
    "testDepth": 4,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts~describe28.describe29.describe30.describe38.describe42",
    "access": null,
    "description": "is executed in the context and",
    "lineNumber": 270
  },
  {
    "__docId__": 452,
    "kind": "test",
    "name": "it43",
    "testId": 43,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts~describe28.describe29.describe30.describe38.describe42",
    "testDepth": 5,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts~describe28.describe29.describe30.describe38.describe42.it43",
    "access": null,
    "description": "indicates the web browser where the test was executed",
    "lineNumber": 281,
    "testTargets": [
      "SerenityBDDReporter",
      "SceneStarts",
      "SceneFinished",
      "SceneTagged",
      "TestRunFinishes",
      "ExecutionSuccessful",
      "BrowserTag"
    ]
  },
  {
    "__docId__": 453,
    "kind": "test",
    "name": "it44",
    "testId": 44,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts~describe28.describe29.describe30.describe38.describe42",
    "testDepth": 5,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts~describe28.describe29.describe30.describe38.describe42.it44",
    "access": null,
    "description": "indicates the operating system where the test was executed",
    "lineNumber": 310,
    "testTargets": [
      "SerenityBDDReporter",
      "SceneStarts",
      "SceneFinished",
      "SceneTagged",
      "TestRunFinishes",
      "ExecutionSuccessful",
      "ContextTag"
    ]
  },
  {
    "__docId__": 454,
    "kind": "test",
    "name": "it45",
    "testId": 45,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts~describe28.describe29.describe30.describe38.describe42",
    "testDepth": 5,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts~describe28.describe29.describe30.describe38.describe42.it45",
    "access": null,
    "description": "ensures that the user-specified context takes precedence over browser context",
    "lineNumber": 338,
    "testTargets": [
      "SerenityBDDReporter",
      "SceneStarts",
      "SceneFinished",
      "SceneTagged",
      "TestRunFinishes",
      "ExecutionSuccessful",
      "BrowserTag",
      "ContextTag"
    ]
  },
  {
    "__docId__": 455,
    "kind": "testFile",
    "name": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts",
    "content": "import { expect } from '@integration/testing-tools';\nimport { AssertionError, ImplementationPendingError, Stage, StageManager, TestCompromisedError } from '@serenity-js/core';\nimport { ArtifactGenerated, SceneFinished, SceneStarts, TestRunFinishes, TestRunnerDetected } from '@serenity-js/core/lib/events';\nimport { FileSystemLocation, Path } from '@serenity-js/core/lib/io';\nimport {\n    Category,\n    Duration,\n    ExecutionCompromised,\n    ExecutionFailedWithAssertionError,\n    ExecutionFailedWithError,\n    ExecutionIgnored,\n    ExecutionSkipped,\n    ExecutionSuccessful,\n    ImplementationPending,\n    JSONData,\n    Name,\n    ScenarioDetails,\n    TestReport,\n    Timestamp,\n} from '@serenity-js/core/lib/model';\nimport 'mocha';\n\nimport * as sinon from 'sinon';\nimport { SerenityBDDReporter } from '../../../../src/stage';\nimport { SerenityBDDReport } from '../../../../src/stage/crew/serenity-bdd-reporter/SerenityBDDJsonSchema';\nimport { given } from '../given';\nimport { create } from './create';\n\ndescribe('SerenityBDDReporter', () => {\n\n    const\n        startTime = Timestamp.fromJSON('2018-05-25T00:00:00.123Z'),\n        scenarioDuration = Duration.ofMilliseconds(142);\n\n    const defaultCardScenario = new ScenarioDetails(\n        new Name('Paying with a default card'),\n        new Category('Online Checkout'),\n        new FileSystemLocation(\n            new Path(`payments/checkout.feature`),\n        ),\n    );\n\n    const voucherScenario = new ScenarioDetails(\n        new Name('Paying with a voucher'),\n        new Category('Online Checkout'),\n        new FileSystemLocation(\n            new Path(`payments/checkout.feature`),\n        ),\n    );\n\n    let stage: Stage,\n        stageManager: sinon.SinonStubbedInstance<StageManager>,\n        reporter: SerenityBDDReporter;\n\n    beforeEach(() => {\n        const env = create();\n\n        stageManager    = env.stageManager;\n        stage           = env.stage;\n        reporter        = env.reporter;\n    });\n\n    describe('generates a SerenityBDDReport Artifact that', () => {\n\n        let artifact: JSONData;\n\n        beforeEach(() => {\n            given(reporter).isNotifiedOfFollowingEvents(\n                new SceneStarts(defaultCardScenario),\n                new SceneFinished(defaultCardScenario, new ExecutionSuccessful()),\n                new TestRunFinishes(),\n            );\n\n            expect(stageManager.notifyOf.callCount).to.equal(1);\n\n            artifact = stageManager.notifyOf.firstCall.lastArg.artifact;\n        });\n\n        /**\n         * @test {SerenityBDDReporter}\n         * @test {SceneStarts}\n         * @test {SceneFinished}\n         * @test {ExecutionSuccessful}\n         * @test {TestRunFinishes}\n         */\n        it('is a valid artifact', () => {\n            expect(artifact).to.be.instanceOf(TestReport);\n        });\n    });\n\n    describe('emits an ArtifactGenerated event that', () => {\n\n        /**\n         * @test {SerenityBDDReporter}\n         * @test {SceneStarts}\n         * @test {SceneFinished}\n         * @test {TestRunFinishes}\n         * @test {ExecutionSuccessful}\n         * @test {ExecutionIgnored}\n         */\n        it('is separate for each scenario', () => {\n            given(reporter).isNotifiedOfFollowingEvents(\n                new SceneStarts(defaultCardScenario),\n                new SceneFinished(defaultCardScenario, new ExecutionSuccessful()),\n                new SceneStarts(voucherScenario),\n                new SceneFinished(voucherScenario, new ExecutionIgnored()),\n                new TestRunFinishes(),\n            );\n\n            expect(stageManager.notifyOf.callCount).to.equal(2);\n\n            const\n                event1: ArtifactGenerated = stageManager.notifyOf.firstCall.lastArg,\n                event2: ArtifactGenerated = stageManager.notifyOf.secondCall.lastArg;\n\n            expect(event1.artifact.map(_ => _).name).to.equal(defaultCardScenario.name.value);\n\n            expect(event2.artifact.map(_ => _).name).to.equal(voucherScenario.name.value);\n        });\n    });\n\n    describe('produces a SerenityBDDReport that', () => {\n\n        let report: SerenityBDDReport;\n\n        describe('at the scenario level', () => {\n\n            beforeEach(() => {\n                given(reporter).isNotifiedOfFollowingEvents(\n                    new SceneStarts(defaultCardScenario, startTime),\n                    new SceneFinished(defaultCardScenario, new ExecutionSuccessful(), startTime.plus(scenarioDuration)),\n                    new TestRunFinishes(),\n                );\n\n                report = stageManager.notifyOf.firstCall.lastArg.artifact.map(_ => _);\n            });\n\n            /**\n             * @test {SerenityBDDReporter}\n             * @test {SceneStarts}\n             * @test {SceneFinished}\n             * @test {TestRunFinishes}\n             * @test {ExecutionSuccessful}\n             */\n            it('contains the id of the scenario', () => {\n                expect(report.id).to.equal('online-checkout;paying-with-a-default-card');\n            });\n\n            /**\n             * @test {SerenityBDDReporter}\n             * @test {SceneStarts}\n             * @test {SceneFinished}\n             * @test {TestRunFinishes}\n             * @test {ExecutionSuccessful}\n             */\n            it('contains the name of the scenario', () => {\n                expect(report.name).to.equal(defaultCardScenario.name.value);\n                expect(report.title).to.equal(defaultCardScenario.name.value);\n            });\n\n            /**\n             * @test {SerenityBDDReporter}\n             * @test {SceneStarts}\n             * @test {SceneFinished}\n             * @test {TestRunFinishes}\n             * @test {ExecutionSuccessful}\n             */\n            it('contains the start time of the scenario', () => {\n                expect(report.startTime).to.equal(startTime.toMillisecondTimestamp());\n            });\n\n            /**\n             * @test {SerenityBDDReporter}\n             * @test {SceneStarts}\n             * @test {SceneFinished}\n             * @test {TestRunFinishes}\n             * @test {ExecutionSuccessful}\n             */\n            it('contains the duration of the scenario', () => {\n                expect(report.duration).to.equal(scenarioDuration.inMilliseconds());\n            });\n        });\n\n        describe('describes the result of scenario execution that', () => {\n\n            beforeEach(() => {\n                given(reporter).isNotifiedOfFollowingEvents(\n                    new SceneStarts(defaultCardScenario),\n                );\n            });\n\n            /**\n             * @test {SerenityBDDReporter}\n             * @test {SceneStarts}\n             * @test {SceneFinished}\n             * @test {TestRunFinishes}\n             * @test {ExecutionSuccessful}\n             */\n            it('has finished with success', () => {\n\n                given(reporter).isNotifiedOfFollowingEvents(\n                    new SceneFinished(defaultCardScenario, new ExecutionSuccessful()),\n                    new TestRunFinishes(),\n                );\n\n                report = stageManager.notifyOf.firstCall.lastArg.artifact.map(_ => _);\n\n                expect(report.result).to.equal('SUCCESS');\n            });\n\n            /**\n             * @test {SerenityBDDReporter}\n             * @test {SceneStarts}\n             * @test {SceneFinished}\n             * @test {TestRunFinishes}\n             * @test {ImplementationPending}\n             */\n            it('hasn\\'t been implemented yet', () => {\n\n                given(reporter).isNotifiedOfFollowingEvents(\n                    new SceneFinished(defaultCardScenario, new ImplementationPending(new ImplementationPendingError('method missing'))),\n                    new TestRunFinishes(),\n                );\n\n                report = stageManager.notifyOf.firstCall.lastArg.artifact.map(_ => _);\n\n                expect(report.result).to.equal('PENDING');\n            });\n\n            /**\n             * @test {SerenityBDDReporter}\n             * @test {SceneStarts}\n             * @test {SceneFinished}\n             * @test {TestRunFinishes}\n             * @test {ExecutionIgnored}\n             */\n            it('has been ignored', () => {\n\n                given(reporter).isNotifiedOfFollowingEvents(\n                    new SceneFinished(defaultCardScenario, new ExecutionIgnored()),\n                    new TestRunFinishes(),\n                );\n\n                report = stageManager.notifyOf.firstCall.lastArg.artifact.map(_ => _);\n\n                expect(report.result).to.equal('IGNORED');\n            });\n\n            /**\n             * @test {SerenityBDDReporter}\n             * @test {SceneStarts}\n             * @test {SceneFinished}\n             * @test {TestRunFinishes}\n             * @test {ExecutionSkipped}\n             */\n            it('has been skipped', () => {\n\n                given(reporter).isNotifiedOfFollowingEvents(\n                    new SceneFinished(defaultCardScenario, new ExecutionSkipped()),\n                    new TestRunFinishes(),\n                );\n\n                report = stageManager.notifyOf.firstCall.lastArg.artifact.map(_ => _);\n\n                expect(report.result).to.equal('SKIPPED');\n            });\n\n            /**\n             * @test {SerenityBDDReporter}\n             * @test {SceneStarts}\n             * @test {SceneFinished}\n             * @test {TestRunFinishes}\n             * @test {ExecutionFailedWithAssertionError}\n             */\n            it('has failed with an assertion error', () => {\n\n                const assertionError = new AssertionError('expected true to equal false', false, true);\n\n                given(reporter).isNotifiedOfFollowingEvents(\n                    new SceneFinished(defaultCardScenario, new ExecutionFailedWithAssertionError(assertionError)),\n                    new TestRunFinishes(),\n                );\n\n                report = stageManager.notifyOf.firstCall.lastArg.artifact.map(_ => _);\n\n                expect(report.result).to.equal('FAILURE');\n                expect(report.testFailureCause.errorType).to.equal('AssertionError');\n                expect(report.testFailureCause.message).to.equal('expected true to equal false');\n                expect(report.testFailureCause.stackTrace).to.be.an('array');\n            });\n\n            /**\n             * @test {SerenityBDDReporter}\n             * @test {SceneStarts}\n             * @test {SceneFinished}\n             * @test {TestRunFinishes}\n             * @test {TestCompromisedError}\n             * @test {ExecutionCompromised}\n             */\n            it('has been compromised', () => {\n\n                // const assertionError = new AssertionError('expected true to equal false', false, true);\n                const assertionError = new TestCompromisedError('expected true to equal false');\n\n                given(reporter).isNotifiedOfFollowingEvents(\n                    new SceneFinished(defaultCardScenario, new ExecutionCompromised(assertionError)),\n                    new TestRunFinishes(),\n                );\n\n                report = stageManager.notifyOf.firstCall.lastArg.artifact.map(_ => _);\n\n                expect(report.result).to.equal('COMPROMISED');\n                expect(report.testFailureCause.errorType).to.equal('TestCompromisedError');\n                expect(report.testFailureCause.message).to.equal('expected true to equal false');\n                expect(report.testFailureCause.stackTrace).to.be.an('array');\n            });\n\n            /**\n             * @test {SerenityBDDReporter}\n             * @test {SceneStarts}\n             * @test {SceneFinished}\n             * @test {TestRunFinishes}\n             * @test {ExecutionFailedWithError}\n             */\n            it('has failed with a non-assertion error', () => {\n                const error = new Error(\"We're sorry, something happened\");\n\n                error.stack = [\n                    \"Error: We're sorry, something happened\",\n                    '    at callFn (/fake/path/node_modules/mocha/lib/runnable.js:326:21)',\n                    '    at Test.Runnable.run (/fake/path/node_modules/mocha/lib/runnable.js:319:7)',\n                    // and so on\n                ].join('\\n');\n\n                given(reporter).isNotifiedOfFollowingEvents(\n                    new SceneFinished(defaultCardScenario, new ExecutionFailedWithError(error)),\n                    new TestRunFinishes(),\n                );\n\n                report = stageManager.notifyOf.firstCall.lastArg.artifact.map(_ => _);\n\n                expect(report.result).to.equal('ERROR');\n                expect(report.testFailureCause).to.deep.equal({\n                    errorType: 'Error',\n                    message: `We're sorry, something happened`,\n                    stackTrace: [ {\n                        declaringClass: '',\n                        fileName: '/fake/path/node_modules/mocha/lib/runnable.js',\n                        lineNumber: 326,\n                        methodName: 'callFn()',\n                    }, {\n                        declaringClass: '',\n                        fileName: '/fake/path/node_modules/mocha/lib/runnable.js',\n                        lineNumber: 319,\n                        methodName: 'Test.Runnable.run()',\n                    } ],\n                });\n            });\n\n            /**\n             * @test {SerenityBDDReporter}\n             * @test {SceneStarts}\n             * @test {SceneFinished}\n             * @test {TestRunFinishes}\n             * @test {ExecutionCompromised}\n             */\n            it('has been compromised', () => {\n                const dbError = new Error(`Could not connect to the database`);\n                dbError.stack = [\n                    'Error: Could not connect to the database',\n                    '    at callFn (/fake/path/node_modules/db-module/index.js:56:78)',\n                    // and so on\n                ].join('\\n');\n\n                const error = new TestCompromisedError(`Test database not deployed, no point running the test`, dbError);\n                error.stack = [\n                    'TestCompromisedError: Test database not deployed, no point running the test',\n                    '    at callFn (/fake/path/my-test/index.js:12:34)',\n                    // and so on\n                ].join('\\n');\n\n                given(reporter).isNotifiedOfFollowingEvents(\n                    new SceneFinished(defaultCardScenario, new ExecutionCompromised(error)),\n                    new TestRunFinishes(),\n                );\n\n                report = stageManager.notifyOf.firstCall.lastArg.artifact.map(_ => _);\n\n                expect(report.result).to.equal('COMPROMISED');\n                expect(report.testFailureCause).to.deep.equal({\n                    errorType: 'TestCompromisedError',\n                    message: `Test database not deployed, no point running the test`,\n                    stackTrace: [\n                        {\n                            declaringClass: '',\n                            fileName: '/fake/path/my-test/index.js',\n                            lineNumber: 12,\n                            methodName: 'callFn()',\n                        },\n                    ],\n                    rootCause: {\n                        errorType: `Error`,\n                        message: `Could not connect to the database`,\n                        stackTrace: [\n                            {\n                                declaringClass: '',\n                                fileName: '/fake/path/node_modules/db-module/index.js',\n                                lineNumber: 56,\n                                methodName: 'callFn()',\n                            },\n                        ],\n                    },\n                });\n            });\n        });\n\n        describe('indicates its execution context', () => {\n\n            beforeEach(() => {\n                given(reporter).isNotifiedOfFollowingEvents(\n                    new SceneStarts(defaultCardScenario),\n                );\n            });\n\n            /**\n             * @test {SerenityBDDReporter}\n             * @test {TestRunnerDetected}\n             * @test {SceneStarts}\n             * @test {SceneFinished}\n             * @test {TestRunFinishes}\n             * @test {ExecutionSuccessful}\n             */\n            it('specifies the test runner', () => {\n                given(reporter).isNotifiedOfFollowingEvents(\n                    new TestRunnerDetected(new Name('Cucumber')),\n                    new SceneFinished(defaultCardScenario, new ExecutionSuccessful()),\n                    new TestRunFinishes(),\n                );\n\n                report = stageManager.notifyOf.firstCall.lastArg.artifact.map(_ => _);\n\n                expect(report.testSource).to.equal('Cucumber');\n            });\n\n            /**\n             * @test {SerenityBDDReporter}\n             * @test {SceneStarts}\n             * @test {SceneFinished}\n             * @test {TestRunFinishes}\n             * @test {ExecutionSuccessful}\n             */\n            it('specifies the user story covered', () => {\n                given(reporter).isNotifiedOfFollowingEvents(\n                    new SceneFinished(defaultCardScenario, new ExecutionSuccessful()),\n                    new TestRunFinishes(),\n                );\n\n                report = stageManager.notifyOf.firstCall.lastArg.artifact.map(_ => _);\n\n                expect(report.userStory).to.deep.equal({\n                    id: 'online-checkout',\n                    storyName: 'Online Checkout',           // category name, a.k.a. feature name\n                    path: 'payments/checkout.feature',\n                    type: 'feature',\n                });\n            });\n\n            describe('reports information from the cucumber feature file', () => {\n\n                /** @test {SerenityBDDReporter} */\n                it('reports the scenario-level narrative');\n\n                /** @test {SerenityBDDReporter} */\n                it('reports the scenario-level background title');\n\n                /** @test {SerenityBDDReporter} */\n                it('reports the scenario-level background description');\n            });\n        });\n    });\n\n    describe('attachements', () => {\n        it('todo');\n        // todo:\n        // - screenshots\n        // - html source\n        // - http request/responses\n        // - arbitrary text data\n    });\n\n    describe('Error handling', () => {\n\n        // todo: node-cleanup\n        it('generates the report even when the test runner has crashed');\n    });\n});\n\n// todo: Does the scene need a correlation ID?\n// todo: 'ParametrisedSceneStarts'(scenedetails, parameters)\n",
    "static": true,
    "longname": "/home/travis/build/serenity-js/serenity-js/packages/serenity-bdd/spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 456,
    "kind": "test",
    "name": "describe46",
    "testId": 46,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts",
    "testDepth": 0,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe46",
    "access": null,
    "description": "SerenityBDDReporter",
    "lineNumber": 29
  },
  {
    "__docId__": 457,
    "kind": "test",
    "name": "describe47",
    "testId": 47,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe46",
    "testDepth": 1,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe46.describe47",
    "access": null,
    "description": "generates a SerenityBDDReport Artifact that",
    "lineNumber": 63
  },
  {
    "__docId__": 458,
    "kind": "test",
    "name": "it48",
    "testId": 48,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe46.describe47",
    "testDepth": 2,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe46.describe47.it48",
    "access": null,
    "description": "is a valid artifact",
    "lineNumber": 86,
    "testTargets": [
      "SerenityBDDReporter",
      "SceneStarts",
      "SceneFinished",
      "ExecutionSuccessful",
      "TestRunFinishes"
    ]
  },
  {
    "__docId__": 459,
    "kind": "test",
    "name": "describe49",
    "testId": 49,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe46",
    "testDepth": 1,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe46.describe49",
    "access": null,
    "description": "emits an ArtifactGenerated event that",
    "lineNumber": 91
  },
  {
    "__docId__": 460,
    "kind": "test",
    "name": "it50",
    "testId": 50,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe46.describe49",
    "testDepth": 2,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe46.describe49.it50",
    "access": null,
    "description": "is separate for each scenario",
    "lineNumber": 101,
    "testTargets": [
      "SerenityBDDReporter",
      "SceneStarts",
      "SceneFinished",
      "TestRunFinishes",
      "ExecutionSuccessful",
      "ExecutionIgnored"
    ]
  },
  {
    "__docId__": 461,
    "kind": "test",
    "name": "describe51",
    "testId": 51,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe46",
    "testDepth": 1,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe46.describe51",
    "access": null,
    "description": "produces a SerenityBDDReport that",
    "lineNumber": 122
  },
  {
    "__docId__": 462,
    "kind": "test",
    "name": "describe52",
    "testId": 52,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe46.describe51",
    "testDepth": 2,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe46.describe51.describe52",
    "access": null,
    "description": "at the scenario level",
    "lineNumber": 126
  },
  {
    "__docId__": 463,
    "kind": "test",
    "name": "it53",
    "testId": 53,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe46.describe51.describe52",
    "testDepth": 3,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe46.describe51.describe52.it53",
    "access": null,
    "description": "contains the id of the scenario",
    "lineNumber": 145,
    "testTargets": [
      "SerenityBDDReporter",
      "SceneStarts",
      "SceneFinished",
      "TestRunFinishes",
      "ExecutionSuccessful"
    ]
  },
  {
    "__docId__": 464,
    "kind": "test",
    "name": "it54",
    "testId": 54,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe46.describe51.describe52",
    "testDepth": 3,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe46.describe51.describe52.it54",
    "access": null,
    "description": "contains the name of the scenario",
    "lineNumber": 156,
    "testTargets": [
      "SerenityBDDReporter",
      "SceneStarts",
      "SceneFinished",
      "TestRunFinishes",
      "ExecutionSuccessful"
    ]
  },
  {
    "__docId__": 465,
    "kind": "test",
    "name": "it55",
    "testId": 55,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe46.describe51.describe52",
    "testDepth": 3,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe46.describe51.describe52.it55",
    "access": null,
    "description": "contains the start time of the scenario",
    "lineNumber": 168,
    "testTargets": [
      "SerenityBDDReporter",
      "SceneStarts",
      "SceneFinished",
      "TestRunFinishes",
      "ExecutionSuccessful"
    ]
  },
  {
    "__docId__": 466,
    "kind": "test",
    "name": "it56",
    "testId": 56,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe46.describe51.describe52",
    "testDepth": 3,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe46.describe51.describe52.it56",
    "access": null,
    "description": "contains the duration of the scenario",
    "lineNumber": 179,
    "testTargets": [
      "SerenityBDDReporter",
      "SceneStarts",
      "SceneFinished",
      "TestRunFinishes",
      "ExecutionSuccessful"
    ]
  },
  {
    "__docId__": 467,
    "kind": "test",
    "name": "describe57",
    "testId": 57,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe46.describe51",
    "testDepth": 2,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe46.describe51.describe57",
    "access": null,
    "description": "describes the result of scenario execution that",
    "lineNumber": 184
  },
  {
    "__docId__": 468,
    "kind": "test",
    "name": "it58",
    "testId": 58,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe46.describe51.describe57",
    "testDepth": 3,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe46.describe51.describe57.it58",
    "access": null,
    "description": "has finished with success",
    "lineNumber": 199,
    "testTargets": [
      "SerenityBDDReporter",
      "SceneStarts",
      "SceneFinished",
      "TestRunFinishes",
      "ExecutionSuccessful"
    ]
  },
  {
    "__docId__": 469,
    "kind": "test",
    "name": "it59",
    "testId": 59,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe46.describe51.describe57",
    "testDepth": 3,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe46.describe51.describe57.it59",
    "access": null,
    "description": "hasn't been implemented yet",
    "lineNumber": 218,
    "testTargets": [
      "SerenityBDDReporter",
      "SceneStarts",
      "SceneFinished",
      "TestRunFinishes",
      "ImplementationPending"
    ]
  },
  {
    "__docId__": 470,
    "kind": "test",
    "name": "it60",
    "testId": 60,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe46.describe51.describe57",
    "testDepth": 3,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe46.describe51.describe57.it60",
    "access": null,
    "description": "has been ignored",
    "lineNumber": 237,
    "testTargets": [
      "SerenityBDDReporter",
      "SceneStarts",
      "SceneFinished",
      "TestRunFinishes",
      "ExecutionIgnored"
    ]
  },
  {
    "__docId__": 471,
    "kind": "test",
    "name": "it61",
    "testId": 61,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe46.describe51.describe57",
    "testDepth": 3,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe46.describe51.describe57.it61",
    "access": null,
    "description": "has been skipped",
    "lineNumber": 256,
    "testTargets": [
      "SerenityBDDReporter",
      "SceneStarts",
      "SceneFinished",
      "TestRunFinishes",
      "ExecutionSkipped"
    ]
  },
  {
    "__docId__": 472,
    "kind": "test",
    "name": "it62",
    "testId": 62,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe46.describe51.describe57",
    "testDepth": 3,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe46.describe51.describe57.it62",
    "access": null,
    "description": "has failed with an assertion error",
    "lineNumber": 275,
    "testTargets": [
      "SerenityBDDReporter",
      "SceneStarts",
      "SceneFinished",
      "TestRunFinishes",
      "ExecutionFailedWithAssertionError"
    ]
  },
  {
    "__docId__": 473,
    "kind": "test",
    "name": "it63",
    "testId": 63,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe46.describe51.describe57",
    "testDepth": 3,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe46.describe51.describe57.it63",
    "access": null,
    "description": "has been compromised",
    "lineNumber": 300,
    "testTargets": [
      "SerenityBDDReporter",
      "SceneStarts",
      "SceneFinished",
      "TestRunFinishes",
      "TestCompromisedError",
      "ExecutionCompromised"
    ]
  },
  {
    "__docId__": 474,
    "kind": "test",
    "name": "it64",
    "testId": 64,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe46.describe51.describe57",
    "testDepth": 3,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe46.describe51.describe57.it64",
    "access": null,
    "description": "has failed with a non-assertion error",
    "lineNumber": 325,
    "testTargets": [
      "SerenityBDDReporter",
      "SceneStarts",
      "SceneFinished",
      "TestRunFinishes",
      "ExecutionFailedWithError"
    ]
  },
  {
    "__docId__": 475,
    "kind": "test",
    "name": "it65",
    "testId": 65,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe46.describe51.describe57",
    "testDepth": 3,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe46.describe51.describe57.it65",
    "access": null,
    "description": "has been compromised",
    "lineNumber": 367,
    "testTargets": [
      "SerenityBDDReporter",
      "SceneStarts",
      "SceneFinished",
      "TestRunFinishes",
      "ExecutionCompromised"
    ]
  },
  {
    "__docId__": 476,
    "kind": "test",
    "name": "describe66",
    "testId": 66,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe46.describe51",
    "testDepth": 2,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe46.describe51.describe66",
    "access": null,
    "description": "indicates its execution context",
    "lineNumber": 417
  },
  {
    "__docId__": 477,
    "kind": "test",
    "name": "it67",
    "testId": 67,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe46.describe51.describe66",
    "testDepth": 3,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe46.describe51.describe66.it67",
    "access": null,
    "description": "specifies the test runner",
    "lineNumber": 433,
    "testTargets": [
      "SerenityBDDReporter",
      "TestRunnerDetected",
      "SceneStarts",
      "SceneFinished",
      "TestRunFinishes",
      "ExecutionSuccessful"
    ]
  },
  {
    "__docId__": 478,
    "kind": "test",
    "name": "it68",
    "testId": 68,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe46.describe51.describe66",
    "testDepth": 3,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe46.describe51.describe66.it68",
    "access": null,
    "description": "specifies the user story covered",
    "lineNumber": 452,
    "testTargets": [
      "SerenityBDDReporter",
      "SceneStarts",
      "SceneFinished",
      "TestRunFinishes",
      "ExecutionSuccessful"
    ]
  },
  {
    "__docId__": 479,
    "kind": "test",
    "name": "describe69",
    "testId": 69,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe46.describe51.describe66",
    "testDepth": 3,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe46.describe51.describe66.describe69",
    "access": null,
    "description": "reports information from the cucumber feature file",
    "lineNumber": 468
  },
  {
    "__docId__": 480,
    "kind": "test",
    "name": "it70",
    "testId": 70,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe46.describe51.describe66.describe69",
    "testDepth": 4,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe46.describe51.describe66.describe69.it70",
    "access": null,
    "description": "reports the scenario-level narrative",
    "lineNumber": 471,
    "testTargets": [
      "SerenityBDDReporter"
    ]
  },
  {
    "__docId__": 481,
    "kind": "test",
    "name": "it71",
    "testId": 71,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe46.describe51.describe66.describe69",
    "testDepth": 4,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe46.describe51.describe66.describe69.it71",
    "access": null,
    "description": "reports the scenario-level background title",
    "lineNumber": 474,
    "testTargets": [
      "SerenityBDDReporter"
    ]
  },
  {
    "__docId__": 482,
    "kind": "test",
    "name": "it72",
    "testId": 72,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe46.describe51.describe66.describe69",
    "testDepth": 4,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe46.describe51.describe66.describe69.it72",
    "access": null,
    "description": "reports the scenario-level background description",
    "lineNumber": 477,
    "testTargets": [
      "SerenityBDDReporter"
    ]
  },
  {
    "__docId__": 483,
    "kind": "test",
    "name": "describe73",
    "testId": 73,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe46",
    "testDepth": 1,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe46.describe73",
    "access": null,
    "description": "attachements",
    "lineNumber": 482
  },
  {
    "__docId__": 484,
    "kind": "test",
    "name": "it74",
    "testId": 74,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe46.describe73",
    "testDepth": 2,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe46.describe73.it74",
    "access": null,
    "description": "todo",
    "lineNumber": 483
  },
  {
    "__docId__": 485,
    "kind": "test",
    "name": "describe75",
    "testId": 75,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe46",
    "testDepth": 1,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe46.describe75",
    "access": null,
    "description": "Error handling",
    "lineNumber": 491
  },
  {
    "__docId__": 486,
    "kind": "test",
    "name": "it76",
    "testId": 76,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe46.describe75",
    "testDepth": 2,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe46.describe75.it76",
    "access": null,
    "description": "generates the report even when the test runner has crashed",
    "lineNumber": 494
  }
]