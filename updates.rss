<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title><![CDATA[Serenity/JS Handbook]]></title>
        <description><![CDATA[A comprehensive reference manual and tutorials for Serenity/JS, a next generation automated testing library.]]></description>
        <link>http://serenity-js.org/</link>
        <image>
            <url>http://serenity-js.org/assets/images/serenity-js-eye.svg</url>
            <title>Serenity/JS Handbook</title>
            <link>http://serenity-js.org/</link>
        </image>
        <generator>RSS for Node</generator>
        <lastBuildDate>Wed, 23 Jan 2019 17:53:04 GMT</lastBuildDate>
        <atom:link href="http://serenity-js.org/updates.rss" rel="self" type="application/rss+xml"/>
        <author><![CDATA[Jan Molak]]></author>
        <managingEditor><![CDATA[jan.molak@smartcodeltd.co.uk (Jan Molak)]]></managingEditor>
        <webMaster><![CDATA[jan.molak@smartcodeltd.co.uk (Jan Molak)]]></webMaster>
        <category><![CDATA[book]]></category>
        <category><![CDATA[manual]]></category>
        <category><![CDATA[tutorial]]></category>
        <category><![CDATA[bdd]]></category>
        <category><![CDATA[tdd]]></category>
        <category><![CDATA[testing]]></category>
        <category><![CDATA[protractor]]></category>
        <category><![CDATA[mocha]]></category>
        <category><![CDATA[cucumber]]></category>
        <category><![CDATA[angular]]></category>
        <category><![CDATA[bdd]]></category>
        <category><![CDATA[selenium]]></category>
        <category><![CDATA[webdriverjs]]></category>
        <category><![CDATA[webdriver]]></category>
        <item>
            <title><![CDATA[No title]]></title>
            <description><![CDATA[A handbook by Jan Molak]]></description>
            <link>http://serenity-js.org/readme.html</link>
            <guid isPermaLink="true">http://serenity-js.org/readme.html</guid>
            <dc:creator><![CDATA[Jan Molak]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[Introducing Serenity/JS]]></title>
            <description><![CDATA[This recording of our Devoxx 2016 talk will give you an overview of what Serenity/JS is about
and how the Screenplay Pattern can make the design of an automated test more scalable
and easier to change.]]></description>
            <link>http://serenity-js.org/introduction.html</link>
            <guid isPermaLink="true">http://serenity-js.org/introduction.html</guid>
            <dc:creator><![CDATA[Jan Molak]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[Serenity/JS Changelog]]></title>
            <description><![CDATA[{% include "_changelog/serenity-js.md" %}
{% include "_changelog/pre-lerna-changelog.md" %}]]></description>
            <link>http://serenity-js.org/changelog.html</link>
            <guid isPermaLink="true">http://serenity-js.org/changelog.html</guid>
            <dc:creator><![CDATA[Jan Molak]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[From Scripts to Serenity]]></title>
            <description><![CDATA[In this series of 3 tutorials you'll learn how to write automated tests
and generate comprehensive test execution reports
in the context of an Angular application, exercised using
Serenity/JS,
Cucumber,
Protractor,
Selenium WebDriver
and Chai.]]></description>
            <link>http://serenity-js.org/from-scripts-to-serenity/readme.html</link>
            <guid isPermaLink="true">http://serenity-js.org/from-scripts-to-serenity/readme.html</guid>
            <dc:creator><![CDATA[Jan Molak]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[From Scripts to Serenity: Speaking the right language]]></title>
            <description><![CDATA[As applications get more complex, it becomes a priority for test automation systems to capture and clearly express business intent, to ensure that the most important functionality of the system is sufficiently covered. They need to be easy to scale to multiple projects and teams, and all this while keeping maintenance costs to a minimum.]]></description>
            <link>http://serenity-js.org/from-scripts-to-serenity/speaking-the-right-language.html</link>
            <guid isPermaLink="true">http://serenity-js.org/from-scripts-to-serenity/speaking-the-right-language.html</guid>
            <dc:creator><![CDATA[Jan Molak]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[From Scripts to Serenity: Writing what you'd like to read]]></title>
            <description><![CDATA[In the previous article
we looked at how taking
the scripting approach
to test automation can result in a code base that's brittle and difficult to maintain.
We've also talked about how the
Page Object(s) pattern
succeeded in addressing some of those problems, but also introduced some new ones.]]></description>
            <link>http://serenity-js.org/from-scripts-to-serenity/writing-what-you-would-like-to-read.html</link>
            <guid isPermaLink="true">http://serenity-js.org/from-scripts-to-serenity/writing-what-you-would-like-to-read.html</guid>
            <dc:creator><![CDATA[Jan Molak]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[From Scripts to Serenity: Making the tests speak for themselves]]></title>
            <description><![CDATA[In the last tutorial
we looked at the basics of writing acceptance tests that are focused, readable and free of
accidental complexity.
Those characteristics make even the most sophisticated test suites easy to understand, maintain and extend.
We've also introduced the concepts behind the Screenplay Pattern,
an innovative new way of designing automated test systems.]]></description>
            <link>http://serenity-js.org/from-scripts-to-serenity/making-the-tests-speak-for-themselves.html</link>
            <guid isPermaLink="true">http://serenity-js.org/from-scripts-to-serenity/making-the-tests-speak-for-themselves.html</guid>
            <dc:creator><![CDATA[Jan Molak]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[Overview]]></title>
            <description><![CDATA[Serenity/JS is an acceptance testing library that improves and expands the capabilities of Protractor-based
test suites.]]></description>
            <link>http://serenity-js.org/overview/readme.html</link>
            <guid isPermaLink="true">http://serenity-js.org/overview/readme.html</guid>
            <dc:creator><![CDATA[Jan Molak]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[Reporting]]></title>
            <description><![CDATA[Building on the shoulders of Serenity BDD and years of research into
patterns of scalable acceptance testing and effective communication, Serenity/JS provides
the most comprehensive reporting capabilities of all the functional testing libraries based on the Node.js
platform.]]></description>
            <link>http://serenity-js.org/overview/reporting.html</link>
            <guid isPermaLink="true">http://serenity-js.org/overview/reporting.html</guid>
            <dc:creator><![CDATA[Jan Molak]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[Prerequisites]]></title>
            <description><![CDATA[Serenity/JS is a Node.js module. To help you ensure maximum stability,
it relies on a recent, {{ book.package.engines.node }} Long-Term Support (LTS)
version of the Node.js platform.]]></description>
            <link>http://serenity-js.org/overview/prerequisites.html</link>
            <guid isPermaLink="true">http://serenity-js.org/overview/prerequisites.html</guid>
            <dc:creator><![CDATA[Jan Molak]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[Retrofitting]]></title>
            <description><![CDATA[In the most basic scenario, Serenity/JS can act as an integration layer between the Protractor
test runner and either of the Cucumber or Mocha test frameworks.]]></description>
            <link>http://serenity-js.org/overview/retrofitting.html</link>
            <guid isPermaLink="true">http://serenity-js.org/overview/retrofitting.html</guid>
            <dc:creator><![CDATA[Jan Molak]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[Installation]]></title>
            <description><![CDATA[To fully benefit from Serenity/JS and to implement test scenarios using
the Screenplay Pattern and either
Cucumber
or Mocha you'll need the core serenity-js module,
but also a couple of other dependencies.]]></description>
            <link>http://serenity-js.org/overview/installation.html</link>
            <guid isPermaLink="true">http://serenity-js.org/overview/installation.html</guid>
            <dc:creator><![CDATA[Jan Molak]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[Configuration]]></title>
            <description><![CDATA[Serenity/JS can be configured using the Protractor
configuration file - protractor.conf.js,
which then becomes the first argument of the Protractor command line test runner you invoke to execute the tests:]]></description>
            <link>http://serenity-js.org/overview/configuration.html</link>
            <guid isPermaLink="true">http://serenity-js.org/overview/configuration.html</guid>
            <dc:creator><![CDATA[Jan Molak]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[Cucumber]]></title>
            <description><![CDATA[Cucumber is a popular collaboration tool
used by many teams practicing
Behaviour-Driven Development
to capture requirements in a form of concrete examples and executable specifications.]]></description>
            <link>http://serenity-js.org/cucumber/readme.html</link>
            <guid isPermaLink="true">http://serenity-js.org/cucumber/readme.html</guid>
            <dc:creator><![CDATA[Jan Molak]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[Working with Cucumber]]></title>
            <description><![CDATA[Cucumber is a popular collaboration tool
used by many teams practicing
Behaviour-Driven Development
to capture requirements in a form of concrete examples and executable specifications.]]></description>
            <link>http://serenity-js.org/cucumber/overview.html</link>
            <guid isPermaLink="true">http://serenity-js.org/cucumber/overview.html</guid>
            <dc:creator><![CDATA[Jan Molak]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[Automating Cucumber Scenarios]]></title>
            <description><![CDATA[So that a Cucumber scenario can be executed,
the Given/When/Then steps expressed in plain language need to be somehow associated
with the test automation code.]]></description>
            <link>http://serenity-js.org/cucumber/automation.html</link>
            <guid isPermaLink="true">http://serenity-js.org/cucumber/automation.html</guid>
            <dc:creator><![CDATA[Jan Molak]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[Executing Cucumber Scenarios]]></title>
            <description><![CDATA[Cucumber scenarios are executed using the Protractor command line interface,
and since it's installed as a local module,
we need to define an npm script to access it.]]></description>
            <link>http://serenity-js.org/cucumber/execution.html</link>
            <guid isPermaLink="true">http://serenity-js.org/cucumber/execution.html</guid>
            <dc:creator><![CDATA[Jan Molak]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[Mocha]]></title>
            <description><![CDATA[Mocha is a feature-rich JavaScript test framework running on Node.js.]]></description>
            <link>http://serenity-js.org/mocha/readme.html</link>
            <guid isPermaLink="true">http://serenity-js.org/mocha/readme.html</guid>
            <dc:creator><![CDATA[Jan Molak]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[Working with Mocha]]></title>
            <description><![CDATA[Mocha is a popular JavaScript test framework, most often used for unit and integration
testing.
However, Mocha's lightweight syntax and excellent support for executing asynchronous test scenarios,
combined with the power of Serenity/JS, make it a good choice for writing functional acceptance tests
that can either drive the development of new systems or quickly provide a safety net around the legacy ones.]]></description>
            <link>http://serenity-js.org/mocha/overview.html</link>
            <guid isPermaLink="true">http://serenity-js.org/mocha/overview.html</guid>
            <dc:creator><![CDATA[Jan Molak]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[Automation]]></title>
            <description><![CDATA[Let's see how Serenity/JS can be plugged into a Mocha test scenario, and how to use
the describe and it blocks effectively so that both the scenarios and the reports
capture the domain knowledge and vocabulary.]]></description>
            <link>http://serenity-js.org/mocha/automation.html</link>
            <guid isPermaLink="true">http://serenity-js.org/mocha/automation.html</guid>
            <dc:creator><![CDATA[Jan Molak]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[Executing Mocha Scenarios]]></title>
            <description><![CDATA[Mocha scenarios are executed using the Protractor command line interface,
and since it's installed as a local module,
we need to define an npm script to access it.]]></description>
            <link>http://serenity-js.org/mocha/execution.html</link>
            <guid isPermaLink="true">http://serenity-js.org/mocha/execution.html</guid>
            <dc:creator><![CDATA[Jan Molak]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[Design]]></title>
            <description><![CDATA[In this part we'll talk about some of the details of designing test scenarios.]]></description>
            <link>http://serenity-js.org/design/readme.html</link>
            <guid isPermaLink="true">http://serenity-js.org/design/readme.html</guid>
            <dc:creator><![CDATA[Jan Molak]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[The Screenplay Pattern]]></title>
            <description><![CDATA[The Screenplay Pattern is a user-centred model,
which helps you shift the focus of automated acceptance tests from low-level interactions with the system
to thinking about who the users of your system are,
what is that they want to achieve by their interaction with your system
and how exactly they're going to do it.]]></description>
            <link>http://serenity-js.org/design/screenplay-pattern.html</link>
            <guid isPermaLink="true">http://serenity-js.org/design/screenplay-pattern.html</guid>
            <dc:creator><![CDATA[Jan Molak]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[The Stage]]></title>
            <description><![CDATA[The Stage is the central place where the action of a test scenario takes place, and where the actors perform
their activities.]]></description>
            <link>http://serenity-js.org/design/stage.html</link>
            <guid isPermaLink="true">http://serenity-js.org/design/stage.html</guid>
            <dc:creator><![CDATA[Jan Molak]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[Assertions]]></title>
            <description><![CDATA[Serenity/JS does not force you to use any particular assertion library, so you can use any that supports promises.]]></description>
            <link>http://serenity-js.org/design/assertions.html</link>
            <guid isPermaLink="true">http://serenity-js.org/design/assertions.html</guid>
            <dc:creator><![CDATA[Jan Molak]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[Talks, meetups, articles]]></title>
            <description><![CDATA[<img align='absmiddle' alt=':pencil:' class='emoji' src='/gitbook/gitbook-plugin-advanced-emoji/emojis/pencil.png' title=':pencil:' /> If you've written an article, tutorial or a blog post, recorded a video,
or are planning to talk about Serenity/JS at a meetup or a conference, please
[add it to the list below](https://github.com/jan-molak/serenity-js/edit/master/book/{{ file.path }})
to share the news with the community!]]></description>
            <link>http://serenity-js.org/community.html</link>
            <guid isPermaLink="true">http://serenity-js.org/community.html</guid>
            <dc:creator><![CDATA[Jan Molak]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[Support]]></title>
            <description><![CDATA[Serenity/JS is a free and open-source project supported by the community on
github,
where you can report a bug
or suggest a feature.]]></description>
            <link>http://serenity-js.org/support.html</link>
            <guid isPermaLink="true">http://serenity-js.org/support.html</guid>
            <dc:creator><![CDATA[Jan Molak]]></dc:creator>
        </item>
        <item>
            <title><![CDATA[License]]></title>
            <description><![CDATA[Copyright © Jan Molak, smartcode ltd]]></description>
            <link>http://serenity-js.org/license.html</link>
            <guid isPermaLink="true">http://serenity-js.org/license.html</guid>
            <dc:creator><![CDATA[Jan Molak]]></dc:creator>
        </item>
    </channel>
</rss>